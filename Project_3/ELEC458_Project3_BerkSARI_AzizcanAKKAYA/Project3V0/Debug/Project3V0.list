
Project3V0.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004828  080001a8  080001a8  000101a8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000028  080049d0  080049d0  000149d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080049f8  080049f8  00020474  2**0
                  CONTENTS
  4 .ARM          00000000  080049f8  080049f8  00020474  2**0
                  CONTENTS
  5 .preinit_array 00000000  080049f8  080049f8  00020474  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080049f8  080049f8  000149f8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080049fc  080049fc  000149fc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000474  20000000  08004a00  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000108  20000474  08004e74  00020474  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000057c  08004e74  0002057c  2**0
                  ALLOC
 11 .ARM.attributes 00000032  00000000  00000000  00020474  2**0
                  CONTENTS, READONLY
 12 .debug_info   000014ce  00000000  00000000  000204a6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000003f8  00000000  00000000  00021974  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000120  00000000  00000000  00021d70  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000f8  00000000  00000000  00021e90  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00018298  00000000  00000000  00021f88  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000118f  00000000  00000000  0003a220  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00087313  00000000  00000000  0003b3af  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      00000606  00000000  00000000  000c26c2  2**0
                  CONTENTS, READONLY
 20 .iar.rtmodel  0000002a  00000000  00000000  000c2cc8  2**0
                  CONTENTS, READONLY
 21 .iar_vfe_header 00000008  00000000  00000000  000c2cf4  2**2
                  CONTENTS, READONLY
 22 .debug_frame  00001290  00000000  00000000  000c2cfc  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000474 	.word	0x20000474
 80001c4:	00000000 	.word	0x00000000
 80001c8:	080049b8 	.word	0x080049b8

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000478 	.word	0x20000478
 80001e4:	080049b8 	.word	0x080049b8

080001e8 <PDM_Filter_Init>:
 80001e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80001ea:	4604      	mov	r4, r0
 80001ec:	b081      	sub	sp, #4
 80001ee:	2140      	movs	r1, #64	; 0x40
 80001f0:	f104 000c 	add.w	r0, r4, #12
 80001f4:	f003 fdd2 	bl	8003d9c <__aeabi_memclr>
 80001f8:	f8df 6b04 	ldr.w	r6, [pc, #2820]	; 8000d00 <.text_18>
 80001fc:	f8df 0b04 	ldr.w	r0, [pc, #2820]	; 8000d04 <.text_19>
 8000200:	4631      	mov	r1, r6
 8000202:	f001 fdeb 	bl	8001ddc <CRC_Lock>
 8000206:	2500      	movs	r5, #0
 8000208:	2801      	cmp	r0, #1
 800020a:	bf0c      	ite	eq
 800020c:	6466      	streq	r6, [r4, #68]	; 0x44
 800020e:	6465      	strne	r5, [r4, #68]	; 0x44
 8000210:	8960      	ldrh	r0, [r4, #10]
 8000212:	86a0      	strh	r0, [r4, #52]	; 0x34
 8000214:	61a5      	str	r5, [r4, #24]
 8000216:	6125      	str	r5, [r4, #16]
 8000218:	6165      	str	r5, [r4, #20]
 800021a:	60e5      	str	r5, [r4, #12]
 800021c:	6265      	str	r5, [r4, #36]	; 0x24
 800021e:	61e5      	str	r5, [r4, #28]
 8000220:	6225      	str	r5, [r4, #32]
 8000222:	6425      	str	r5, [r4, #64]	; 0x40
 8000224:	8920      	ldrh	r0, [r4, #8]
 8000226:	86e0      	strh	r0, [r4, #54]	; 0x36
 8000228:	8821      	ldrh	r1, [r4, #0]
 800022a:	2901      	cmp	r1, #1
 800022c:	d003      	beq.n	8000236 <PDM_Filter_Init+0x4e>
 800022e:	2900      	cmp	r1, #0
 8000230:	d047      	beq.n	80002c2 <PDM_Filter_Init+0xda>
 8000232:	2502      	movs	r5, #2
 8000234:	e087      	b.n	8000346 <PDM_Filter_Init+0x15e>
 8000236:	f8df 0ad0 	ldr.w	r0, [pc, #2768]	; 8000d08 <.text_20>
 800023a:	7802      	ldrb	r2, [r0, #0]
 800023c:	2a00      	cmp	r2, #0
 800023e:	d13e      	bne.n	80002be <PDM_Filter_Init+0xd6>
 8000240:	f05f 0300 	movs.w	r3, #0
 8000244:	f8df 1ac4 	ldr.w	r1, [pc, #2756]	; 8000d0c <.text_21>
 8000248:	f8df 2d14 	ldr.w	r2, [pc, #3348]	; 8000f60 <.text_23>
 800024c:	eb00 0683 	add.w	r6, r0, r3, lsl #2
 8000250:	1c5b      	adds	r3, r3, #1
 8000252:	6877      	ldr	r7, [r6, #4]
 8000254:	ea02 5c07 	and.w	ip, r2, r7, lsl #20
 8000258:	ea01 0e07 	and.w	lr, r1, r7
 800025c:	44f4      	add	ip, lr
 800025e:	f3c7 5709 	ubfx	r7, r7, #20, #10
 8000262:	4467      	add	r7, ip
 8000264:	6077      	str	r7, [r6, #4]
 8000266:	eb00 0683 	add.w	r6, r0, r3, lsl #2
 800026a:	1c5b      	adds	r3, r3, #1
 800026c:	6877      	ldr	r7, [r6, #4]
 800026e:	ea02 5c07 	and.w	ip, r2, r7, lsl #20
 8000272:	ea01 0e07 	and.w	lr, r1, r7
 8000276:	44f4      	add	ip, lr
 8000278:	f3c7 5709 	ubfx	r7, r7, #20, #10
 800027c:	4467      	add	r7, ip
 800027e:	6077      	str	r7, [r6, #4]
 8000280:	eb00 0683 	add.w	r6, r0, r3, lsl #2
 8000284:	1c5b      	adds	r3, r3, #1
 8000286:	6877      	ldr	r7, [r6, #4]
 8000288:	ea02 5c07 	and.w	ip, r2, r7, lsl #20
 800028c:	ea01 0e07 	and.w	lr, r1, r7
 8000290:	44f4      	add	ip, lr
 8000292:	f3c7 5709 	ubfx	r7, r7, #20, #10
 8000296:	4467      	add	r7, ip
 8000298:	6077      	str	r7, [r6, #4]
 800029a:	eb00 0683 	add.w	r6, r0, r3, lsl #2
 800029e:	1c5b      	adds	r3, r3, #1
 80002a0:	6877      	ldr	r7, [r6, #4]
 80002a2:	ea02 5c07 	and.w	ip, r2, r7, lsl #20
 80002a6:	ea01 0e07 	and.w	lr, r1, r7
 80002aa:	44f4      	add	ip, lr
 80002ac:	f3c7 5709 	ubfx	r7, r7, #20, #10
 80002b0:	4467      	add	r7, ip
 80002b2:	2bff      	cmp	r3, #255	; 0xff
 80002b4:	6077      	str	r7, [r6, #4]
 80002b6:	ddc9      	ble.n	800024c <PDM_Filter_Init+0x64>
 80002b8:	2101      	movs	r1, #1
 80002ba:	7001      	strb	r1, [r0, #0]
 80002bc:	e043      	b.n	8000346 <PDM_Filter_Init+0x15e>
 80002be:	2900      	cmp	r1, #0
 80002c0:	d141      	bne.n	8000346 <PDM_Filter_Init+0x15e>
 80002c2:	f8df 0a44 	ldr.w	r0, [pc, #2628]	; 8000d08 <.text_20>
 80002c6:	7801      	ldrb	r1, [r0, #0]
 80002c8:	2901      	cmp	r1, #1
 80002ca:	d13c      	bne.n	8000346 <PDM_Filter_Init+0x15e>
 80002cc:	f05f 0300 	movs.w	r3, #0
 80002d0:	f8df 1a38 	ldr.w	r1, [pc, #2616]	; 8000d0c <.text_21>
 80002d4:	f8df 2c88 	ldr.w	r2, [pc, #3208]	; 8000f60 <.text_23>
 80002d8:	eb00 0683 	add.w	r6, r0, r3, lsl #2
 80002dc:	1c5b      	adds	r3, r3, #1
 80002de:	6877      	ldr	r7, [r6, #4]
 80002e0:	ea02 5c07 	and.w	ip, r2, r7, lsl #20
 80002e4:	ea01 0e07 	and.w	lr, r1, r7
 80002e8:	44f4      	add	ip, lr
 80002ea:	f3c7 5709 	ubfx	r7, r7, #20, #10
 80002ee:	4467      	add	r7, ip
 80002f0:	6077      	str	r7, [r6, #4]
 80002f2:	eb00 0683 	add.w	r6, r0, r3, lsl #2
 80002f6:	1c5b      	adds	r3, r3, #1
 80002f8:	6877      	ldr	r7, [r6, #4]
 80002fa:	ea02 5c07 	and.w	ip, r2, r7, lsl #20
 80002fe:	ea01 0e07 	and.w	lr, r1, r7
 8000302:	44f4      	add	ip, lr
 8000304:	f3c7 5709 	ubfx	r7, r7, #20, #10
 8000308:	4467      	add	r7, ip
 800030a:	6077      	str	r7, [r6, #4]
 800030c:	eb00 0683 	add.w	r6, r0, r3, lsl #2
 8000310:	1c5b      	adds	r3, r3, #1
 8000312:	6877      	ldr	r7, [r6, #4]
 8000314:	ea02 5c07 	and.w	ip, r2, r7, lsl #20
 8000318:	ea01 0e07 	and.w	lr, r1, r7
 800031c:	44f4      	add	ip, lr
 800031e:	f3c7 5709 	ubfx	r7, r7, #20, #10
 8000322:	4467      	add	r7, ip
 8000324:	6077      	str	r7, [r6, #4]
 8000326:	eb00 0683 	add.w	r6, r0, r3, lsl #2
 800032a:	1c5b      	adds	r3, r3, #1
 800032c:	6877      	ldr	r7, [r6, #4]
 800032e:	ea02 5c07 	and.w	ip, r2, r7, lsl #20
 8000332:	ea01 0e07 	and.w	lr, r1, r7
 8000336:	44f4      	add	ip, lr
 8000338:	f3c7 5709 	ubfx	r7, r7, #20, #10
 800033c:	4467      	add	r7, ip
 800033e:	2bff      	cmp	r3, #255	; 0xff
 8000340:	6077      	str	r7, [r6, #4]
 8000342:	ddc9      	ble.n	80002d8 <PDM_Filter_Init+0xf0>
 8000344:	7005      	strb	r5, [r0, #0]
 8000346:	8860      	ldrh	r0, [r4, #2]
 8000348:	0001      	movs	r1, r0
 800034a:	d006      	beq.n	800035a <PDM_Filter_Init+0x172>
 800034c:	2801      	cmp	r0, #1
 800034e:	bf11      	iteee	ne
 8000350:	1c6d      	addne	r5, r5, #1
 8000352:	6c20      	ldreq	r0, [r4, #64]	; 0x40
 8000354:	f040 0020 	orreq.w	r0, r0, #32
 8000358:	6420      	streq	r0, [r4, #64]	; 0x40
 800035a:	8ea0      	ldrh	r0, [r4, #52]	; 0x34
 800035c:	2801      	cmp	r0, #1
 800035e:	bf04      	itt	eq
 8000360:	8ee0      	ldrheq	r0, [r4, #54]	; 0x36
 8000362:	2801      	cmpeq	r0, #1
 8000364:	d103      	bne.n	800036e <PDM_Filter_Init+0x186>
 8000366:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8000368:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 800036c:	6420      	str	r0, [r4, #64]	; 0x40
 800036e:	6860      	ldr	r0, [r4, #4]
 8000370:	b128      	cbz	r0, 800037e <PDM_Filter_Init+0x196>
 8000372:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8000374:	f040 0010 	orr.w	r0, r0, #16
 8000378:	6420      	str	r0, [r4, #64]	; 0x40
 800037a:	6860      	ldr	r0, [r4, #4]
 800037c:	62e0      	str	r0, [r4, #44]	; 0x2c
 800037e:	2000      	movs	r0, #0
 8000380:	8720      	strh	r0, [r4, #56]	; 0x38
 8000382:	b915      	cbnz	r5, 800038a <PDM_Filter_Init+0x1a2>
 8000384:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8000386:	3080      	adds	r0, #128	; 0x80
 8000388:	6420      	str	r0, [r4, #64]	; 0x40
 800038a:	4628      	mov	r0, r5
 800038c:	b001      	add	sp, #4
 800038e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08000390 <PDM_Filter_setConfig>:
 8000390:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000392:	b081      	sub	sp, #4
 8000394:	4604      	mov	r4, r0
 8000396:	ed2d 8b02 	vpush	{d8}
 800039a:	460d      	mov	r5, r1
 800039c:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800039e:	f8df 1960 	ldr.w	r1, [pc, #2400]	; 8000d00 <.text_18>
 80003a2:	2600      	movs	r6, #0
 80003a4:	4288      	cmp	r0, r1
 80003a6:	bf18      	it	ne
 80003a8:	2004      	movne	r0, #4
 80003aa:	f040 80e2 	bne.w	8000572 <PDM_Filter_setConfig+0x1e2>
 80003ae:	6c20      	ldr	r0, [r4, #64]	; 0x40
 80003b0:	f420 7180 	bic.w	r1, r0, #256	; 0x100
 80003b4:	6421      	str	r1, [r4, #64]	; 0x40
 80003b6:	8828      	ldrh	r0, [r5, #0]
 80003b8:	2805      	cmp	r0, #5
 80003ba:	bf18      	it	ne
 80003bc:	2806      	cmpne	r0, #6
 80003be:	d01d      	beq.n	80003fc <PDM_Filter_setConfig+0x6c>
 80003c0:	2807      	cmp	r0, #7
 80003c2:	bf18      	it	ne
 80003c4:	2801      	cmpne	r0, #1
 80003c6:	d019      	beq.n	80003fc <PDM_Filter_setConfig+0x6c>
 80003c8:	2802      	cmp	r0, #2
 80003ca:	bf1c      	itt	ne
 80003cc:	2803      	cmpne	r0, #3
 80003ce:	2804      	cmpne	r0, #4
 80003d0:	d014      	beq.n	80003fc <PDM_Filter_setConfig+0x6c>
 80003d2:	2608      	movs	r6, #8
 80003d4:	f9b4 1038 	ldrsh.w	r1, [r4, #56]	; 0x38
 80003d8:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80003dc:	4291      	cmp	r1, r2
 80003de:	bf04      	itt	eq
 80003e0:	8e21      	ldrheq	r1, [r4, #48]	; 0x30
 80003e2:	4281      	cmpeq	r1, r0
 80003e4:	f000 80bd 	beq.w	8000562 <PDM_Filter_setConfig+0x1d2>
 80003e8:	f9b5 7004 	ldrsh.w	r7, [r5, #4]
 80003ec:	f117 0f0c 	cmn.w	r7, #12
 80003f0:	da5d      	bge.n	80004ae <PDM_Filter_setConfig+0x11e>
 80003f2:	f06f 000b 	mvn.w	r0, #11
 80003f6:	80a8      	strh	r0, [r5, #4]
 80003f8:	3640      	adds	r6, #64	; 0x40
 80003fa:	e0b0      	b.n	800055e <PDM_Filter_setConfig+0x1ce>
 80003fc:	8e22      	ldrh	r2, [r4, #48]	; 0x30
 80003fe:	4282      	cmp	r2, r0
 8000400:	d0e8      	beq.n	80003d4 <PDM_Filter_setConfig+0x44>
 8000402:	0909      	lsrs	r1, r1, #4
 8000404:	ea40 1101 	orr.w	r1, r0, r1, lsl #4
 8000408:	6421      	str	r1, [r4, #64]	; 0x40
 800040a:	f001 020f 	and.w	r2, r1, #15
 800040e:	f001 0170 	and.w	r1, r1, #112	; 0x70
 8000412:	2970      	cmp	r1, #112	; 0x70
 8000414:	d125      	bne.n	8000462 <PDM_Filter_setConfig+0xd2>
 8000416:	1e52      	subs	r2, r2, #1
 8000418:	2a06      	cmp	r2, #6
 800041a:	d8db      	bhi.n	80003d4 <PDM_Filter_setConfig+0x44>
 800041c:	e8df f002 	tbb	[pc, r2]
 8000420:	1d191511 	.word	0x1d191511
 8000424:	000d0905 	.word	0x000d0905
 8000428:	e7d4      	b.n	80003d4 <PDM_Filter_setConfig+0x44>
 800042a:	f8df 0b38 	ldr.w	r0, [pc, #2872]	; 8000f64 <.text_24>
 800042e:	64a0      	str	r0, [r4, #72]	; 0x48
 8000430:	e7da      	b.n	80003e8 <PDM_Filter_setConfig+0x58>
 8000432:	f8df 0b34 	ldr.w	r0, [pc, #2868]	; 8000f68 <.text_25>
 8000436:	64a0      	str	r0, [r4, #72]	; 0x48
 8000438:	e7d6      	b.n	80003e8 <PDM_Filter_setConfig+0x58>
 800043a:	f8df 0b30 	ldr.w	r0, [pc, #2864]	; 8000f6c <.text_26>
 800043e:	64a0      	str	r0, [r4, #72]	; 0x48
 8000440:	e7d2      	b.n	80003e8 <PDM_Filter_setConfig+0x58>
 8000442:	f8df 0b2c 	ldr.w	r0, [pc, #2860]	; 8000f70 <.text_27>
 8000446:	64a0      	str	r0, [r4, #72]	; 0x48
 8000448:	e7ce      	b.n	80003e8 <PDM_Filter_setConfig+0x58>
 800044a:	f8df 0b28 	ldr.w	r0, [pc, #2856]	; 8000f74 <.text_28>
 800044e:	64a0      	str	r0, [r4, #72]	; 0x48
 8000450:	e7ca      	b.n	80003e8 <PDM_Filter_setConfig+0x58>
 8000452:	f8df 0b24 	ldr.w	r0, [pc, #2852]	; 8000f78 <.text_29>
 8000456:	64a0      	str	r0, [r4, #72]	; 0x48
 8000458:	e7c6      	b.n	80003e8 <PDM_Filter_setConfig+0x58>
 800045a:	f8df 0b20 	ldr.w	r0, [pc, #2848]	; 8000f7c <.text_30>
 800045e:	64a0      	str	r0, [r4, #72]	; 0x48
 8000460:	e7c2      	b.n	80003e8 <PDM_Filter_setConfig+0x58>
 8000462:	1e52      	subs	r2, r2, #1
 8000464:	2a06      	cmp	r2, #6
 8000466:	d8b5      	bhi.n	80003d4 <PDM_Filter_setConfig+0x44>
 8000468:	e8df f002 	tbb	[pc, r2]
 800046c:	1d191511 	.word	0x1d191511
 8000470:	000d0905 	.word	0x000d0905
 8000474:	e7ae      	b.n	80003d4 <PDM_Filter_setConfig+0x44>
 8000476:	f20f 1055 	addw	r0, pc, #341	; 0x155
 800047a:	64a0      	str	r0, [r4, #72]	; 0x48
 800047c:	e7b4      	b.n	80003e8 <PDM_Filter_setConfig+0x58>
 800047e:	f20f 2039 	addw	r0, pc, #569	; 0x239
 8000482:	64a0      	str	r0, [r4, #72]	; 0x48
 8000484:	e7b0      	b.n	80003e8 <PDM_Filter_setConfig+0x58>
 8000486:	f20f 3099 	addw	r0, pc, #921	; 0x399
 800048a:	64a0      	str	r0, [r4, #72]	; 0x48
 800048c:	e7ac      	b.n	80003e8 <PDM_Filter_setConfig+0x58>
 800048e:	f20f 40d5 	addw	r0, pc, #1237	; 0x4d5
 8000492:	64a0      	str	r0, [r4, #72]	; 0x48
 8000494:	e7a8      	b.n	80003e8 <PDM_Filter_setConfig+0x58>
 8000496:	f20f 6079 	addw	r0, pc, #1657	; 0x679
 800049a:	64a0      	str	r0, [r4, #72]	; 0x48
 800049c:	e7a4      	b.n	80003e8 <PDM_Filter_setConfig+0x58>
 800049e:	f60f 0071 	addw	r0, pc, #2161	; 0x871
 80004a2:	64a0      	str	r0, [r4, #72]	; 0x48
 80004a4:	e7a0      	b.n	80003e8 <PDM_Filter_setConfig+0x58>
 80004a6:	f60f 20dd 	addw	r0, pc, #2781	; 0xadd
 80004aa:	64a0      	str	r0, [r4, #72]	; 0x48
 80004ac:	e79c      	b.n	80003e8 <PDM_Filter_setConfig+0x58>
 80004ae:	2f34      	cmp	r7, #52	; 0x34
 80004b0:	db03      	blt.n	80004ba <PDM_Filter_setConfig+0x12a>
 80004b2:	2033      	movs	r0, #51	; 0x33
 80004b4:	80a8      	strh	r0, [r5, #4]
 80004b6:	3640      	adds	r6, #64	; 0x40
 80004b8:	e051      	b.n	800055e <PDM_Filter_setConfig+0x1ce>
 80004ba:	f894 0040 	ldrb.w	r0, [r4, #64]	; 0x40
 80004be:	f000 000f 	and.w	r0, r0, #15
 80004c2:	1e40      	subs	r0, r0, #1
 80004c4:	2806      	cmp	r0, #6
 80004c6:	ed9f 8ad0 	vldr	s16, [pc, #832]	; 8000808 <.text_9>
 80004ca:	eddf 8acf 	vldr	s17, [pc, #828]	; 8000808 <.text_9>
 80004ce:	d827      	bhi.n	8000520 <PDM_Filter_setConfig+0x190>
 80004d0:	e8df f000 	tbb	[pc, r0]
 80004d4:	221d1813 	.word	0x221d1813
 80004d8:	000e0904 	.word	0x000e0904
 80004dc:	eeb3 8a00 	vmov.f32	s16, #48	; 0x41800000  16.0
 80004e0:	eddf 8aca 	vldr	s17, [pc, #808]	; 800080c <.text_10>
 80004e4:	e01c      	b.n	8000520 <PDM_Filter_setConfig+0x190>
 80004e6:	eeb2 8a0c 	vmov.f32	s16, #44	; 0x41600000  14.0
 80004ea:	eddf 8ac9 	vldr	s17, [pc, #804]	; 8000810 <.text_11>
 80004ee:	e017      	b.n	8000520 <PDM_Filter_setConfig+0x190>
 80004f0:	eeb2 8a0a 	vmov.f32	s16, #42	; 0x41500000  13.0
 80004f4:	eef2 8a00 	vmov.f32	s17, #32	; 0x41000000  8.0
 80004f8:	e012      	b.n	8000520 <PDM_Filter_setConfig+0x190>
 80004fa:	eeb2 8a06 	vmov.f32	s16, #38	; 0x41300000  11.0
 80004fe:	eddf 8ac5 	vldr	s17, [pc, #788]	; 8000814 <.text_12>
 8000502:	e00d      	b.n	8000520 <PDM_Filter_setConfig+0x190>
 8000504:	eeb2 8a04 	vmov.f32	s16, #36	; 0x41200000  10.0
 8000508:	eef7 8a00 	vmov.f32	s17, #112	; 0x3f800000  1.0
 800050c:	e008      	b.n	8000520 <PDM_Filter_setConfig+0x190>
 800050e:	eeb2 8a02 	vmov.f32	s16, #34	; 0x41100000  9.0
 8000512:	eddf 8ac1 	vldr	s17, [pc, #772]	; 8000818 <.text_13>
 8000516:	e003      	b.n	8000520 <PDM_Filter_setConfig+0x190>
 8000518:	eeb1 8a0c 	vmov.f32	s16, #28	; 0x40e00000  7.0
 800051c:	eef4 8a00 	vmov.f32	s17, #64	; 0x3e000000  0.125
 8000520:	ee00 7a10 	vmov	s0, r7
 8000524:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8000528:	eef3 0a04 	vmov.f32	s1, #52	; 0x41a00000  20.0
 800052c:	eec0 0a20 	vdiv.f32	s1, s0, s1
 8000530:	eeb2 0a04 	vmov.f32	s0, #36	; 0x41200000  10.0
 8000534:	f003 fc8a 	bl	8003e4c <powf>
 8000538:	ee60 8a28 	vmul.f32	s17, s0, s17
 800053c:	ed9f 0ab7 	vldr	s0, [pc, #732]	; 800081c <.text_14>
 8000540:	ee70 0a48 	vsub.f32	s1, s0, s16
 8000544:	eeb0 0a00 	vmov.f32	s0, #0	; 0x40000000  2.0
 8000548:	f003 fc80 	bl	8003e4c <powf>
 800054c:	ee28 0a80 	vmul.f32	s0, s17, s0
 8000550:	f003 fc58 	bl	8003e04 <roundf>
 8000554:	eebc 0ac0 	vcvt.u32.f32	s0, s0
 8000558:	ed84 0a0f 	vstr	s0, [r4, #60]	; 0x3c
 800055c:	8727      	strh	r7, [r4, #56]	; 0x38
 800055e:	8828      	ldrh	r0, [r5, #0]
 8000560:	8620      	strh	r0, [r4, #48]	; 0x30
 8000562:	8868      	ldrh	r0, [r5, #2]
 8000564:	8660      	strh	r0, [r4, #50]	; 0x32
 8000566:	b91e      	cbnz	r6, 8000570 <PDM_Filter_setConfig+0x1e0>
 8000568:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800056a:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 800056e:	6420      	str	r0, [r4, #64]	; 0x40
 8000570:	4630      	mov	r0, r6
 8000572:	ecbd 8b02 	vpop	{d8}
 8000576:	b001      	add	sp, #4
 8000578:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800057a <PDM_Filter_getConfig>:
 800057a:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800057c:	f8df 3780 	ldr.w	r3, [pc, #1920]	; 8000d00 <.text_18>
 8000580:	429a      	cmp	r2, r3
 8000582:	d001      	beq.n	8000588 <PDM_Filter_getConfig+0xe>
 8000584:	2004      	movs	r0, #4
 8000586:	4770      	bx	lr
 8000588:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 800058a:	804a      	strh	r2, [r1, #2]
 800058c:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 800058e:	800a      	strh	r2, [r1, #0]
 8000590:	8f00      	ldrh	r0, [r0, #56]	; 0x38
 8000592:	8088      	strh	r0, [r1, #4]
 8000594:	2000      	movs	r0, #0
 8000596:	4770      	bx	lr

08000598 <PDM_Filter>:
 8000598:	b410      	push	{r4}
 800059a:	4613      	mov	r3, r2
 800059c:	b081      	sub	sp, #4
 800059e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80005a0:	f8df 475c 	ldr.w	r4, [pc, #1884]	; 8000d00 <.text_18>
 80005a4:	42a2      	cmp	r2, r4
 80005a6:	bf18      	it	ne
 80005a8:	2004      	movne	r0, #4
 80005aa:	d106      	bne.n	80005ba <PDM_Filter+0x22>
 80005ac:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80005ae:	05d4      	lsls	r4, r2, #23
 80005b0:	d406      	bmi.n	80005c0 <PDM_Filter+0x28>
 80005b2:	2020      	movs	r0, #32
 80005b4:	0611      	lsls	r1, r2, #24
 80005b6:	bf58      	it	pl
 80005b8:	2030      	movpl	r0, #48	; 0x30
 80005ba:	b001      	add	sp, #4
 80005bc:	bc10      	pop	{r4}
 80005be:	4770      	bx	lr
 80005c0:	f103 020c 	add.w	r2, r3, #12
 80005c4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80005c6:	b001      	add	sp, #4
 80005c8:	bc10      	pop	{r4}

080005ca <__iar_annotation$$tailcall>:
 80005ca:	4718      	bx	r3

080005cc <D16_GENERIC>:
 80005cc:	e92d 4ff2 	stmdb	sp!, {r1, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80005d0:	b082      	sub	sp, #8
 80005d2:	f8d2 e010 	ldr.w	lr, [r2, #16]
 80005d6:	f8d2 8014 	ldr.w	r8, [r2, #20]
 80005da:	6991      	ldr	r1, [r2, #24]
 80005dc:	f8d2 a01c 	ldr.w	sl, [r2, #28]
 80005e0:	f8d2 c008 	ldr.w	ip, [r2, #8]
 80005e4:	68d3      	ldr	r3, [r2, #12]
 80005e6:	6b15      	ldr	r5, [r2, #48]	; 0x30
 80005e8:	f8df 9994 	ldr.w	r9, [pc, #2452]	; 8000f80 <.text_31>
 80005ec:	9501      	str	r5, [sp, #4]
 80005ee:	2400      	movs	r4, #0
 80005f0:	6b55      	ldr	r5, [r2, #52]	; 0x34
 80005f2:	9500      	str	r5, [sp, #0]
 80005f4:	8cd6      	ldrh	r6, [r2, #38]	; 0x26
 80005f6:	f8df 5d04 	ldr.w	r5, [pc, #3332]	; 80012fc <.text_33>
 80005fa:	2e00      	cmp	r6, #0
 80005fc:	d04d      	beq.n	800069a <D16_GENERIC+0xce>
 80005fe:	8d57      	ldrh	r7, [r2, #42]	; 0x2a
 8000600:	2f01      	cmp	r7, #1
 8000602:	d106      	bne.n	8000612 <D16_GENERIC+0x46>
 8000604:	9f00      	ldr	r7, [sp, #0]
 8000606:	f850 6b02 	ldr.w	r6, [r0], #2
 800060a:	06bf      	lsls	r7, r7, #26
 800060c:	d509      	bpl.n	8000622 <D16_GENERIC+0x56>
 800060e:	ba76      	rev16	r6, r6
 8000610:	e007      	b.n	8000622 <D16_GENERIC+0x56>
 8000612:	b2ff      	uxtb	r7, r7
 8000614:	f890 b000 	ldrb.w	fp, [r0]
 8000618:	5dc6      	ldrb	r6, [r0, r7]
 800061a:	eb0b 2606 	add.w	r6, fp, r6, lsl #8
 800061e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8000622:	f8df 76e4 	ldr.w	r7, [pc, #1764]	; 8000d08 <.text_20>
 8000626:	f006 0bff 	and.w	fp, r6, #255	; 0xff
 800062a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 800062e:	eb07 0b8b 	add.w	fp, r7, fp, lsl #2
 8000632:	eb07 0686 	add.w	r6, r7, r6, lsl #2
 8000636:	f8db b004 	ldr.w	fp, [fp, #4]
 800063a:	6876      	ldr	r6, [r6, #4]
 800063c:	44d3      	add	fp, sl
 800063e:	eb06 269b 	add.w	r6, r6, fp, lsr #10
 8000642:	f3cb 0a09 	ubfx	sl, fp, #0, #10
 8000646:	f3c6 0709 	ubfx	r7, r6, #0, #10
 800064a:	ea47 470a 	orr.w	r7, r7, sl, lsl #16
 800064e:	ea4f 2a96 	mov.w	sl, r6, lsr #10
 8000652:	fb27 c609 	smlad	r6, r7, r9, ip
 8000656:	fb27 fc05 	smuad	ip, r7, r5
 800065a:	9f00      	ldr	r7, [sp, #0]
 800065c:	06ff      	lsls	r7, r7, #27
 800065e:	f5a6 6600 	sub.w	r6, r6, #2048	; 0x800
 8000662:	d509      	bpl.n	8000678 <D16_GENERIC+0xac>
 8000664:	6a17      	ldr	r7, [r2, #32]
 8000666:	44b6      	add	lr, r6
 8000668:	ebae 0e08 	sub.w	lr, lr, r8
 800066c:	fb5e fe17 	smmulr	lr, lr, r7
 8000670:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 8000674:	46b0      	mov	r8, r6
 8000676:	4676      	mov	r6, lr
 8000678:	9f01      	ldr	r7, [sp, #4]
 800067a:	0436      	lsls	r6, r6, #16
 800067c:	fb56 f617 	smmulr	r6, r6, r7
 8000680:	f326 0b8f 	ssat	fp, #16, r6, asr #2
 8000684:	9f02      	ldr	r7, [sp, #8]
 8000686:	8d16      	ldrh	r6, [r2, #40]	; 0x28
 8000688:	b2a4      	uxth	r4, r4
 800068a:	4366      	muls	r6, r4
 800068c:	f827 b016 	strh.w	fp, [r7, r6, lsl #1]
 8000690:	1c64      	adds	r4, r4, #1
 8000692:	8cd7      	ldrh	r7, [r2, #38]	; 0x26
 8000694:	b2a6      	uxth	r6, r4
 8000696:	42be      	cmp	r6, r7
 8000698:	d3b1      	bcc.n	80005fe <D16_GENERIC+0x32>
 800069a:	f8c2 c008 	str.w	ip, [r2, #8]
 800069e:	60d3      	str	r3, [r2, #12]
 80006a0:	f8c2 a01c 	str.w	sl, [r2, #28]
 80006a4:	f8c2 e010 	str.w	lr, [r2, #16]
 80006a8:	f8c2 8014 	str.w	r8, [r2, #20]
 80006ac:	6191      	str	r1, [r2, #24]
 80006ae:	2000      	movs	r0, #0
 80006b0:	b003      	add	sp, #12
 80006b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080006b8 <D24_GENERIC>:
 80006b8:	e92d 4ff2 	stmdb	sp!, {r1, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80006bc:	b083      	sub	sp, #12
 80006be:	4601      	mov	r1, r0
 80006c0:	6913      	ldr	r3, [r2, #16]
 80006c2:	f8d2 8014 	ldr.w	r8, [r2, #20]
 80006c6:	6990      	ldr	r0, [r2, #24]
 80006c8:	f8df cce0 	ldr.w	ip, [pc, #3296]	; 80013ac <.text_35>
 80006cc:	f8df e8b0 	ldr.w	lr, [pc, #2224]	; 8000f80 <.text_31>
 80006d0:	9002      	str	r0, [sp, #8]
 80006d2:	69d5      	ldr	r5, [r2, #28]
 80006d4:	f8d2 9008 	ldr.w	r9, [r2, #8]
 80006d8:	f8d2 a00c 	ldr.w	sl, [r2, #12]
 80006dc:	6b10      	ldr	r0, [r2, #48]	; 0x30
 80006de:	9001      	str	r0, [sp, #4]
 80006e0:	6b50      	ldr	r0, [r2, #52]	; 0x34
 80006e2:	9000      	str	r0, [sp, #0]
 80006e4:	2000      	movs	r0, #0
 80006e6:	8cd4      	ldrh	r4, [r2, #38]	; 0x26
 80006e8:	2c00      	cmp	r4, #0
 80006ea:	f000 807f 	beq.w	80007ec <D24_GENERIC+0x134>
 80006ee:	8d56      	ldrh	r6, [r2, #42]	; 0x2a
 80006f0:	780c      	ldrb	r4, [r1, #0]
 80006f2:	2e01      	cmp	r6, #1
 80006f4:	d11f      	bne.n	8000736 <D24_GENERIC+0x7e>
 80006f6:	9e00      	ldr	r6, [sp, #0]
 80006f8:	06b6      	lsls	r6, r6, #26
 80006fa:	d514      	bpl.n	8000726 <D24_GENERIC+0x6e>
 80006fc:	eb00 77d0 	add.w	r7, r0, r0, lsr #31
 8000700:	107f      	asrs	r7, r7, #1
 8000702:	78ce      	ldrb	r6, [r1, #3]
 8000704:	ebb0 0747 	subs.w	r7, r0, r7, lsl #1
 8000708:	d106      	bne.n	8000718 <D24_GENERIC+0x60>
 800070a:	0224      	lsls	r4, r4, #8
 800070c:	eb04 4406 	add.w	r4, r4, r6, lsl #16
 8000710:	784e      	ldrb	r6, [r1, #1]
 8000712:	19a7      	adds	r7, r4, r6
 8000714:	1c89      	adds	r1, r1, #2
 8000716:	e01b      	b.n	8000750 <D24_GENERIC+0x98>
 8000718:	788f      	ldrb	r7, [r1, #2]
 800071a:	0236      	lsls	r6, r6, #8
 800071c:	eb06 4607 	add.w	r6, r6, r7, lsl #16
 8000720:	19a7      	adds	r7, r4, r6
 8000722:	1d09      	adds	r1, r1, #4
 8000724:	e014      	b.n	8000750 <D24_GENERIC+0x98>
 8000726:	784f      	ldrb	r7, [r1, #1]
 8000728:	788e      	ldrb	r6, [r1, #2]
 800072a:	023f      	lsls	r7, r7, #8
 800072c:	eb07 4606 	add.w	r6, r7, r6, lsl #16
 8000730:	19a7      	adds	r7, r4, r6
 8000732:	1cc9      	adds	r1, r1, #3
 8000734:	e00c      	b.n	8000750 <D24_GENERIC+0x98>
 8000736:	b2f6      	uxtb	r6, r6
 8000738:	f811 b006 	ldrb.w	fp, [r1, r6]
 800073c:	f811 7016 	ldrb.w	r7, [r1, r6, lsl #1]
 8000740:	ea4f 2b0b 	mov.w	fp, fp, lsl #8
 8000744:	eb0b 4707 	add.w	r7, fp, r7, lsl #16
 8000748:	19e7      	adds	r7, r4, r7
 800074a:	eb06 0446 	add.w	r4, r6, r6, lsl #1
 800074e:	1909      	adds	r1, r1, r4
 8000750:	f8df 45b4 	ldr.w	r4, [pc, #1460]	; 8000d08 <.text_20>
 8000754:	f007 06ff 	and.w	r6, r7, #255	; 0xff
 8000758:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 800075c:	6876      	ldr	r6, [r6, #4]
 800075e:	eb06 2695 	add.w	r6, r6, r5, lsr #10
 8000762:	0a3d      	lsrs	r5, r7, #8
 8000764:	f005 0bff 	and.w	fp, r5, #255	; 0xff
 8000768:	eb04 0b8b 	add.w	fp, r4, fp, lsl #2
 800076c:	0a2d      	lsrs	r5, r5, #8
 800076e:	f8db b004 	ldr.w	fp, [fp, #4]
 8000772:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8000776:	f3c6 0709 	ubfx	r7, r6, #0, #10
 800077a:	eb0b 2b96 	add.w	fp, fp, r6, lsr #10
 800077e:	686d      	ldr	r5, [r5, #4]
 8000780:	f3cb 0609 	ubfx	r6, fp, #0, #10
 8000784:	ea46 4607 	orr.w	r6, r6, r7, lsl #16
 8000788:	eb05 259b 	add.w	r5, r5, fp, lsr #10
 800078c:	f3c5 0709 	ubfx	r7, r5, #0, #10
 8000790:	fb26 a40e 	smlad	r4, r6, lr, sl
 8000794:	fb26 990c 	smlad	r9, r6, ip, r9
 8000798:	eb07 0a47 	add.w	sl, r7, r7, lsl #1
 800079c:	eb09 0a4a 	add.w	sl, r9, sl, lsl #1
 80007a0:	f04f 0901 	mov.w	r9, #1
 80007a4:	fb26 f909 	smuad	r9, r6, r9
 80007a8:	eb07 0647 	add.w	r6, r7, r7, lsl #1
 80007ac:	44b1      	add	r9, r6
 80007ae:	9e00      	ldr	r6, [sp, #0]
 80007b0:	06f6      	lsls	r6, r6, #27
 80007b2:	f5a4 54d8 	sub.w	r4, r4, #6912	; 0x1b00
 80007b6:	d508      	bpl.n	80007ca <D24_GENERIC+0x112>
 80007b8:	6a16      	ldr	r6, [r2, #32]
 80007ba:	18e3      	adds	r3, r4, r3
 80007bc:	eba3 0308 	sub.w	r3, r3, r8
 80007c0:	fb53 f316 	smmulr	r3, r3, r6
 80007c4:	005b      	lsls	r3, r3, #1
 80007c6:	46a0      	mov	r8, r4
 80007c8:	461c      	mov	r4, r3
 80007ca:	9e01      	ldr	r6, [sp, #4]
 80007cc:	8d17      	ldrh	r7, [r2, #40]	; 0x28
 80007ce:	03a4      	lsls	r4, r4, #14
 80007d0:	fb54 f416 	smmulr	r4, r4, r6
 80007d4:	9e03      	ldr	r6, [sp, #12]
 80007d6:	f324 048f 	ssat	r4, #16, r4, asr #2
 80007da:	4347      	muls	r7, r0
 80007dc:	f826 4017 	strh.w	r4, [r6, r7, lsl #1]
 80007e0:	1c40      	adds	r0, r0, #1
 80007e2:	8cd4      	ldrh	r4, [r2, #38]	; 0x26
 80007e4:	b280      	uxth	r0, r0
 80007e6:	42a0      	cmp	r0, r4
 80007e8:	f6ff af81 	blt.w	80006ee <D24_GENERIC+0x36>
 80007ec:	f8c2 9008 	str.w	r9, [r2, #8]
 80007f0:	f8c2 a00c 	str.w	sl, [r2, #12]
 80007f4:	61d5      	str	r5, [r2, #28]
 80007f6:	6113      	str	r3, [r2, #16]
 80007f8:	f8c2 8014 	str.w	r8, [r2, #20]
 80007fc:	9802      	ldr	r0, [sp, #8]
 80007fe:	6190      	str	r0, [r2, #24]
 8000800:	b004      	add	sp, #16
 8000802:	2000      	movs	r0, #0
 8000804:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08000808 <.text_9>:
 8000808:	00000000 	.word	0x00000000

0800080c <.text_10>:
 800080c:	42800000 	.word	0x42800000

08000810 <.text_11>:
 8000810:	4197b426 	.word	0x4197b426

08000814 <.text_12>:
 8000814:	4017b426 	.word	0x4017b426

08000818 <.text_13>:
 8000818:	3f03126f 	.word	0x3f03126f

0800081c <.text_14>:
 800081c:	42000000 	.word	0x42000000

08000820 <D32_GENERIC>:
 8000820:	e92d 4ff2 	stmdb	sp!, {r1, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000824:	b083      	sub	sp, #12
 8000826:	6911      	ldr	r1, [r2, #16]
 8000828:	6953      	ldr	r3, [r2, #20]
 800082a:	6994      	ldr	r4, [r2, #24]
 800082c:	f8df cc8c 	ldr.w	ip, [pc, #3212]	; 80014bc <.text_37>
 8000830:	f8df b4d4 	ldr.w	fp, [pc, #1236]	; 8000d08 <.text_20>
 8000834:	9402      	str	r4, [sp, #8]
 8000836:	f8d2 e01c 	ldr.w	lr, [r2, #28]
 800083a:	f8d2 8008 	ldr.w	r8, [r2, #8]
 800083e:	f8d2 900c 	ldr.w	r9, [r2, #12]
 8000842:	6b16      	ldr	r6, [r2, #48]	; 0x30
 8000844:	9601      	str	r6, [sp, #4]
 8000846:	f44f 3a80 	mov.w	sl, #65536	; 0x10000
 800084a:	6b56      	ldr	r6, [r2, #52]	; 0x34
 800084c:	9600      	str	r6, [sp, #0]
 800084e:	2600      	movs	r6, #0
 8000850:	8cd4      	ldrh	r4, [r2, #38]	; 0x26
 8000852:	2c00      	cmp	r4, #0
 8000854:	d078      	beq.n	8000948 <D32_GENERIC+0x128>
 8000856:	8d55      	ldrh	r5, [r2, #42]	; 0x2a
 8000858:	2d01      	cmp	r5, #1
 800085a:	d106      	bne.n	800086a <D32_GENERIC+0x4a>
 800085c:	9d00      	ldr	r5, [sp, #0]
 800085e:	f850 4b04 	ldr.w	r4, [r0], #4
 8000862:	06ad      	lsls	r5, r5, #26
 8000864:	d511      	bpl.n	800088a <D32_GENERIC+0x6a>
 8000866:	ba64      	rev16	r4, r4
 8000868:	e00f      	b.n	800088a <D32_GENERIC+0x6a>
 800086a:	b2ed      	uxtb	r5, r5
 800086c:	eb05 0445 	add.w	r4, r5, r5, lsl #1
 8000870:	f810 7015 	ldrb.w	r7, [r0, r5, lsl #1]
 8000874:	5d04      	ldrb	r4, [r0, r4]
 8000876:	043f      	lsls	r7, r7, #16
 8000878:	eb07 6404 	add.w	r4, r7, r4, lsl #24
 800087c:	5d47      	ldrb	r7, [r0, r5]
 800087e:	eb04 2407 	add.w	r4, r4, r7, lsl #8
 8000882:	7807      	ldrb	r7, [r0, #0]
 8000884:	19e4      	adds	r4, r4, r7
 8000886:	eb00 0085 	add.w	r0, r0, r5, lsl #2
 800088a:	f004 05ff 	and.w	r5, r4, #255	; 0xff
 800088e:	eb0b 0585 	add.w	r5, fp, r5, lsl #2
 8000892:	686d      	ldr	r5, [r5, #4]
 8000894:	eb05 259e 	add.w	r5, r5, lr, lsr #10
 8000898:	ea4f 2e14 	mov.w	lr, r4, lsr #8
 800089c:	f00e 07ff 	and.w	r7, lr, #255	; 0xff
 80008a0:	eb0b 0787 	add.w	r7, fp, r7, lsl #2
 80008a4:	f3c5 0409 	ubfx	r4, r5, #0, #10
 80008a8:	687f      	ldr	r7, [r7, #4]
 80008aa:	eb07 2595 	add.w	r5, r7, r5, lsr #10
 80008ae:	f3c5 0709 	ubfx	r7, r5, #0, #10
 80008b2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80008b6:	ea47 4404 	orr.w	r4, r7, r4, lsl #16
 80008ba:	f00e 07ff 	and.w	r7, lr, #255	; 0xff
 80008be:	eb0b 0787 	add.w	r7, fp, r7, lsl #2
 80008c2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80008c6:	eb0b 0e8e 	add.w	lr, fp, lr, lsl #2
 80008ca:	687f      	ldr	r7, [r7, #4]
 80008cc:	f8de e004 	ldr.w	lr, [lr, #4]
 80008d0:	eb07 2795 	add.w	r7, r7, r5, lsr #10
 80008d4:	f3c7 0509 	ubfx	r5, r7, #0, #10
 80008d8:	eb0e 2e97 	add.w	lr, lr, r7, lsr #10
 80008dc:	f3ce 0709 	ubfx	r7, lr, #0, #10
 80008e0:	ea47 4505 	orr.w	r5, r7, r5, lsl #16
 80008e4:	fb24 990c 	smlad	r9, r4, ip, r9
 80008e8:	fb25 970a 	smlad	r7, r5, sl, r9
 80008ec:	f8df 9cd0 	ldr.w	r9, [pc, #3280]	; 80015c0 <.text_39>
 80008f0:	fb24 8809 	smlad	r8, r4, r9, r8
 80008f4:	f8df 9ccc 	ldr.w	r9, [pc, #3276]	; 80015c4 <.text_40>
 80008f8:	fb25 8909 	smlad	r9, r5, r9, r8
 80008fc:	f04f 0801 	mov.w	r8, #1
 8000900:	fb24 f808 	smuad	r8, r4, r8
 8000904:	f8df 4e0c 	ldr.w	r4, [pc, #3596]	; 8001714 <.text_43>
 8000908:	fb25 8804 	smlad	r8, r5, r4, r8
 800090c:	9d00      	ldr	r5, [sp, #0]
 800090e:	06ed      	lsls	r5, r5, #27
 8000910:	f5a7 4480 	sub.w	r4, r7, #16384	; 0x4000
 8000914:	d507      	bpl.n	8000926 <D32_GENERIC+0x106>
 8000916:	6a15      	ldr	r5, [r2, #32]
 8000918:	1861      	adds	r1, r4, r1
 800091a:	1ac9      	subs	r1, r1, r3
 800091c:	fb51 f115 	smmulr	r1, r1, r5
 8000920:	0049      	lsls	r1, r1, #1
 8000922:	4623      	mov	r3, r4
 8000924:	460c      	mov	r4, r1
 8000926:	9d01      	ldr	r5, [sp, #4]
 8000928:	8d17      	ldrh	r7, [r2, #40]	; 0x28
 800092a:	0364      	lsls	r4, r4, #13
 800092c:	fb54 f415 	smmulr	r4, r4, r5
 8000930:	9d03      	ldr	r5, [sp, #12]
 8000932:	b2b6      	uxth	r6, r6
 8000934:	f324 048f 	ssat	r4, #16, r4, asr #2
 8000938:	4377      	muls	r7, r6
 800093a:	f825 4017 	strh.w	r4, [r5, r7, lsl #1]
 800093e:	1c76      	adds	r6, r6, #1
 8000940:	8cd5      	ldrh	r5, [r2, #38]	; 0x26
 8000942:	b2b4      	uxth	r4, r6
 8000944:	42ac      	cmp	r4, r5
 8000946:	d386      	bcc.n	8000856 <D32_GENERIC+0x36>
 8000948:	f8c2 8008 	str.w	r8, [r2, #8]
 800094c:	f8c2 900c 	str.w	r9, [r2, #12]
 8000950:	f8c2 e01c 	str.w	lr, [r2, #28]
 8000954:	6111      	str	r1, [r2, #16]
 8000956:	6153      	str	r3, [r2, #20]
 8000958:	9802      	ldr	r0, [sp, #8]
 800095a:	6190      	str	r0, [r2, #24]
 800095c:	b004      	add	sp, #16
 800095e:	2000      	movs	r0, #0
 8000960:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08000964 <D48_GENERIC>:
 8000964:	e92d 4ff2 	stmdb	sp!, {r1, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000968:	b083      	sub	sp, #12
 800096a:	6911      	ldr	r1, [r2, #16]
 800096c:	6953      	ldr	r3, [r2, #20]
 800096e:	6994      	ldr	r4, [r2, #24]
 8000970:	f8df ac54 	ldr.w	sl, [pc, #3156]	; 80015c8 <.text_41>
 8000974:	f8df b390 	ldr.w	fp, [pc, #912]	; 8000d08 <.text_20>
 8000978:	9402      	str	r4, [sp, #8]
 800097a:	69d7      	ldr	r7, [r2, #28]
 800097c:	6894      	ldr	r4, [r2, #8]
 800097e:	f8d2 800c 	ldr.w	r8, [r2, #12]
 8000982:	6b16      	ldr	r6, [r2, #48]	; 0x30
 8000984:	9601      	str	r6, [sp, #4]
 8000986:	6b56      	ldr	r6, [r2, #52]	; 0x34
 8000988:	9600      	str	r6, [sp, #0]
 800098a:	2600      	movs	r6, #0
 800098c:	8cd5      	ldrh	r5, [r2, #38]	; 0x26
 800098e:	2d00      	cmp	r5, #0
 8000990:	f000 80b1 	beq.w	8000af6 <D48_GENERIC+0x192>
 8000994:	8d55      	ldrh	r5, [r2, #42]	; 0x2a
 8000996:	2d01      	cmp	r5, #1
 8000998:	d10c      	bne.n	80009b4 <D48_GENERIC+0x50>
 800099a:	f8d0 e000 	ldr.w	lr, [r0]
 800099e:	f8d0 c004 	ldr.w	ip, [r0, #4]
 80009a2:	9d00      	ldr	r5, [sp, #0]
 80009a4:	1d80      	adds	r0, r0, #6
 80009a6:	06ad      	lsls	r5, r5, #26
 80009a8:	d522      	bpl.n	80009f0 <D48_GENERIC+0x8c>
 80009aa:	fa9e fe9e 	rev16.w	lr, lr
 80009ae:	fa9c fc9c 	rev16.w	ip, ip
 80009b2:	e01d      	b.n	80009f0 <D48_GENERIC+0x8c>
 80009b4:	b2ed      	uxtb	r5, r5
 80009b6:	eb05 0c45 	add.w	ip, r5, r5, lsl #1
 80009ba:	f810 e015 	ldrb.w	lr, [r0, r5, lsl #1]
 80009be:	f810 c00c 	ldrb.w	ip, [r0, ip]
 80009c2:	f810 9025 	ldrb.w	r9, [r0, r5, lsl #2]
 80009c6:	ea4f 4e0e 	mov.w	lr, lr, lsl #16
 80009ca:	eb0e 6c0c 	add.w	ip, lr, ip, lsl #24
 80009ce:	f810 e005 	ldrb.w	lr, [r0, r5]
 80009d2:	eb0c 2c0e 	add.w	ip, ip, lr, lsl #8
 80009d6:	f890 e000 	ldrb.w	lr, [r0]
 80009da:	44e6      	add	lr, ip
 80009dc:	eb05 0c85 	add.w	ip, r5, r5, lsl #2
 80009e0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80009e4:	f810 c00c 	ldrb.w	ip, [r0, ip]
 80009e8:	eb09 2c0c 	add.w	ip, r9, ip, lsl #8
 80009ec:	eb00 0045 	add.w	r0, r0, r5, lsl #1
 80009f0:	f00e 05ff 	and.w	r5, lr, #255	; 0xff
 80009f4:	eb0b 0585 	add.w	r5, fp, r5, lsl #2
 80009f8:	686d      	ldr	r5, [r5, #4]
 80009fa:	eb05 2997 	add.w	r9, r5, r7, lsr #10
 80009fe:	ea4f 251e 	mov.w	r5, lr, lsr #8
 8000a02:	f005 07ff 	and.w	r7, r5, #255	; 0xff
 8000a06:	eb0b 0787 	add.w	r7, fp, r7, lsl #2
 8000a0a:	f3c9 0e09 	ubfx	lr, r9, #0, #10
 8000a0e:	687f      	ldr	r7, [r7, #4]
 8000a10:	eb07 2999 	add.w	r9, r7, r9, lsr #10
 8000a14:	f3c9 0709 	ubfx	r7, r9, #0, #10
 8000a18:	0a2d      	lsrs	r5, r5, #8
 8000a1a:	ea47 4e0e 	orr.w	lr, r7, lr, lsl #16
 8000a1e:	f005 07ff 	and.w	r7, r5, #255	; 0xff
 8000a22:	eb0b 0787 	add.w	r7, fp, r7, lsl #2
 8000a26:	0a2d      	lsrs	r5, r5, #8
 8000a28:	687f      	ldr	r7, [r7, #4]
 8000a2a:	eb0b 0585 	add.w	r5, fp, r5, lsl #2
 8000a2e:	eb07 2799 	add.w	r7, r7, r9, lsr #10
 8000a32:	686d      	ldr	r5, [r5, #4]
 8000a34:	f3c7 0909 	ubfx	r9, r7, #0, #10
 8000a38:	eb05 2797 	add.w	r7, r5, r7, lsr #10
 8000a3c:	f3c7 0509 	ubfx	r5, r7, #0, #10
 8000a40:	ea45 4509 	orr.w	r5, r5, r9, lsl #16
 8000a44:	f00c 09ff 	and.w	r9, ip, #255	; 0xff
 8000a48:	eb0b 0989 	add.w	r9, fp, r9, lsl #2
 8000a4c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8000a50:	f8d9 9004 	ldr.w	r9, [r9, #4]
 8000a54:	eb0b 0c8c 	add.w	ip, fp, ip, lsl #2
 8000a58:	eb09 2797 	add.w	r7, r9, r7, lsr #10
 8000a5c:	f8dc c004 	ldr.w	ip, [ip, #4]
 8000a60:	f3c7 0909 	ubfx	r9, r7, #0, #10
 8000a64:	eb0c 2797 	add.w	r7, ip, r7, lsr #10
 8000a68:	f3c7 0c09 	ubfx	ip, r7, #0, #10
 8000a6c:	ea4c 4c09 	orr.w	ip, ip, r9, lsl #16
 8000a70:	fb2e 880a 	smlad	r8, lr, sl, r8
 8000a74:	f8df 9a44 	ldr.w	r9, [pc, #2628]	; 80014bc <.text_37>
 8000a78:	fb25 8809 	smlad	r8, r5, r9, r8
 8000a7c:	f44f 3980 	mov.w	r9, #65536	; 0x10000
 8000a80:	fb2c 8909 	smlad	r9, ip, r9, r8
 8000a84:	f8df 8c90 	ldr.w	r8, [pc, #3216]	; 8001718 <.text_44>
 8000a88:	fb2e 4408 	smlad	r4, lr, r8, r4
 8000a8c:	f04f 181b 	mov.w	r8, #1769499	; 0x1b001b
 8000a90:	fb25 4408 	smlad	r4, r5, r8, r4
 8000a94:	f8df 8c84 	ldr.w	r8, [pc, #3204]	; 800171c <.text_45>
 8000a98:	fb2c 4808 	smlad	r8, ip, r8, r4
 8000a9c:	2401      	movs	r4, #1
 8000a9e:	fb2e f404 	smuad	r4, lr, r4
 8000aa2:	f8df ec70 	ldr.w	lr, [pc, #3184]	; 8001714 <.text_43>
 8000aa6:	fb25 440e 	smlad	r4, r5, lr, r4
 8000aaa:	f8df 5e08 	ldr.w	r5, [pc, #3592]	; 80018b4 <.text_47>
 8000aae:	fb2c 4405 	smlad	r4, ip, r5, r4
 8000ab2:	9d00      	ldr	r5, [sp, #0]
 8000ab4:	06ed      	lsls	r5, r5, #27
 8000ab6:	f5a9 4c58 	sub.w	ip, r9, #55296	; 0xd800
 8000aba:	d507      	bpl.n	8000acc <D48_GENERIC+0x168>
 8000abc:	6a15      	ldr	r5, [r2, #32]
 8000abe:	4461      	add	r1, ip
 8000ac0:	1ac9      	subs	r1, r1, r3
 8000ac2:	fb51 f115 	smmulr	r1, r1, r5
 8000ac6:	0049      	lsls	r1, r1, #1
 8000ac8:	4663      	mov	r3, ip
 8000aca:	468c      	mov	ip, r1
 8000acc:	9d01      	ldr	r5, [sp, #4]
 8000ace:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8000ad2:	ea4f 2ccc 	mov.w	ip, ip, lsl #11
 8000ad6:	fb5c fc15 	smmulr	ip, ip, r5
 8000ada:	8d15      	ldrh	r5, [r2, #40]	; 0x28
 8000adc:	b2b6      	uxth	r6, r6
 8000ade:	f32c 0c8f 	ssat	ip, #16, ip, asr #2
 8000ae2:	4375      	muls	r5, r6
 8000ae4:	f82e c015 	strh.w	ip, [lr, r5, lsl #1]
 8000ae8:	1c76      	adds	r6, r6, #1
 8000aea:	8cd5      	ldrh	r5, [r2, #38]	; 0x26
 8000aec:	fa1f fc86 	uxth.w	ip, r6
 8000af0:	45ac      	cmp	ip, r5
 8000af2:	f4ff af4f 	bcc.w	8000994 <D48_GENERIC+0x30>
 8000af6:	6094      	str	r4, [r2, #8]
 8000af8:	f8c2 800c 	str.w	r8, [r2, #12]
 8000afc:	61d7      	str	r7, [r2, #28]
 8000afe:	6111      	str	r1, [r2, #16]
 8000b00:	6153      	str	r3, [r2, #20]
 8000b02:	9802      	ldr	r0, [sp, #8]
 8000b04:	6190      	str	r0, [r2, #24]
 8000b06:	b004      	add	sp, #16
 8000b08:	2000      	movs	r0, #0
 8000b0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08000b10 <D64_GENERIC>:
 8000b10:	e92d 4ff2 	stmdb	sp!, {r1, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000b14:	b082      	sub	sp, #8
 8000b16:	4603      	mov	r3, r0
 8000b18:	f8d2 8010 	ldr.w	r8, [r2, #16]
 8000b1c:	f8d2 9014 	ldr.w	r9, [r2, #20]
 8000b20:	6990      	ldr	r0, [r2, #24]
 8000b22:	9001      	str	r0, [sp, #4]
 8000b24:	f8d2 e01c 	ldr.w	lr, [r2, #28]
 8000b28:	f8d2 a008 	ldr.w	sl, [r2, #8]
 8000b2c:	f8d2 b00c 	ldr.w	fp, [r2, #12]
 8000b30:	6b10      	ldr	r0, [r2, #48]	; 0x30
 8000b32:	9000      	str	r0, [sp, #0]
 8000b34:	f04f 0c00 	mov.w	ip, #0
 8000b38:	8cd0      	ldrh	r0, [r2, #38]	; 0x26
 8000b3a:	2800      	cmp	r0, #0
 8000b3c:	f000 80cf 	beq.w	8000cde <D64_GENERIC+0x1ce>
 8000b40:	8d51      	ldrh	r1, [r2, #42]	; 0x2a
 8000b42:	2901      	cmp	r1, #1
 8000b44:	d109      	bne.n	8000b5a <D64_GENERIC+0x4a>
 8000b46:	e8f3 0102 	ldrd	r0, r1, [r3], #8
 8000b4a:	460d      	mov	r5, r1
 8000b4c:	f892 1034 	ldrb.w	r1, [r2, #52]	; 0x34
 8000b50:	0689      	lsls	r1, r1, #26
 8000b52:	d523      	bpl.n	8000b9c <D64_GENERIC+0x8c>
 8000b54:	ba40      	rev16	r0, r0
 8000b56:	ba6d      	rev16	r5, r5
 8000b58:	e020      	b.n	8000b9c <D64_GENERIC+0x8c>
 8000b5a:	eb01 0041 	add.w	r0, r1, r1, lsl #1
 8000b5e:	f813 4011 	ldrb.w	r4, [r3, r1, lsl #1]
 8000b62:	5c18      	ldrb	r0, [r3, r0]
 8000b64:	0424      	lsls	r4, r4, #16
 8000b66:	eb04 6000 	add.w	r0, r4, r0, lsl #24
 8000b6a:	5c5c      	ldrb	r4, [r3, r1]
 8000b6c:	eb00 2004 	add.w	r0, r0, r4, lsl #8
 8000b70:	781c      	ldrb	r4, [r3, #0]
 8000b72:	eb01 0541 	add.w	r5, r1, r1, lsl #1
 8000b76:	1900      	adds	r0, r0, r4
 8000b78:	006d      	lsls	r5, r5, #1
 8000b7a:	ebc1 04c1 	rsb	r4, r1, r1, lsl #3
 8000b7e:	5d5d      	ldrb	r5, [r3, r5]
 8000b80:	5d1c      	ldrb	r4, [r3, r4]
 8000b82:	042d      	lsls	r5, r5, #16
 8000b84:	eb05 6404 	add.w	r4, r5, r4, lsl #24
 8000b88:	eb01 0581 	add.w	r5, r1, r1, lsl #2
 8000b8c:	5d5d      	ldrb	r5, [r3, r5]
 8000b8e:	eb04 2405 	add.w	r4, r4, r5, lsl #8
 8000b92:	f813 5021 	ldrb.w	r5, [r3, r1, lsl #2]
 8000b96:	1965      	adds	r5, r4, r5
 8000b98:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 8000b9c:	495a      	ldr	r1, [pc, #360]	; (8000d08 <.text_20>)
 8000b9e:	f000 04ff 	and.w	r4, r0, #255	; 0xff
 8000ba2:	0a00      	lsrs	r0, r0, #8
 8000ba4:	f000 06ff 	and.w	r6, r0, #255	; 0xff
 8000ba8:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8000bac:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 8000bb0:	6864      	ldr	r4, [r4, #4]
 8000bb2:	6876      	ldr	r6, [r6, #4]
 8000bb4:	44a6      	add	lr, r4
 8000bb6:	eb06 269e 	add.w	r6, r6, lr, lsr #10
 8000bba:	0a07      	lsrs	r7, r0, #8
 8000bbc:	f3ce 0409 	ubfx	r4, lr, #0, #10
 8000bc0:	f3c6 0009 	ubfx	r0, r6, #0, #10
 8000bc4:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000bc8:	f007 04ff 	and.w	r4, r7, #255	; 0xff
 8000bcc:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8000bd0:	0a3f      	lsrs	r7, r7, #8
 8000bd2:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 8000bd6:	6864      	ldr	r4, [r4, #4]
 8000bd8:	687f      	ldr	r7, [r7, #4]
 8000bda:	eb04 2696 	add.w	r6, r4, r6, lsr #10
 8000bde:	f3c6 0409 	ubfx	r4, r6, #0, #10
 8000be2:	eb07 2796 	add.w	r7, r7, r6, lsr #10
 8000be6:	f3c7 0609 	ubfx	r6, r7, #0, #10
 8000bea:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
 8000bee:	f005 06ff 	and.w	r6, r5, #255	; 0xff
 8000bf2:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 8000bf6:	ea4f 2e15 	mov.w	lr, r5, lsr #8
 8000bfa:	6876      	ldr	r6, [r6, #4]
 8000bfc:	eb06 2697 	add.w	r6, r6, r7, lsr #10
 8000c00:	f00e 07ff 	and.w	r7, lr, #255	; 0xff
 8000c04:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 8000c08:	f3c6 0509 	ubfx	r5, r6, #0, #10
 8000c0c:	687f      	ldr	r7, [r7, #4]
 8000c0e:	eb07 2696 	add.w	r6, r7, r6, lsr #10
 8000c12:	f3c6 0709 	ubfx	r7, r6, #0, #10
 8000c16:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8000c1a:	ea47 4505 	orr.w	r5, r7, r5, lsl #16
 8000c1e:	f00e 07ff 	and.w	r7, lr, #255	; 0xff
 8000c22:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 8000c26:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8000c2a:	687f      	ldr	r7, [r7, #4]
 8000c2c:	eb01 018e 	add.w	r1, r1, lr, lsl #2
 8000c30:	eb07 2796 	add.w	r7, r7, r6, lsr #10
 8000c34:	6849      	ldr	r1, [r1, #4]
 8000c36:	f3c7 0609 	ubfx	r6, r7, #0, #10
 8000c3a:	eb01 2797 	add.w	r7, r1, r7, lsr #10
 8000c3e:	f3c7 0109 	ubfx	r1, r7, #0, #10
 8000c42:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
 8000c46:	f8df 6c70 	ldr.w	r6, [pc, #3184]	; 80018b8 <.text_48>
 8000c4a:	fb20 bb06 	smlad	fp, r0, r6, fp
 8000c4e:	f8df 6978 	ldr.w	r6, [pc, #2424]	; 80015c8 <.text_41>
 8000c52:	fb24 bb06 	smlad	fp, r4, r6, fp
 8000c56:	f8df 6864 	ldr.w	r6, [pc, #2148]	; 80014bc <.text_37>
 8000c5a:	fb25 bb06 	smlad	fp, r5, r6, fp
 8000c5e:	ea4f 2e97 	mov.w	lr, r7, lsr #10
 8000c62:	f44f 3680 	mov.w	r6, #65536	; 0x10000
 8000c66:	fb21 b606 	smlad	r6, r1, r6, fp
 8000c6a:	f8df 7c50 	ldr.w	r7, [pc, #3152]	; 80018bc <.text_49>
 8000c6e:	f8df bc50 	ldr.w	fp, [pc, #3152]	; 80018c0 <.text_50>
 8000c72:	fb20 aa07 	smlad	sl, r0, r7, sl
 8000c76:	fb21 aa17 	smladx	sl, r1, r7, sl
 8000c7a:	fb24 aa0b 	smlad	sl, r4, fp, sl
 8000c7e:	fb25 ab1b 	smladx	fp, r5, fp, sl
 8000c82:	2701      	movs	r7, #1
 8000c84:	fb20 f007 	smuad	r0, r0, r7
 8000c88:	f8df 7a88 	ldr.w	r7, [pc, #2696]	; 8001714 <.text_43>
 8000c8c:	f8df ac34 	ldr.w	sl, [pc, #3124]	; 80018c4 <.text_51>
 8000c90:	fb24 0007 	smlad	r0, r4, r7, r0
 8000c94:	f8df 4e14 	ldr.w	r4, [pc, #3604]	; 8001aac <.text_54>
 8000c98:	fb25 0004 	smlad	r0, r5, r4, r0
 8000c9c:	fb21 0a0a 	smlad	sl, r1, sl, r0
 8000ca0:	6a11      	ldr	r1, [r2, #32]
 8000ca2:	f5a6 3000 	sub.w	r0, r6, #131072	; 0x20000
 8000ca6:	b141      	cbz	r1, 8000cba <D64_GENERIC+0x1aa>
 8000ca8:	4480      	add	r8, r0
 8000caa:	eba8 0409 	sub.w	r4, r8, r9
 8000cae:	fb54 f111 	smmulr	r1, r4, r1
 8000cb2:	ea4f 0841 	mov.w	r8, r1, lsl #1
 8000cb6:	4681      	mov	r9, r0
 8000cb8:	4640      	mov	r0, r8
 8000cba:	9900      	ldr	r1, [sp, #0]
 8000cbc:	8d14      	ldrh	r4, [r2, #40]	; 0x28
 8000cbe:	0280      	lsls	r0, r0, #10
 8000cc0:	fb50 f011 	smmulr	r0, r0, r1
 8000cc4:	9902      	ldr	r1, [sp, #8]
 8000cc6:	f320 008f 	ssat	r0, #16, r0, asr #2
 8000cca:	fb04 f40c 	mul.w	r4, r4, ip
 8000cce:	f821 0014 	strh.w	r0, [r1, r4, lsl #1]
 8000cd2:	f10c 0c01 	add.w	ip, ip, #1
 8000cd6:	8cd0      	ldrh	r0, [r2, #38]	; 0x26
 8000cd8:	4584      	cmp	ip, r0
 8000cda:	f6ff af31 	blt.w	8000b40 <D64_GENERIC+0x30>
 8000cde:	f8c2 a008 	str.w	sl, [r2, #8]
 8000ce2:	f8c2 b00c 	str.w	fp, [r2, #12]
 8000ce6:	f8c2 e01c 	str.w	lr, [r2, #28]
 8000cea:	f8c2 8010 	str.w	r8, [r2, #16]
 8000cee:	f8c2 9014 	str.w	r9, [r2, #20]
 8000cf2:	9801      	ldr	r0, [sp, #4]
 8000cf4:	6190      	str	r0, [r2, #24]
 8000cf6:	b003      	add	sp, #12
 8000cf8:	2000      	movs	r0, #0
 8000cfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08000d00 <.text_18>:
 8000d00:	b5e8b5cd 	.word	0xb5e8b5cd

08000d04 <.text_19>:
 8000d04:	f407a5c2 	.word	0xf407a5c2

08000d08 <.text_20>:
 8000d08:	20000000 	.word	0x20000000

08000d0c <.text_21>:
 8000d0c:	000ffc00 	.word	0x000ffc00

08000d10 <D80_GENERIC>:
 8000d10:	e92d 4ff2 	stmdb	sp!, {r1, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000d14:	b083      	sub	sp, #12
 8000d16:	6911      	ldr	r1, [r2, #16]
 8000d18:	6953      	ldr	r3, [r2, #20]
 8000d1a:	6994      	ldr	r4, [r2, #24]
 8000d1c:	9402      	str	r4, [sp, #8]
 8000d1e:	f8d2 e01c 	ldr.w	lr, [r2, #28]
 8000d22:	f8d2 9008 	ldr.w	r9, [r2, #8]
 8000d26:	f8d2 800c 	ldr.w	r8, [r2, #12]
 8000d2a:	6b14      	ldr	r4, [r2, #48]	; 0x30
 8000d2c:	9401      	str	r4, [sp, #4]
 8000d2e:	f04f 0a00 	mov.w	sl, #0
 8000d32:	8cd6      	ldrh	r6, [r2, #38]	; 0x26
 8000d34:	2e00      	cmp	r6, #0
 8000d36:	f000 8104 	beq.w	8000f42 <D80_GENERIC+0x232>
 8000d3a:	8d54      	ldrh	r4, [r2, #42]	; 0x2a
 8000d3c:	2c01      	cmp	r4, #1
 8000d3e:	d10d      	bne.n	8000d5c <D80_GENERIC+0x4c>
 8000d40:	6806      	ldr	r6, [r0, #0]
 8000d42:	6847      	ldr	r7, [r0, #4]
 8000d44:	f8d0 c008 	ldr.w	ip, [r0, #8]
 8000d48:	f892 4034 	ldrb.w	r4, [r2, #52]	; 0x34
 8000d4c:	300a      	adds	r0, #10
 8000d4e:	06a4      	lsls	r4, r4, #26
 8000d50:	d530      	bpl.n	8000db4 <D80_GENERIC+0xa4>
 8000d52:	ba76      	rev16	r6, r6
 8000d54:	ba7f      	rev16	r7, r7
 8000d56:	fa9c fc9c 	rev16.w	ip, ip
 8000d5a:	e02b      	b.n	8000db4 <D80_GENERIC+0xa4>
 8000d5c:	b2e4      	uxtb	r4, r4
 8000d5e:	eb04 0644 	add.w	r6, r4, r4, lsl #1
 8000d62:	f810 7014 	ldrb.w	r7, [r0, r4, lsl #1]
 8000d66:	5d86      	ldrb	r6, [r0, r6]
 8000d68:	043f      	lsls	r7, r7, #16
 8000d6a:	eb07 6606 	add.w	r6, r7, r6, lsl #24
 8000d6e:	5d07      	ldrb	r7, [r0, r4]
 8000d70:	eb06 2607 	add.w	r6, r6, r7, lsl #8
 8000d74:	7807      	ldrb	r7, [r0, #0]
 8000d76:	eb04 0544 	add.w	r5, r4, r4, lsl #1
 8000d7a:	19f6      	adds	r6, r6, r7
 8000d7c:	006d      	lsls	r5, r5, #1
 8000d7e:	ebc4 07c4 	rsb	r7, r4, r4, lsl #3
 8000d82:	5d45      	ldrb	r5, [r0, r5]
 8000d84:	5dc7      	ldrb	r7, [r0, r7]
 8000d86:	042d      	lsls	r5, r5, #16
 8000d88:	eb05 6707 	add.w	r7, r5, r7, lsl #24
 8000d8c:	eb04 0584 	add.w	r5, r4, r4, lsl #2
 8000d90:	5d45      	ldrb	r5, [r0, r5]
 8000d92:	eb07 2705 	add.w	r7, r7, r5, lsl #8
 8000d96:	f810 5024 	ldrb.w	r5, [r0, r4, lsl #2]
 8000d9a:	442f      	add	r7, r5
 8000d9c:	eb04 05c4 	add.w	r5, r4, r4, lsl #3
 8000da0:	f810 c005 	ldrb.w	ip, [r0, r5]
 8000da4:	f810 5034 	ldrb.w	r5, [r0, r4, lsl #3]
 8000da8:	eb05 2c0c 	add.w	ip, r5, ip, lsl #8
 8000dac:	eb04 0584 	add.w	r5, r4, r4, lsl #2
 8000db0:	eb00 0045 	add.w	r0, r0, r5, lsl #1
 8000db4:	f8df 4b10 	ldr.w	r4, [pc, #2832]	; 80018c8 <.text_52>
 8000db8:	f006 05ff 	and.w	r5, r6, #255	; 0xff
 8000dbc:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8000dc0:	686d      	ldr	r5, [r5, #4]
 8000dc2:	44ae      	add	lr, r5
 8000dc4:	0a35      	lsrs	r5, r6, #8
 8000dc6:	f005 0bff 	and.w	fp, r5, #255	; 0xff
 8000dca:	eb04 0b8b 	add.w	fp, r4, fp, lsl #2
 8000dce:	f3ce 0609 	ubfx	r6, lr, #0, #10
 8000dd2:	f8db b004 	ldr.w	fp, [fp, #4]
 8000dd6:	eb0b 2e9e 	add.w	lr, fp, lr, lsr #10
 8000dda:	f3ce 0b09 	ubfx	fp, lr, #0, #10
 8000dde:	ea4b 4606 	orr.w	r6, fp, r6, lsl #16
 8000de2:	9600      	str	r6, [sp, #0]
 8000de4:	0a2d      	lsrs	r5, r5, #8
 8000de6:	f005 06ff 	and.w	r6, r5, #255	; 0xff
 8000dea:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 8000dee:	0a2d      	lsrs	r5, r5, #8
 8000df0:	6876      	ldr	r6, [r6, #4]
 8000df2:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8000df6:	eb06 2e9e 	add.w	lr, r6, lr, lsr #10
 8000dfa:	686d      	ldr	r5, [r5, #4]
 8000dfc:	f3ce 0609 	ubfx	r6, lr, #0, #10
 8000e00:	eb05 2e9e 	add.w	lr, r5, lr, lsr #10
 8000e04:	f3ce 0509 	ubfx	r5, lr, #0, #10
 8000e08:	ea45 4b06 	orr.w	fp, r5, r6, lsl #16
 8000e0c:	f007 06ff 	and.w	r6, r7, #255	; 0xff
 8000e10:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 8000e14:	0a3f      	lsrs	r7, r7, #8
 8000e16:	f007 05ff 	and.w	r5, r7, #255	; 0xff
 8000e1a:	6876      	ldr	r6, [r6, #4]
 8000e1c:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8000e20:	eb06 2e9e 	add.w	lr, r6, lr, lsr #10
 8000e24:	686d      	ldr	r5, [r5, #4]
 8000e26:	f3ce 0609 	ubfx	r6, lr, #0, #10
 8000e2a:	eb05 2e9e 	add.w	lr, r5, lr, lsr #10
 8000e2e:	f3ce 0509 	ubfx	r5, lr, #0, #10
 8000e32:	0a3f      	lsrs	r7, r7, #8
 8000e34:	ea45 4606 	orr.w	r6, r5, r6, lsl #16
 8000e38:	f007 05ff 	and.w	r5, r7, #255	; 0xff
 8000e3c:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8000e40:	0a3f      	lsrs	r7, r7, #8
 8000e42:	686d      	ldr	r5, [r5, #4]
 8000e44:	eb04 0787 	add.w	r7, r4, r7, lsl #2
 8000e48:	eb05 259e 	add.w	r5, r5, lr, lsr #10
 8000e4c:	687f      	ldr	r7, [r7, #4]
 8000e4e:	f3c5 0e09 	ubfx	lr, r5, #0, #10
 8000e52:	eb07 2595 	add.w	r5, r7, r5, lsr #10
 8000e56:	f3c5 0709 	ubfx	r7, r5, #0, #10
 8000e5a:	ea47 470e 	orr.w	r7, r7, lr, lsl #16
 8000e5e:	f00c 0eff 	and.w	lr, ip, #255	; 0xff
 8000e62:	eb04 0e8e 	add.w	lr, r4, lr, lsl #2
 8000e66:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8000e6a:	eb04 048c 	add.w	r4, r4, ip, lsl #2
 8000e6e:	f8de e004 	ldr.w	lr, [lr, #4]
 8000e72:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8000e76:	eb0e 2595 	add.w	r5, lr, r5, lsr #10
 8000e7a:	f3c5 0e09 	ubfx	lr, r5, #0, #10
 8000e7e:	eb0c 2495 	add.w	r4, ip, r5, lsr #10
 8000e82:	f3c4 0509 	ubfx	r5, r4, #0, #10
 8000e86:	ea45 4c0e 	orr.w	ip, r5, lr, lsl #16
 8000e8a:	ea4f 2e94 	mov.w	lr, r4, lsr #10
 8000e8e:	9d00      	ldr	r5, [sp, #0]
 8000e90:	f8df 4c1c 	ldr.w	r4, [pc, #3100]	; 8001ab0 <.text_55>
 8000e94:	fb25 8804 	smlad	r8, r5, r4, r8
 8000e98:	f8df 4a1c 	ldr.w	r4, [pc, #2588]	; 80018b8 <.text_48>
 8000e9c:	fb2b 8804 	smlad	r8, fp, r4, r8
 8000ea0:	f8df 4724 	ldr.w	r4, [pc, #1828]	; 80015c8 <.text_41>
 8000ea4:	fb26 8804 	smlad	r8, r6, r4, r8
 8000ea8:	f8df 4610 	ldr.w	r4, [pc, #1552]	; 80014bc <.text_37>
 8000eac:	fb27 8804 	smlad	r8, r7, r4, r8
 8000eb0:	f44f 3480 	mov.w	r4, #65536	; 0x10000
 8000eb4:	fb2c 8404 	smlad	r4, ip, r4, r8
 8000eb8:	f8df 8bf8 	ldr.w	r8, [pc, #3064]	; 8001ab4 <.text_56>
 8000ebc:	fb25 9808 	smlad	r8, r5, r8, r9
 8000ec0:	f8df 9bf4 	ldr.w	r9, [pc, #3060]	; 8001ab8 <.text_57>
 8000ec4:	fb2b 8809 	smlad	r8, fp, r9, r8
 8000ec8:	f04f 194b 	mov.w	r9, #4915275	; 0x4b004b
 8000ecc:	fb26 8809 	smlad	r8, r6, r9, r8
 8000ed0:	f8df 9be8 	ldr.w	r9, [pc, #3048]	; 8001abc <.text_58>
 8000ed4:	fb27 8809 	smlad	r8, r7, r9, r8
 8000ed8:	f8df 9be4 	ldr.w	r9, [pc, #3044]	; 8001ac0 <.text_59>
 8000edc:	fb2c 8809 	smlad	r8, ip, r9, r8
 8000ee0:	f04f 0901 	mov.w	r9, #1
 8000ee4:	fb25 f509 	smuad	r5, r5, r9
 8000ee8:	f8df 9828 	ldr.w	r9, [pc, #2088]	; 8001714 <.text_43>
 8000eec:	fb2b 5909 	smlad	r9, fp, r9, r5
 8000ef0:	f8df 59c0 	ldr.w	r5, [pc, #2496]	; 80018b4 <.text_47>
 8000ef4:	fb26 9605 	smlad	r6, r6, r5, r9
 8000ef8:	f8df 59c8 	ldr.w	r5, [pc, #2504]	; 80018c4 <.text_51>
 8000efc:	fb27 6605 	smlad	r6, r7, r5, r6
 8000f00:	f8df 7e70 	ldr.w	r7, [pc, #3696]	; 8001d74 <.text_61>
 8000f04:	fb2c 6907 	smlad	r9, ip, r7, r6
 8000f08:	6a17      	ldr	r7, [r2, #32]
 8000f0a:	f5a4 367a 	sub.w	r6, r4, #256000	; 0x3e800
 8000f0e:	b137      	cbz	r7, 8000f1e <D80_GENERIC+0x20e>
 8000f10:	1871      	adds	r1, r6, r1
 8000f12:	1ac9      	subs	r1, r1, r3
 8000f14:	fb51 f117 	smmulr	r1, r1, r7
 8000f18:	0049      	lsls	r1, r1, #1
 8000f1a:	4633      	mov	r3, r6
 8000f1c:	460e      	mov	r6, r1
 8000f1e:	9f01      	ldr	r7, [sp, #4]
 8000f20:	8d14      	ldrh	r4, [r2, #40]	; 0x28
 8000f22:	0276      	lsls	r6, r6, #9
 8000f24:	fb56 f617 	smmulr	r6, r6, r7
 8000f28:	9f03      	ldr	r7, [sp, #12]
 8000f2a:	f326 068f 	ssat	r6, #16, r6, asr #2
 8000f2e:	fb04 fc0a 	mul.w	ip, r4, sl
 8000f32:	f827 601c 	strh.w	r6, [r7, ip, lsl #1]
 8000f36:	f10a 0a01 	add.w	sl, sl, #1
 8000f3a:	8cd6      	ldrh	r6, [r2, #38]	; 0x26
 8000f3c:	45b2      	cmp	sl, r6
 8000f3e:	f6ff aefc 	blt.w	8000d3a <D80_GENERIC+0x2a>
 8000f42:	f8c2 9008 	str.w	r9, [r2, #8]
 8000f46:	f8c2 800c 	str.w	r8, [r2, #12]
 8000f4a:	f8c2 e01c 	str.w	lr, [r2, #28]
 8000f4e:	6111      	str	r1, [r2, #16]
 8000f50:	6153      	str	r3, [r2, #20]
 8000f52:	9802      	ldr	r0, [sp, #8]
 8000f54:	6190      	str	r0, [r2, #24]
 8000f56:	b004      	add	sp, #16
 8000f58:	2000      	movs	r0, #0
 8000f5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08000f60 <.text_23>:
 8000f60:	3ff00000 	.word	0x3ff00000

08000f64 <.text_24>:
 8000f64:	08001301 	.word	0x08001301

08000f68 <.text_25>:
 8000f68:	080013b1 	.word	0x080013b1

08000f6c <.text_26>:
 8000f6c:	080014c1 	.word	0x080014c1

08000f70 <.text_27>:
 8000f70:	080015cd 	.word	0x080015cd

08000f74 <.text_28>:
 8000f74:	08001721 	.word	0x08001721

08000f78 <.text_29>:
 8000f78:	080018cd 	.word	0x080018cd

08000f7c <.text_30>:
 8000f7c:	08001ac5 	.word	0x08001ac5

08000f80 <.text_31>:
 8000f80:	00030001 	.word	0x00030001

08000f84 <D128_GENERIC>:
 8000f84:	e92d 4ff2 	stmdb	sp!, {r1, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000f88:	4614      	mov	r4, r2
 8000f8a:	b087      	sub	sp, #28
 8000f8c:	4605      	mov	r5, r0
 8000f8e:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8000f92:	6960      	ldr	r0, [r4, #20]
 8000f94:	9004      	str	r0, [sp, #16]
 8000f96:	f04f 0800 	mov.w	r8, #0
 8000f9a:	69a0      	ldr	r0, [r4, #24]
 8000f9c:	9006      	str	r0, [sp, #24]
 8000f9e:	69e7      	ldr	r7, [r4, #28]
 8000fa0:	f8d4 c008 	ldr.w	ip, [r4, #8]
 8000fa4:	f8d4 e00c 	ldr.w	lr, [r4, #12]
 8000fa8:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8000faa:	9105      	str	r1, [sp, #20]
 8000fac:	8ce0      	ldrh	r0, [r4, #38]	; 0x26
 8000fae:	2800      	cmp	r0, #0
 8000fb0:	f000 8195 	beq.w	80012de <D128_GENERIC+0x35a>
 8000fb4:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 8000fb6:	2801      	cmp	r0, #1
 8000fb8:	d10c      	bne.n	8000fd4 <D128_GENERIC+0x50>
 8000fba:	e8f5 0102 	ldrd	r0, r1, [r5], #8
 8000fbe:	f894 6034 	ldrb.w	r6, [r4, #52]	; 0x34
 8000fc2:	e8f5 2302 	ldrd	r2, r3, [r5], #8
 8000fc6:	06b6      	lsls	r6, r6, #26
 8000fc8:	d550      	bpl.n	800106c <D128_GENERIC+0xe8>
 8000fca:	ba40      	rev16	r0, r0
 8000fcc:	ba49      	rev16	r1, r1
 8000fce:	ba52      	rev16	r2, r2
 8000fd0:	ba5b      	rev16	r3, r3
 8000fd2:	e04b      	b.n	800106c <D128_GENERIC+0xe8>
 8000fd4:	fa5f f980 	uxtb.w	r9, r0
 8000fd8:	eb09 0049 	add.w	r0, r9, r9, lsl #1
 8000fdc:	f815 1019 	ldrb.w	r1, [r5, r9, lsl #1]
 8000fe0:	5c28      	ldrb	r0, [r5, r0]
 8000fe2:	0409      	lsls	r1, r1, #16
 8000fe4:	eb01 6000 	add.w	r0, r1, r0, lsl #24
 8000fe8:	f815 1009 	ldrb.w	r1, [r5, r9]
 8000fec:	eb00 2001 	add.w	r0, r0, r1, lsl #8
 8000ff0:	7829      	ldrb	r1, [r5, #0]
 8000ff2:	eb09 0249 	add.w	r2, r9, r9, lsl #1
 8000ff6:	1840      	adds	r0, r0, r1
 8000ff8:	0052      	lsls	r2, r2, #1
 8000ffa:	ebc9 01c9 	rsb	r1, r9, r9, lsl #3
 8000ffe:	5caa      	ldrb	r2, [r5, r2]
 8001000:	5c69      	ldrb	r1, [r5, r1]
 8001002:	0412      	lsls	r2, r2, #16
 8001004:	eb02 6101 	add.w	r1, r2, r1, lsl #24
 8001008:	eb09 0289 	add.w	r2, r9, r9, lsl #2
 800100c:	eb09 0389 	add.w	r3, r9, r9, lsl #2
 8001010:	5caa      	ldrb	r2, [r5, r2]
 8001012:	eb01 2102 	add.w	r1, r1, r2, lsl #8
 8001016:	f815 2029 	ldrb.w	r2, [r5, r9, lsl #2]
 800101a:	1889      	adds	r1, r1, r2
 800101c:	220b      	movs	r2, #11
 800101e:	005b      	lsls	r3, r3, #1
 8001020:	fb12 f209 	smulbb	r2, r2, r9
 8001024:	5ceb      	ldrb	r3, [r5, r3]
 8001026:	5caa      	ldrb	r2, [r5, r2]
 8001028:	041b      	lsls	r3, r3, #16
 800102a:	eb03 6202 	add.w	r2, r3, r2, lsl #24
 800102e:	eb09 03c9 	add.w	r3, r9, r9, lsl #3
 8001032:	ebc9 06c9 	rsb	r6, r9, r9, lsl #3
 8001036:	5ceb      	ldrb	r3, [r5, r3]
 8001038:	eb02 2203 	add.w	r2, r2, r3, lsl #8
 800103c:	f815 3039 	ldrb.w	r3, [r5, r9, lsl #3]
 8001040:	18d2      	adds	r2, r2, r3
 8001042:	0076      	lsls	r6, r6, #1
 8001044:	ebc9 1309 	rsb	r3, r9, r9, lsl #4
 8001048:	5dae      	ldrb	r6, [r5, r6]
 800104a:	5ceb      	ldrb	r3, [r5, r3]
 800104c:	0436      	lsls	r6, r6, #16
 800104e:	eb06 6303 	add.w	r3, r6, r3, lsl #24
 8001052:	260d      	movs	r6, #13
 8001054:	fb16 f609 	smulbb	r6, r6, r9
 8001058:	5dae      	ldrb	r6, [r5, r6]
 800105a:	eb03 2306 	add.w	r3, r3, r6, lsl #8
 800105e:	eb09 0649 	add.w	r6, r9, r9, lsl #1
 8001062:	00b6      	lsls	r6, r6, #2
 8001064:	5dae      	ldrb	r6, [r5, r6]
 8001066:	199b      	adds	r3, r3, r6
 8001068:	eb05 1509 	add.w	r5, r5, r9, lsl #4
 800106c:	f8df 9858 	ldr.w	r9, [pc, #2136]	; 80018c8 <.text_52>
 8001070:	f000 06ff 	and.w	r6, r0, #255	; 0xff
 8001074:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8001078:	6876      	ldr	r6, [r6, #4]
 800107a:	19f7      	adds	r7, r6, r7
 800107c:	0a06      	lsrs	r6, r0, #8
 800107e:	f006 0bff 	and.w	fp, r6, #255	; 0xff
 8001082:	eb09 0b8b 	add.w	fp, r9, fp, lsl #2
 8001086:	f3c7 0009 	ubfx	r0, r7, #0, #10
 800108a:	f8db b004 	ldr.w	fp, [fp, #4]
 800108e:	eb0b 2797 	add.w	r7, fp, r7, lsr #10
 8001092:	f3c7 0b09 	ubfx	fp, r7, #0, #10
 8001096:	ea4b 4000 	orr.w	r0, fp, r0, lsl #16
 800109a:	9003      	str	r0, [sp, #12]
 800109c:	0a36      	lsrs	r6, r6, #8
 800109e:	f006 00ff 	and.w	r0, r6, #255	; 0xff
 80010a2:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 80010a6:	0a36      	lsrs	r6, r6, #8
 80010a8:	6840      	ldr	r0, [r0, #4]
 80010aa:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 80010ae:	eb00 2797 	add.w	r7, r0, r7, lsr #10
 80010b2:	6876      	ldr	r6, [r6, #4]
 80010b4:	f3c7 0009 	ubfx	r0, r7, #0, #10
 80010b8:	eb06 2797 	add.w	r7, r6, r7, lsr #10
 80010bc:	f3c7 0609 	ubfx	r6, r7, #0, #10
 80010c0:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 80010c4:	f001 00ff 	and.w	r0, r1, #255	; 0xff
 80010c8:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 80010cc:	9602      	str	r6, [sp, #8]
 80010ce:	6840      	ldr	r0, [r0, #4]
 80010d0:	eb00 2697 	add.w	r6, r0, r7, lsr #10
 80010d4:	0a08      	lsrs	r0, r1, #8
 80010d6:	f000 01ff 	and.w	r1, r0, #255	; 0xff
 80010da:	eb09 0181 	add.w	r1, r9, r1, lsl #2
 80010de:	f3c6 0709 	ubfx	r7, r6, #0, #10
 80010e2:	6849      	ldr	r1, [r1, #4]
 80010e4:	eb01 2696 	add.w	r6, r1, r6, lsr #10
 80010e8:	0a01      	lsrs	r1, r0, #8
 80010ea:	f3c6 0009 	ubfx	r0, r6, #0, #10
 80010ee:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 80010f2:	f001 00ff 	and.w	r0, r1, #255	; 0xff
 80010f6:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 80010fa:	0a09      	lsrs	r1, r1, #8
 80010fc:	9701      	str	r7, [sp, #4]
 80010fe:	eb09 0181 	add.w	r1, r9, r1, lsl #2
 8001102:	6840      	ldr	r0, [r0, #4]
 8001104:	6849      	ldr	r1, [r1, #4]
 8001106:	eb00 2796 	add.w	r7, r0, r6, lsr #10
 800110a:	f3c7 0009 	ubfx	r0, r7, #0, #10
 800110e:	eb01 2197 	add.w	r1, r1, r7, lsr #10
 8001112:	f3c1 0709 	ubfx	r7, r1, #0, #10
 8001116:	ea47 4700 	orr.w	r7, r7, r0, lsl #16
 800111a:	f002 00ff 	and.w	r0, r2, #255	; 0xff
 800111e:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 8001122:	9700      	str	r7, [sp, #0]
 8001124:	6840      	ldr	r0, [r0, #4]
 8001126:	eb00 2791 	add.w	r7, r0, r1, lsr #10
 800112a:	0a10      	lsrs	r0, r2, #8
 800112c:	f000 02ff 	and.w	r2, r0, #255	; 0xff
 8001130:	eb09 0282 	add.w	r2, r9, r2, lsl #2
 8001134:	f3c7 0109 	ubfx	r1, r7, #0, #10
 8001138:	6852      	ldr	r2, [r2, #4]
 800113a:	eb02 2797 	add.w	r7, r2, r7, lsr #10
 800113e:	0a02      	lsrs	r2, r0, #8
 8001140:	f3c7 0009 	ubfx	r0, r7, #0, #10
 8001144:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8001148:	f002 01ff 	and.w	r1, r2, #255	; 0xff
 800114c:	eb09 0181 	add.w	r1, r9, r1, lsl #2
 8001150:	0a12      	lsrs	r2, r2, #8
 8001152:	eb09 0282 	add.w	r2, r9, r2, lsl #2
 8001156:	6849      	ldr	r1, [r1, #4]
 8001158:	6852      	ldr	r2, [r2, #4]
 800115a:	eb01 2797 	add.w	r7, r1, r7, lsr #10
 800115e:	f3c7 0109 	ubfx	r1, r7, #0, #10
 8001162:	eb02 2297 	add.w	r2, r2, r7, lsr #10
 8001166:	f3c2 0709 	ubfx	r7, r2, #0, #10
 800116a:	ea47 4101 	orr.w	r1, r7, r1, lsl #16
 800116e:	f003 07ff 	and.w	r7, r3, #255	; 0xff
 8001172:	eb09 0787 	add.w	r7, r9, r7, lsl #2
 8001176:	687f      	ldr	r7, [r7, #4]
 8001178:	eb07 2692 	add.w	r6, r7, r2, lsr #10
 800117c:	0a1a      	lsrs	r2, r3, #8
 800117e:	f002 03ff 	and.w	r3, r2, #255	; 0xff
 8001182:	eb09 0383 	add.w	r3, r9, r3, lsl #2
 8001186:	f3c6 0709 	ubfx	r7, r6, #0, #10
 800118a:	685b      	ldr	r3, [r3, #4]
 800118c:	eb03 2696 	add.w	r6, r3, r6, lsr #10
 8001190:	0a13      	lsrs	r3, r2, #8
 8001192:	f3c6 0209 	ubfx	r2, r6, #0, #10
 8001196:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 800119a:	f003 07ff 	and.w	r7, r3, #255	; 0xff
 800119e:	eb09 0787 	add.w	r7, r9, r7, lsl #2
 80011a2:	0a1b      	lsrs	r3, r3, #8
 80011a4:	687f      	ldr	r7, [r7, #4]
 80011a6:	eb09 0383 	add.w	r3, r9, r3, lsl #2
 80011aa:	eb07 2696 	add.w	r6, r7, r6, lsr #10
 80011ae:	685b      	ldr	r3, [r3, #4]
 80011b0:	f8df 9bc4 	ldr.w	r9, [pc, #3012]	; 8001d78 <.text_62>
 80011b4:	f3c6 0709 	ubfx	r7, r6, #0, #10
 80011b8:	eb03 2696 	add.w	r6, r3, r6, lsr #10
 80011bc:	f3c6 0309 	ubfx	r3, r6, #0, #10
 80011c0:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 80011c4:	0ab7      	lsrs	r7, r6, #10
 80011c6:	9e03      	ldr	r6, [sp, #12]
 80011c8:	fb26 ee09 	smlad	lr, r6, r9, lr
 80011cc:	9e02      	ldr	r6, [sp, #8]
 80011ce:	f8df 9bac 	ldr.w	r9, [pc, #2988]	; 8001d7c <.text_63>
 80011d2:	fb26 ee09 	smlad	lr, r6, r9, lr
 80011d6:	9e01      	ldr	r6, [sp, #4]
 80011d8:	f8df 9ba4 	ldr.w	r9, [pc, #2980]	; 8001d80 <.text_64>
 80011dc:	fb26 ee09 	smlad	lr, r6, r9, lr
 80011e0:	9e00      	ldr	r6, [sp, #0]
 80011e2:	f8df 98cc 	ldr.w	r9, [pc, #2252]	; 8001ab0 <.text_55>
 80011e6:	fb26 ee09 	smlad	lr, r6, r9, lr
 80011ea:	f8df 66cc 	ldr.w	r6, [pc, #1740]	; 80018b8 <.text_48>
 80011ee:	fb20 ee06 	smlad	lr, r0, r6, lr
 80011f2:	f8df 63d4 	ldr.w	r6, [pc, #980]	; 80015c8 <.text_41>
 80011f6:	fb21 ee06 	smlad	lr, r1, r6, lr
 80011fa:	4eb0      	ldr	r6, [pc, #704]	; (80014bc <.text_37>)
 80011fc:	fb22 ee06 	smlad	lr, r2, r6, lr
 8001200:	f44f 3980 	mov.w	r9, #65536	; 0x10000
 8001204:	fb23 e909 	smlad	r9, r3, r9, lr
 8001208:	9e03      	ldr	r6, [sp, #12]
 800120a:	f8df eb78 	ldr.w	lr, [pc, #2936]	; 8001d84 <.text_65>
 800120e:	fb26 cc0e 	smlad	ip, r6, lr, ip
 8001212:	9e02      	ldr	r6, [sp, #8]
 8001214:	f8df eb70 	ldr.w	lr, [pc, #2928]	; 8001d88 <.text_66>
 8001218:	fb26 cc0e 	smlad	ip, r6, lr, ip
 800121c:	9e01      	ldr	r6, [sp, #4]
 800121e:	f8df eb6c 	ldr.w	lr, [pc, #2924]	; 8001d8c <.text_67>
 8001222:	f8dd b008 	ldr.w	fp, [sp, #8]
 8001226:	fb26 cc0e 	smlad	ip, r6, lr, ip
 800122a:	9e00      	ldr	r6, [sp, #0]
 800122c:	f8df eb60 	ldr.w	lr, [pc, #2912]	; 8001d90 <.text_68>
 8001230:	fb26 cc0e 	smlad	ip, r6, lr, ip
 8001234:	f8df 6b5c 	ldr.w	r6, [pc, #2908]	; 8001d94 <.text_69>
 8001238:	f8df eb5c 	ldr.w	lr, [pc, #2908]	; 8001d98 <.text_70>
 800123c:	fb20 cc06 	smlad	ip, r0, r6, ip
 8001240:	f8df 6b58 	ldr.w	r6, [pc, #2904]	; 8001d9c <.text_71>
 8001244:	fb21 cc06 	smlad	ip, r1, r6, ip
 8001248:	f8df 6b54 	ldr.w	r6, [pc, #2900]	; 8001da0 <.text_72>
 800124c:	fb22 cc06 	smlad	ip, r2, r6, ip
 8001250:	fb23 ce0e 	smlad	lr, r3, lr, ip
 8001254:	9e03      	ldr	r6, [sp, #12]
 8001256:	f04f 0c01 	mov.w	ip, #1
 800125a:	fb26 fc0c 	smuad	ip, r6, ip
 800125e:	f8df 64b4 	ldr.w	r6, [pc, #1204]	; 8001714 <.text_43>
 8001262:	fb2b cc06 	smlad	ip, fp, r6, ip
 8001266:	f8dd b004 	ldr.w	fp, [sp, #4]
 800126a:	f8df 6648 	ldr.w	r6, [pc, #1608]	; 80018b4 <.text_47>
 800126e:	fb2b cc06 	smlad	ip, fp, r6, ip
 8001272:	f8dd b000 	ldr.w	fp, [sp]
 8001276:	f8df 664c 	ldr.w	r6, [pc, #1612]	; 80018c4 <.text_51>
 800127a:	fb2b cc06 	smlad	ip, fp, r6, ip
 800127e:	f8df 6af4 	ldr.w	r6, [pc, #2804]	; 8001d74 <.text_61>
 8001282:	fb20 c006 	smlad	r0, r0, r6, ip
 8001286:	f8df 6b1c 	ldr.w	r6, [pc, #2844]	; 8001da4 <.text_73>
 800128a:	fb21 0006 	smlad	r0, r1, r6, r0
 800128e:	f8df 1b18 	ldr.w	r1, [pc, #2840]	; 8001da8 <.text_74>
 8001292:	fb22 0001 	smlad	r0, r2, r1, r0
 8001296:	f8df 1b14 	ldr.w	r1, [pc, #2836]	; 8001dac <.text_75>
 800129a:	fb23 0c01 	smlad	ip, r3, r1, r0
 800129e:	6a20      	ldr	r0, [r4, #32]
 80012a0:	f5a9 1180 	sub.w	r1, r9, #1048576	; 0x100000
 80012a4:	b148      	cbz	r0, 80012ba <D128_GENERIC+0x336>
 80012a6:	9b04      	ldr	r3, [sp, #16]
 80012a8:	9104      	str	r1, [sp, #16]
 80012aa:	eb01 020a 	add.w	r2, r1, sl
 80012ae:	1ad2      	subs	r2, r2, r3
 80012b0:	fb52 f010 	smmulr	r0, r2, r0
 80012b4:	ea4f 0a40 	mov.w	sl, r0, lsl #1
 80012b8:	4651      	mov	r1, sl
 80012ba:	9805      	ldr	r0, [sp, #20]
 80012bc:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 80012be:	01c9      	lsls	r1, r1, #7
 80012c0:	fb51 f010 	smmulr	r0, r1, r0
 80012c4:	9907      	ldr	r1, [sp, #28]
 80012c6:	f320 008f 	ssat	r0, #16, r0, asr #2
 80012ca:	fb02 f208 	mul.w	r2, r2, r8
 80012ce:	f821 0012 	strh.w	r0, [r1, r2, lsl #1]
 80012d2:	f108 0801 	add.w	r8, r8, #1
 80012d6:	8ce0      	ldrh	r0, [r4, #38]	; 0x26
 80012d8:	4580      	cmp	r8, r0
 80012da:	f6ff ae6b 	blt.w	8000fb4 <D128_GENERIC+0x30>
 80012de:	f8c4 c008 	str.w	ip, [r4, #8]
 80012e2:	f8c4 e00c 	str.w	lr, [r4, #12]
 80012e6:	61e7      	str	r7, [r4, #28]
 80012e8:	f8c4 a010 	str.w	sl, [r4, #16]
 80012ec:	9804      	ldr	r0, [sp, #16]
 80012ee:	6160      	str	r0, [r4, #20]
 80012f0:	9806      	ldr	r0, [sp, #24]
 80012f2:	61a0      	str	r0, [r4, #24]
 80012f4:	b008      	add	sp, #32
 80012f6:	2000      	movs	r0, #0
 80012f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080012fc <.text_33>:
 80012fc:	00010003 	.word	0x00010003

08001300 <D16_1CH_HTONS_VOL_HP>:
 8001300:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001304:	b083      	sub	sp, #12
 8001306:	468a      	mov	sl, r1
 8001308:	6911      	ldr	r1, [r2, #16]
 800130a:	6953      	ldr	r3, [r2, #20]
 800130c:	6994      	ldr	r4, [r2, #24]
 800130e:	9402      	str	r4, [sp, #8]
 8001310:	f8d2 901c 	ldr.w	r9, [r2, #28]
 8001314:	6894      	ldr	r4, [r2, #8]
 8001316:	f8d2 800c 	ldr.w	r8, [r2, #12]
 800131a:	6b17      	ldr	r7, [r2, #48]	; 0x30
 800131c:	9701      	str	r7, [sp, #4]
 800131e:	6a15      	ldr	r5, [r2, #32]
 8001320:	8cd7      	ldrh	r7, [r2, #38]	; 0x26
 8001322:	9500      	str	r5, [sp, #0]
 8001324:	2f01      	cmp	r7, #1
 8001326:	db34      	blt.n	8001392 <D16_1CH_HTONS_VOL_HP+0x92>
 8001328:	f8df ca84 	ldr.w	ip, [pc, #2692]	; 8001db0 <.text_76>
 800132c:	f8df ea84 	ldr.w	lr, [pc, #2692]	; 8001db4 <.text_77>
 8001330:	f8df ba84 	ldr.w	fp, [pc, #2692]	; 8001db8 <.text_78>
 8001334:	f850 5b02 	ldr.w	r5, [r0], #2
 8001338:	ba6d      	rev16	r5, r5
 800133a:	f005 06ff 	and.w	r6, r5, #255	; 0xff
 800133e:	eb0b 0686 	add.w	r6, fp, r6, lsl #2
 8001342:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8001346:	eb0b 0585 	add.w	r5, fp, r5, lsl #2
 800134a:	6876      	ldr	r6, [r6, #4]
 800134c:	686d      	ldr	r5, [r5, #4]
 800134e:	444e      	add	r6, r9
 8001350:	f3c6 0909 	ubfx	r9, r6, #0, #10
 8001354:	eb05 2596 	add.w	r5, r5, r6, lsr #10
 8001358:	f3c5 0609 	ubfx	r6, r5, #0, #10
 800135c:	ea46 4609 	orr.w	r6, r6, r9, lsl #16
 8001360:	ea4f 2995 	mov.w	r9, r5, lsr #10
 8001364:	fb26 450e 	smlad	r5, r6, lr, r4
 8001368:	fb26 f40c 	smuad	r4, r6, ip
 800136c:	f5a5 6500 	sub.w	r5, r5, #2048	; 0x800
 8001370:	9e00      	ldr	r6, [sp, #0]
 8001372:	1869      	adds	r1, r5, r1
 8001374:	1ac9      	subs	r1, r1, r3
 8001376:	fb51 f116 	smmulr	r1, r1, r6
 800137a:	462b      	mov	r3, r5
 800137c:	0049      	lsls	r1, r1, #1
 800137e:	9d01      	ldr	r5, [sp, #4]
 8001380:	040e      	lsls	r6, r1, #16
 8001382:	fb56 f515 	smmulr	r5, r6, r5
 8001386:	f325 058f 	ssat	r5, #16, r5, asr #2
 800138a:	1e7f      	subs	r7, r7, #1
 800138c:	f82a 5b02 	strh.w	r5, [sl], #2
 8001390:	d1d0      	bne.n	8001334 <D16_1CH_HTONS_VOL_HP+0x34>
 8001392:	6094      	str	r4, [r2, #8]
 8001394:	f8c2 800c 	str.w	r8, [r2, #12]
 8001398:	f8c2 901c 	str.w	r9, [r2, #28]
 800139c:	6111      	str	r1, [r2, #16]
 800139e:	6153      	str	r3, [r2, #20]
 80013a0:	9802      	ldr	r0, [sp, #8]
 80013a2:	6190      	str	r0, [r2, #24]
 80013a4:	b003      	add	sp, #12
 80013a6:	2000      	movs	r0, #0
 80013a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080013ac <.text_35>:
 80013ac:	00060007 	.word	0x00060007

080013b0 <D24_1CH_HTONS_VOL_HP>:
 80013b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80013b4:	b084      	sub	sp, #16
 80013b6:	6913      	ldr	r3, [r2, #16]
 80013b8:	f8d2 8014 	ldr.w	r8, [r2, #20]
 80013bc:	6995      	ldr	r5, [r2, #24]
 80013be:	9503      	str	r5, [sp, #12]
 80013c0:	f8d2 9008 	ldr.w	r9, [r2, #8]
 80013c4:	69d5      	ldr	r5, [r2, #28]
 80013c6:	f8d2 a00c 	ldr.w	sl, [r2, #12]
 80013ca:	6b14      	ldr	r4, [r2, #48]	; 0x30
 80013cc:	9402      	str	r4, [sp, #8]
 80013ce:	f04f 0c00 	mov.w	ip, #0
 80013d2:	8cd4      	ldrh	r4, [r2, #38]	; 0x26
 80013d4:	9400      	str	r4, [sp, #0]
 80013d6:	6a14      	ldr	r4, [r2, #32]
 80013d8:	9401      	str	r4, [sp, #4]
 80013da:	9c00      	ldr	r4, [sp, #0]
 80013dc:	2c01      	cmp	r4, #1
 80013de:	db5e      	blt.n	800149e <D24_1CH_HTONS_VOL_HP+0xee>
 80013e0:	f8df e9d0 	ldr.w	lr, [pc, #2512]	; 8001db4 <.text_77>
 80013e4:	eb0c 77dc 	add.w	r7, ip, ip, lsr #31
 80013e8:	107f      	asrs	r7, r7, #1
 80013ea:	78c4      	ldrb	r4, [r0, #3]
 80013ec:	7806      	ldrb	r6, [r0, #0]
 80013ee:	ebbc 0747 	subs.w	r7, ip, r7, lsl #1
 80013f2:	d106      	bne.n	8001402 <D24_1CH_HTONS_VOL_HP+0x52>
 80013f4:	0236      	lsls	r6, r6, #8
 80013f6:	eb06 4404 	add.w	r4, r6, r4, lsl #16
 80013fa:	7846      	ldrb	r6, [r0, #1]
 80013fc:	19a6      	adds	r6, r4, r6
 80013fe:	1c80      	adds	r0, r0, #2
 8001400:	e005      	b.n	800140e <D24_1CH_HTONS_VOL_HP+0x5e>
 8001402:	7887      	ldrb	r7, [r0, #2]
 8001404:	0224      	lsls	r4, r4, #8
 8001406:	eb04 4407 	add.w	r4, r4, r7, lsl #16
 800140a:	1936      	adds	r6, r6, r4
 800140c:	1d00      	adds	r0, r0, #4
 800140e:	f8df 44b8 	ldr.w	r4, [pc, #1208]	; 80018c8 <.text_52>
 8001412:	f006 07ff 	and.w	r7, r6, #255	; 0xff
 8001416:	eb04 0787 	add.w	r7, r4, r7, lsl #2
 800141a:	f10c 0c01 	add.w	ip, ip, #1
 800141e:	687f      	ldr	r7, [r7, #4]
 8001420:	eb07 2795 	add.w	r7, r7, r5, lsr #10
 8001424:	0a35      	lsrs	r5, r6, #8
 8001426:	f005 0bff 	and.w	fp, r5, #255	; 0xff
 800142a:	eb04 0b8b 	add.w	fp, r4, fp, lsl #2
 800142e:	f3c7 0609 	ubfx	r6, r7, #0, #10
 8001432:	f8db b004 	ldr.w	fp, [fp, #4]
 8001436:	0a2d      	lsrs	r5, r5, #8
 8001438:	eb0b 2797 	add.w	r7, fp, r7, lsr #10
 800143c:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8001440:	f3c7 0b09 	ubfx	fp, r7, #0, #10
 8001444:	ea4b 4606 	orr.w	r6, fp, r6, lsl #16
 8001448:	686d      	ldr	r5, [r5, #4]
 800144a:	fb26 a40e 	smlad	r4, r6, lr, sl
 800144e:	eb05 2597 	add.w	r5, r5, r7, lsr #10
 8001452:	f8df a968 	ldr.w	sl, [pc, #2408]	; 8001dbc <.text_79>
 8001456:	f3c5 0709 	ubfx	r7, r5, #0, #10
 800145a:	fb26 990a 	smlad	r9, r6, sl, r9
 800145e:	eb07 0a47 	add.w	sl, r7, r7, lsl #1
 8001462:	eb09 0a4a 	add.w	sl, r9, sl, lsl #1
 8001466:	f04f 0901 	mov.w	r9, #1
 800146a:	fb26 f909 	smuad	r9, r6, r9
 800146e:	eb07 0647 	add.w	r6, r7, r7, lsl #1
 8001472:	44b1      	add	r9, r6
 8001474:	f5a4 54d8 	sub.w	r4, r4, #6912	; 0x1b00
 8001478:	9e01      	ldr	r6, [sp, #4]
 800147a:	18e3      	adds	r3, r4, r3
 800147c:	eba3 0308 	sub.w	r3, r3, r8
 8001480:	fb53 f316 	smmulr	r3, r3, r6
 8001484:	46a0      	mov	r8, r4
 8001486:	005b      	lsls	r3, r3, #1
 8001488:	9c02      	ldr	r4, [sp, #8]
 800148a:	039e      	lsls	r6, r3, #14
 800148c:	fb56 f414 	smmulr	r4, r6, r4
 8001490:	f324 048f 	ssat	r4, #16, r4, asr #2
 8001494:	f821 4b02 	strh.w	r4, [r1], #2
 8001498:	9c00      	ldr	r4, [sp, #0]
 800149a:	45a4      	cmp	ip, r4
 800149c:	dba2      	blt.n	80013e4 <D24_1CH_HTONS_VOL_HP+0x34>
 800149e:	f8c2 9008 	str.w	r9, [r2, #8]
 80014a2:	f8c2 a00c 	str.w	sl, [r2, #12]
 80014a6:	61d5      	str	r5, [r2, #28]
 80014a8:	6113      	str	r3, [r2, #16]
 80014aa:	f8c2 8014 	str.w	r8, [r2, #20]
 80014ae:	9803      	ldr	r0, [sp, #12]
 80014b0:	6190      	str	r0, [r2, #24]
 80014b2:	b004      	add	sp, #16
 80014b4:	2000      	movs	r0, #0
 80014b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080014bc <.text_37>:
 80014bc:	00060003 	.word	0x00060003

080014c0 <D32_1CH_HTONS_VOL_HP>:
 80014c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80014c4:	b083      	sub	sp, #12
 80014c6:	4689      	mov	r9, r1
 80014c8:	6911      	ldr	r1, [r2, #16]
 80014ca:	6953      	ldr	r3, [r2, #20]
 80014cc:	6994      	ldr	r4, [r2, #24]
 80014ce:	9402      	str	r4, [sp, #8]
 80014d0:	f8d2 e01c 	ldr.w	lr, [r2, #28]
 80014d4:	6894      	ldr	r4, [r2, #8]
 80014d6:	f8d2 800c 	ldr.w	r8, [r2, #12]
 80014da:	6b17      	ldr	r7, [r2, #48]	; 0x30
 80014dc:	9701      	str	r7, [sp, #4]
 80014de:	6a15      	ldr	r5, [r2, #32]
 80014e0:	8cd7      	ldrh	r7, [r2, #38]	; 0x26
 80014e2:	9500      	str	r5, [sp, #0]
 80014e4:	2f01      	cmp	r7, #1
 80014e6:	db5d      	blt.n	80015a4 <D32_1CH_HTONS_VOL_HP+0xe4>
 80014e8:	f8df c8d4 	ldr.w	ip, [pc, #2260]	; 8001dc0 <.text_80>
 80014ec:	f8df b3d8 	ldr.w	fp, [pc, #984]	; 80018c8 <.text_52>
 80014f0:	f850 5b04 	ldr.w	r5, [r0], #4
 80014f4:	ba6d      	rev16	r5, r5
 80014f6:	f005 06ff 	and.w	r6, r5, #255	; 0xff
 80014fa:	eb0b 0686 	add.w	r6, fp, r6, lsl #2
 80014fe:	6876      	ldr	r6, [r6, #4]
 8001500:	eb06 269e 	add.w	r6, r6, lr, lsr #10
 8001504:	ea4f 2e15 	mov.w	lr, r5, lsr #8
 8001508:	f00e 0aff 	and.w	sl, lr, #255	; 0xff
 800150c:	eb0b 0a8a 	add.w	sl, fp, sl, lsl #2
 8001510:	f3c6 0509 	ubfx	r5, r6, #0, #10
 8001514:	f8da a004 	ldr.w	sl, [sl, #4]
 8001518:	eb0a 2696 	add.w	r6, sl, r6, lsr #10
 800151c:	f3c6 0a09 	ubfx	sl, r6, #0, #10
 8001520:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8001524:	ea4a 4505 	orr.w	r5, sl, r5, lsl #16
 8001528:	f00e 0aff 	and.w	sl, lr, #255	; 0xff
 800152c:	eb0b 0a8a 	add.w	sl, fp, sl, lsl #2
 8001530:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8001534:	eb0b 0e8e 	add.w	lr, fp, lr, lsl #2
 8001538:	f8da a004 	ldr.w	sl, [sl, #4]
 800153c:	f8de e004 	ldr.w	lr, [lr, #4]
 8001540:	eb0a 2a96 	add.w	sl, sl, r6, lsr #10
 8001544:	f3ca 0609 	ubfx	r6, sl, #0, #10
 8001548:	eb0e 2e9a 	add.w	lr, lr, sl, lsr #10
 800154c:	f3ce 0a09 	ubfx	sl, lr, #0, #10
 8001550:	ea4a 4606 	orr.w	r6, sl, r6, lsl #16
 8001554:	fb25 880c 	smlad	r8, r5, ip, r8
 8001558:	f44f 3a80 	mov.w	sl, #65536	; 0x10000
 800155c:	fb26 8a0a 	smlad	sl, r6, sl, r8
 8001560:	f8df 805c 	ldr.w	r8, [pc, #92]	; 80015c0 <.text_39>
 8001564:	fb25 4408 	smlad	r4, r5, r8, r4
 8001568:	f8df 8058 	ldr.w	r8, [pc, #88]	; 80015c4 <.text_40>
 800156c:	fb26 4808 	smlad	r8, r6, r8, r4
 8001570:	2401      	movs	r4, #1
 8001572:	fb25 f404 	smuad	r4, r5, r4
 8001576:	f8df 584c 	ldr.w	r5, [pc, #2124]	; 8001dc4 <.text_81>
 800157a:	fb26 4405 	smlad	r4, r6, r5, r4
 800157e:	f5aa 4580 	sub.w	r5, sl, #16384	; 0x4000
 8001582:	9e00      	ldr	r6, [sp, #0]
 8001584:	1869      	adds	r1, r5, r1
 8001586:	1ac9      	subs	r1, r1, r3
 8001588:	fb51 f116 	smmulr	r1, r1, r6
 800158c:	462b      	mov	r3, r5
 800158e:	0049      	lsls	r1, r1, #1
 8001590:	9d01      	ldr	r5, [sp, #4]
 8001592:	034e      	lsls	r6, r1, #13
 8001594:	fb56 f515 	smmulr	r5, r6, r5
 8001598:	f325 058f 	ssat	r5, #16, r5, asr #2
 800159c:	1e7f      	subs	r7, r7, #1
 800159e:	f829 5b02 	strh.w	r5, [r9], #2
 80015a2:	d1a5      	bne.n	80014f0 <D32_1CH_HTONS_VOL_HP+0x30>
 80015a4:	6094      	str	r4, [r2, #8]
 80015a6:	f8c2 800c 	str.w	r8, [r2, #12]
 80015aa:	f8c2 e01c 	str.w	lr, [r2, #28]
 80015ae:	6111      	str	r1, [r2, #16]
 80015b0:	6153      	str	r3, [r2, #20]
 80015b2:	9802      	ldr	r0, [sp, #8]
 80015b4:	6190      	str	r0, [r2, #24]
 80015b6:	b003      	add	sp, #12
 80015b8:	2000      	movs	r0, #0
 80015ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080015c0 <.text_39>:
 80015c0:	000a000c 	.word	0x000a000c

080015c4 <.text_40>:
 80015c4:	000c000a 	.word	0x000c000a

080015c8 <.text_41>:
 80015c8:	000f000a 	.word	0x000f000a

080015cc <D48_1CH_HTONS_VOL_HP>:
 80015cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80015d0:	b083      	sub	sp, #12
 80015d2:	468a      	mov	sl, r1
 80015d4:	6911      	ldr	r1, [r2, #16]
 80015d6:	6953      	ldr	r3, [r2, #20]
 80015d8:	6994      	ldr	r4, [r2, #24]
 80015da:	f8df b2ec 	ldr.w	fp, [pc, #748]	; 80018c8 <.text_52>
 80015de:	9402      	str	r4, [sp, #8]
 80015e0:	69d6      	ldr	r6, [r2, #28]
 80015e2:	6894      	ldr	r4, [r2, #8]
 80015e4:	f8d2 800c 	ldr.w	r8, [r2, #12]
 80015e8:	6b17      	ldr	r7, [r2, #48]	; 0x30
 80015ea:	9701      	str	r7, [sp, #4]
 80015ec:	6a15      	ldr	r5, [r2, #32]
 80015ee:	8cd7      	ldrh	r7, [r2, #38]	; 0x26
 80015f0:	9500      	str	r5, [sp, #0]
 80015f2:	2f01      	cmp	r7, #1
 80015f4:	f2c0 8081 	blt.w	80016fa <D48_1CH_HTONS_VOL_HP+0x12e>
 80015f8:	f8d0 c000 	ldr.w	ip, [r0]
 80015fc:	6845      	ldr	r5, [r0, #4]
 80015fe:	fa9c fe9c 	rev16.w	lr, ip
 8001602:	fa95 fc95 	rev16.w	ip, r5
 8001606:	f00e 05ff 	and.w	r5, lr, #255	; 0xff
 800160a:	eb0b 0585 	add.w	r5, fp, r5, lsl #2
 800160e:	1d80      	adds	r0, r0, #6
 8001610:	686d      	ldr	r5, [r5, #4]
 8001612:	eb05 2996 	add.w	r9, r5, r6, lsr #10
 8001616:	ea4f 251e 	mov.w	r5, lr, lsr #8
 800161a:	f005 06ff 	and.w	r6, r5, #255	; 0xff
 800161e:	eb0b 0686 	add.w	r6, fp, r6, lsl #2
 8001622:	f3c9 0e09 	ubfx	lr, r9, #0, #10
 8001626:	6876      	ldr	r6, [r6, #4]
 8001628:	eb06 2999 	add.w	r9, r6, r9, lsr #10
 800162c:	f3c9 0609 	ubfx	r6, r9, #0, #10
 8001630:	0a2d      	lsrs	r5, r5, #8
 8001632:	ea46 4e0e 	orr.w	lr, r6, lr, lsl #16
 8001636:	f005 06ff 	and.w	r6, r5, #255	; 0xff
 800163a:	eb0b 0686 	add.w	r6, fp, r6, lsl #2
 800163e:	0a2d      	lsrs	r5, r5, #8
 8001640:	6876      	ldr	r6, [r6, #4]
 8001642:	eb0b 0585 	add.w	r5, fp, r5, lsl #2
 8001646:	eb06 2699 	add.w	r6, r6, r9, lsr #10
 800164a:	686d      	ldr	r5, [r5, #4]
 800164c:	f3c6 0909 	ubfx	r9, r6, #0, #10
 8001650:	eb05 2696 	add.w	r6, r5, r6, lsr #10
 8001654:	f3c6 0509 	ubfx	r5, r6, #0, #10
 8001658:	ea45 4509 	orr.w	r5, r5, r9, lsl #16
 800165c:	f00c 09ff 	and.w	r9, ip, #255	; 0xff
 8001660:	eb0b 0989 	add.w	r9, fp, r9, lsl #2
 8001664:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8001668:	f8d9 9004 	ldr.w	r9, [r9, #4]
 800166c:	eb0b 0c8c 	add.w	ip, fp, ip, lsl #2
 8001670:	eb09 2696 	add.w	r6, r9, r6, lsr #10
 8001674:	f8dc c004 	ldr.w	ip, [ip, #4]
 8001678:	f3c6 0909 	ubfx	r9, r6, #0, #10
 800167c:	eb0c 2696 	add.w	r6, ip, r6, lsr #10
 8001680:	f3c6 0c09 	ubfx	ip, r6, #0, #10
 8001684:	ea4c 4c09 	orr.w	ip, ip, r9, lsl #16
 8001688:	f8df 973c 	ldr.w	r9, [pc, #1852]	; 8001dc8 <.text_82>
 800168c:	fb2e 8809 	smlad	r8, lr, r9, r8
 8001690:	f8df 972c 	ldr.w	r9, [pc, #1836]	; 8001dc0 <.text_80>
 8001694:	fb25 8809 	smlad	r8, r5, r9, r8
 8001698:	f44f 3980 	mov.w	r9, #65536	; 0x10000
 800169c:	fb2c 8909 	smlad	r9, ip, r9, r8
 80016a0:	f8df 8074 	ldr.w	r8, [pc, #116]	; 8001718 <.text_44>
 80016a4:	fb2e 4408 	smlad	r4, lr, r8, r4
 80016a8:	f04f 181b 	mov.w	r8, #1769499	; 0x1b001b
 80016ac:	fb25 4408 	smlad	r4, r5, r8, r4
 80016b0:	f8df 8068 	ldr.w	r8, [pc, #104]	; 800171c <.text_45>
 80016b4:	fb2c 4808 	smlad	r8, ip, r8, r4
 80016b8:	2401      	movs	r4, #1
 80016ba:	fb2e f404 	smuad	r4, lr, r4
 80016be:	f8df e054 	ldr.w	lr, [pc, #84]	; 8001714 <.text_43>
 80016c2:	fb25 440e 	smlad	r4, r5, lr, r4
 80016c6:	f8df 5704 	ldr.w	r5, [pc, #1796]	; 8001dcc <.text_83>
 80016ca:	f8dd e000 	ldr.w	lr, [sp]
 80016ce:	fb2c 4405 	smlad	r4, ip, r5, r4
 80016d2:	f5a9 4558 	sub.w	r5, r9, #55296	; 0xd800
 80016d6:	4429      	add	r1, r5
 80016d8:	1ac9      	subs	r1, r1, r3
 80016da:	fb51 f11e 	smmulr	r1, r1, lr
 80016de:	0049      	lsls	r1, r1, #1
 80016e0:	462b      	mov	r3, r5
 80016e2:	f8dd c004 	ldr.w	ip, [sp, #4]
 80016e6:	02cd      	lsls	r5, r1, #11
 80016e8:	fb55 fc1c 	smmulr	ip, r5, ip
 80016ec:	f32c 0c8f 	ssat	ip, #16, ip, asr #2
 80016f0:	1e7f      	subs	r7, r7, #1
 80016f2:	f82a cb02 	strh.w	ip, [sl], #2
 80016f6:	f47f af7f 	bne.w	80015f8 <D48_1CH_HTONS_VOL_HP+0x2c>
 80016fa:	6094      	str	r4, [r2, #8]
 80016fc:	f8c2 800c 	str.w	r8, [r2, #12]
 8001700:	61d6      	str	r6, [r2, #28]
 8001702:	6111      	str	r1, [r2, #16]
 8001704:	6153      	str	r3, [r2, #20]
 8001706:	9802      	ldr	r0, [sp, #8]
 8001708:	6190      	str	r0, [r2, #24]
 800170a:	b003      	add	sp, #12
 800170c:	2000      	movs	r0, #0
 800170e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08001714 <.text_43>:
 8001714:	00030006 	.word	0x00030006

08001718 <.text_44>:
 8001718:	00150019 	.word	0x00150019

0800171c <.text_45>:
 800171c:	00190015 	.word	0x00190015

08001720 <D64_1CH_HTONS_VOL_HP>:
 8001720:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001724:	b084      	sub	sp, #16
 8001726:	4603      	mov	r3, r0
 8001728:	6914      	ldr	r4, [r2, #16]
 800172a:	f8d2 8014 	ldr.w	r8, [r2, #20]
 800172e:	6990      	ldr	r0, [r2, #24]
 8001730:	9003      	str	r0, [sp, #12]
 8001732:	f8d2 e01c 	ldr.w	lr, [r2, #28]
 8001736:	f8d2 a008 	ldr.w	sl, [r2, #8]
 800173a:	f8d2 b00c 	ldr.w	fp, [r2, #12]
 800173e:	6b10      	ldr	r0, [r2, #48]	; 0x30
 8001740:	9002      	str	r0, [sp, #8]
 8001742:	6a15      	ldr	r5, [r2, #32]
 8001744:	8cd0      	ldrh	r0, [r2, #38]	; 0x26
 8001746:	9501      	str	r5, [sp, #4]
 8001748:	2801      	cmp	r0, #1
 800174a:	f2c0 80a3 	blt.w	8001894 <D64_1CH_HTONS_VOL_HP+0x174>
 800174e:	9100      	str	r1, [sp, #0]
 8001750:	ea4f 0c00 	mov.w	ip, r0
 8001754:	e8f3 0102 	ldrd	r0, r1, [r3], #8
 8001758:	ba45      	rev16	r5, r0
 800175a:	ba4f      	rev16	r7, r1
 800175c:	485a      	ldr	r0, [pc, #360]	; (80018c8 <.text_52>)
 800175e:	f005 01ff 	and.w	r1, r5, #255	; 0xff
 8001762:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8001766:	6849      	ldr	r1, [r1, #4]
 8001768:	448e      	add	lr, r1
 800176a:	0a29      	lsrs	r1, r5, #8
 800176c:	f001 06ff 	and.w	r6, r1, #255	; 0xff
 8001770:	eb00 0686 	add.w	r6, r0, r6, lsl #2
 8001774:	f3ce 0509 	ubfx	r5, lr, #0, #10
 8001778:	6876      	ldr	r6, [r6, #4]
 800177a:	eb06 269e 	add.w	r6, r6, lr, lsr #10
 800177e:	ea4f 2e11 	mov.w	lr, r1, lsr #8
 8001782:	f3c6 0109 	ubfx	r1, r6, #0, #10
 8001786:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 800178a:	f00e 05ff 	and.w	r5, lr, #255	; 0xff
 800178e:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 8001792:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8001796:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
 800179a:	686d      	ldr	r5, [r5, #4]
 800179c:	f8de e004 	ldr.w	lr, [lr, #4]
 80017a0:	eb05 2696 	add.w	r6, r5, r6, lsr #10
 80017a4:	f3c6 0509 	ubfx	r5, r6, #0, #10
 80017a8:	eb0e 2e96 	add.w	lr, lr, r6, lsr #10
 80017ac:	f3ce 0609 	ubfx	r6, lr, #0, #10
 80017b0:	ea46 4505 	orr.w	r5, r6, r5, lsl #16
 80017b4:	f007 06ff 	and.w	r6, r7, #255	; 0xff
 80017b8:	eb00 0686 	add.w	r6, r0, r6, lsl #2
 80017bc:	6876      	ldr	r6, [r6, #4]
 80017be:	eb06 269e 	add.w	r6, r6, lr, lsr #10
 80017c2:	ea4f 2e17 	mov.w	lr, r7, lsr #8
 80017c6:	f00e 07ff 	and.w	r7, lr, #255	; 0xff
 80017ca:	eb00 0787 	add.w	r7, r0, r7, lsl #2
 80017ce:	f3c6 0909 	ubfx	r9, r6, #0, #10
 80017d2:	687f      	ldr	r7, [r7, #4]
 80017d4:	eb07 2696 	add.w	r6, r7, r6, lsr #10
 80017d8:	f3c6 0709 	ubfx	r7, r6, #0, #10
 80017dc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80017e0:	ea47 4909 	orr.w	r9, r7, r9, lsl #16
 80017e4:	f00e 07ff 	and.w	r7, lr, #255	; 0xff
 80017e8:	eb00 0787 	add.w	r7, r0, r7, lsl #2
 80017ec:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80017f0:	687f      	ldr	r7, [r7, #4]
 80017f2:	eb00 008e 	add.w	r0, r0, lr, lsl #2
 80017f6:	eb07 2796 	add.w	r7, r7, r6, lsr #10
 80017fa:	6840      	ldr	r0, [r0, #4]
 80017fc:	f3c7 0609 	ubfx	r6, r7, #0, #10
 8001800:	eb00 2797 	add.w	r7, r0, r7, lsr #10
 8001804:	f3c7 0009 	ubfx	r0, r7, #0, #10
 8001808:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800180c:	4e2a      	ldr	r6, [pc, #168]	; (80018b8 <.text_48>)
 800180e:	fb21 bb06 	smlad	fp, r1, r6, fp
 8001812:	f8df 65b4 	ldr.w	r6, [pc, #1460]	; 8001dc8 <.text_82>
 8001816:	fb25 bb06 	smlad	fp, r5, r6, fp
 800181a:	f8df 65a4 	ldr.w	r6, [pc, #1444]	; 8001dc0 <.text_80>
 800181e:	fb29 bb06 	smlad	fp, r9, r6, fp
 8001822:	ea4f 2e97 	mov.w	lr, r7, lsr #10
 8001826:	f44f 3680 	mov.w	r6, #65536	; 0x10000
 800182a:	fb20 b606 	smlad	r6, r0, r6, fp
 800182e:	4f23      	ldr	r7, [pc, #140]	; (80018bc <.text_49>)
 8001830:	f8df b08c 	ldr.w	fp, [pc, #140]	; 80018c0 <.text_50>
 8001834:	fb21 aa07 	smlad	sl, r1, r7, sl
 8001838:	fb20 aa17 	smladx	sl, r0, r7, sl
 800183c:	fb25 aa0b 	smlad	sl, r5, fp, sl
 8001840:	fb29 ab1b 	smladx	fp, r9, fp, sl
 8001844:	2701      	movs	r7, #1
 8001846:	fb21 f107 	smuad	r1, r1, r7
 800184a:	f8df 7578 	ldr.w	r7, [pc, #1400]	; 8001dc4 <.text_81>
 800184e:	f8df a074 	ldr.w	sl, [pc, #116]	; 80018c4 <.text_51>
 8001852:	fb25 1107 	smlad	r1, r5, r7, r1
 8001856:	f8df 5574 	ldr.w	r5, [pc, #1396]	; 8001dcc <.text_83>
 800185a:	fb29 1105 	smlad	r1, r9, r5, r1
 800185e:	fb20 1a0a 	smlad	sl, r0, sl, r1
 8001862:	f5a6 3000 	sub.w	r0, r6, #131072	; 0x20000
 8001866:	9901      	ldr	r1, [sp, #4]
 8001868:	1904      	adds	r4, r0, r4
 800186a:	eba4 0408 	sub.w	r4, r4, r8
 800186e:	fb54 f111 	smmulr	r1, r4, r1
 8001872:	4680      	mov	r8, r0
 8001874:	004c      	lsls	r4, r1, #1
 8001876:	9802      	ldr	r0, [sp, #8]
 8001878:	02a1      	lsls	r1, r4, #10
 800187a:	fb51 f010 	smmulr	r0, r1, r0
 800187e:	9900      	ldr	r1, [sp, #0]
 8001880:	1c89      	adds	r1, r1, #2
 8001882:	9100      	str	r1, [sp, #0]
 8001884:	f320 008f 	ssat	r0, #16, r0, asr #2
 8001888:	f1bc 0c01 	subs.w	ip, ip, #1
 800188c:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8001890:	f47f af60 	bne.w	8001754 <D64_1CH_HTONS_VOL_HP+0x34>
 8001894:	f8c2 a008 	str.w	sl, [r2, #8]
 8001898:	f8c2 b00c 	str.w	fp, [r2, #12]
 800189c:	f8c2 e01c 	str.w	lr, [r2, #28]
 80018a0:	6114      	str	r4, [r2, #16]
 80018a2:	f8c2 8014 	str.w	r8, [r2, #20]
 80018a6:	9803      	ldr	r0, [sp, #12]
 80018a8:	6190      	str	r0, [r2, #24]
 80018aa:	b004      	add	sp, #16
 80018ac:	2000      	movs	r0, #0
 80018ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080018b4 <.text_47>:
 80018b4:	000a000f 	.word	0x000a000f

080018b8 <.text_48>:
 80018b8:	001c0015 	.word	0x001c0015

080018bc <.text_49>:
 80018bc:	0024002a 	.word	0x0024002a

080018c0 <.text_50>:
 80018c0:	002e0030 	.word	0x002e0030

080018c4 <.text_51>:
 80018c4:	0015001c 	.word	0x0015001c

080018c8 <.text_52>:
 80018c8:	20000000 	.word	0x20000000

080018cc <D80_1CH_HTONS_VOL_HP>:
 80018cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80018d0:	b086      	sub	sp, #24
 80018d2:	460c      	mov	r4, r1
 80018d4:	6911      	ldr	r1, [r2, #16]
 80018d6:	6953      	ldr	r3, [r2, #20]
 80018d8:	6995      	ldr	r5, [r2, #24]
 80018da:	9505      	str	r5, [sp, #20]
 80018dc:	f8d2 8008 	ldr.w	r8, [r2, #8]
 80018e0:	69d5      	ldr	r5, [r2, #28]
 80018e2:	f8d2 900c 	ldr.w	r9, [r2, #12]
 80018e6:	6b17      	ldr	r7, [r2, #48]	; 0x30
 80018e8:	9704      	str	r7, [sp, #16]
 80018ea:	6a16      	ldr	r6, [r2, #32]
 80018ec:	8cd7      	ldrh	r7, [r2, #38]	; 0x26
 80018ee:	9603      	str	r6, [sp, #12]
 80018f0:	2f01      	cmp	r7, #1
 80018f2:	f2c0 80ce 	blt.w	8001a92 <D80_1CH_HTONS_VOL_HP+0x1c6>
 80018f6:	9402      	str	r4, [sp, #8]
 80018f8:	ea4f 0a07 	mov.w	sl, r7
 80018fc:	f8df b4b8 	ldr.w	fp, [pc, #1208]	; 8001db8 <.text_78>
 8001900:	6807      	ldr	r7, [r0, #0]
 8001902:	6846      	ldr	r6, [r0, #4]
 8001904:	6884      	ldr	r4, [r0, #8]
 8001906:	ba64      	rev16	r4, r4
 8001908:	9401      	str	r4, [sp, #4]
 800190a:	ba7f      	rev16	r7, r7
 800190c:	f007 04ff 	and.w	r4, r7, #255	; 0xff
 8001910:	0a3f      	lsrs	r7, r7, #8
 8001912:	eb0b 0484 	add.w	r4, fp, r4, lsl #2
 8001916:	ba76      	rev16	r6, r6
 8001918:	f8d4 c004 	ldr.w	ip, [r4, #4]
 800191c:	44ac      	add	ip, r5
 800191e:	f007 05ff 	and.w	r5, r7, #255	; 0xff
 8001922:	eb0b 0585 	add.w	r5, fp, r5, lsl #2
 8001926:	f3cc 0409 	ubfx	r4, ip, #0, #10
 800192a:	686d      	ldr	r5, [r5, #4]
 800192c:	eb05 259c 	add.w	r5, r5, ip, lsr #10
 8001930:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8001934:	f3c5 0709 	ubfx	r7, r5, #0, #10
 8001938:	ea47 4704 	orr.w	r7, r7, r4, lsl #16
 800193c:	f00c 04ff 	and.w	r4, ip, #255	; 0xff
 8001940:	eb0b 0484 	add.w	r4, fp, r4, lsl #2
 8001944:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8001948:	6864      	ldr	r4, [r4, #4]
 800194a:	eb0b 0c8c 	add.w	ip, fp, ip, lsl #2
 800194e:	eb04 2595 	add.w	r5, r4, r5, lsr #10
 8001952:	f8dc c004 	ldr.w	ip, [ip, #4]
 8001956:	f3c5 0409 	ubfx	r4, r5, #0, #10
 800195a:	eb0c 2595 	add.w	r5, ip, r5, lsr #10
 800195e:	f3c5 0c09 	ubfx	ip, r5, #0, #10
 8001962:	ea4c 4c04 	orr.w	ip, ip, r4, lsl #16
 8001966:	f006 04ff 	and.w	r4, r6, #255	; 0xff
 800196a:	eb0b 0484 	add.w	r4, fp, r4, lsl #2
 800196e:	300a      	adds	r0, #10
 8001970:	6864      	ldr	r4, [r4, #4]
 8001972:	eb04 2595 	add.w	r5, r4, r5, lsr #10
 8001976:	0a34      	lsrs	r4, r6, #8
 8001978:	f004 06ff 	and.w	r6, r4, #255	; 0xff
 800197c:	eb0b 0686 	add.w	r6, fp, r6, lsl #2
 8001980:	f3c5 0e09 	ubfx	lr, r5, #0, #10
 8001984:	6876      	ldr	r6, [r6, #4]
 8001986:	eb06 2595 	add.w	r5, r6, r5, lsr #10
 800198a:	f3c5 0609 	ubfx	r6, r5, #0, #10
 800198e:	0a24      	lsrs	r4, r4, #8
 8001990:	ea46 4e0e 	orr.w	lr, r6, lr, lsl #16
 8001994:	f004 06ff 	and.w	r6, r4, #255	; 0xff
 8001998:	eb0b 0686 	add.w	r6, fp, r6, lsl #2
 800199c:	0a24      	lsrs	r4, r4, #8
 800199e:	6876      	ldr	r6, [r6, #4]
 80019a0:	eb0b 0484 	add.w	r4, fp, r4, lsl #2
 80019a4:	eb06 2695 	add.w	r6, r6, r5, lsr #10
 80019a8:	6864      	ldr	r4, [r4, #4]
 80019aa:	f3c6 0509 	ubfx	r5, r6, #0, #10
 80019ae:	eb04 2696 	add.w	r6, r4, r6, lsr #10
 80019b2:	f3c6 0409 	ubfx	r4, r6, #0, #10
 80019b6:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 80019ba:	9d01      	ldr	r5, [sp, #4]
 80019bc:	f005 05ff 	and.w	r5, r5, #255	; 0xff
 80019c0:	eb0b 0585 	add.w	r5, fp, r5, lsl #2
 80019c4:	686d      	ldr	r5, [r5, #4]
 80019c6:	eb05 2696 	add.w	r6, r5, r6, lsr #10
 80019ca:	9600      	str	r6, [sp, #0]
 80019cc:	f3c6 0509 	ubfx	r5, r6, #0, #10
 80019d0:	9e01      	ldr	r6, [sp, #4]
 80019d2:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80019d6:	eb0b 0686 	add.w	r6, fp, r6, lsl #2
 80019da:	f8dd b000 	ldr.w	fp, [sp]
 80019de:	6876      	ldr	r6, [r6, #4]
 80019e0:	eb06 2b9b 	add.w	fp, r6, fp, lsr #10
 80019e4:	f3cb 0609 	ubfx	r6, fp, #0, #10
 80019e8:	ea46 4605 	orr.w	r6, r6, r5, lsl #16
 80019ec:	ea4f 259b 	mov.w	r5, fp, lsr #10
 80019f0:	f8df b0bc 	ldr.w	fp, [pc, #188]	; 8001ab0 <.text_55>
 80019f4:	fb27 990b 	smlad	r9, r7, fp, r9
 80019f8:	f8df b3d4 	ldr.w	fp, [pc, #980]	; 8001dd0 <.text_84>
 80019fc:	fb2c 990b 	smlad	r9, ip, fp, r9
 8001a00:	f8df b3c4 	ldr.w	fp, [pc, #964]	; 8001dc8 <.text_82>
 8001a04:	fb2e 990b 	smlad	r9, lr, fp, r9
 8001a08:	f8df b3b4 	ldr.w	fp, [pc, #948]	; 8001dc0 <.text_80>
 8001a0c:	fb24 990b 	smlad	r9, r4, fp, r9
 8001a10:	f44f 3b80 	mov.w	fp, #65536	; 0x10000
 8001a14:	fb26 9b0b 	smlad	fp, r6, fp, r9
 8001a18:	f8df 9098 	ldr.w	r9, [pc, #152]	; 8001ab4 <.text_56>
 8001a1c:	fb27 8809 	smlad	r8, r7, r9, r8
 8001a20:	f8df 9094 	ldr.w	r9, [pc, #148]	; 8001ab8 <.text_57>
 8001a24:	fb2c 8809 	smlad	r8, ip, r9, r8
 8001a28:	f04f 194b 	mov.w	r9, #4915275	; 0x4b004b
 8001a2c:	fb2e 8809 	smlad	r8, lr, r9, r8
 8001a30:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8001abc <.text_58>
 8001a34:	fb24 8809 	smlad	r8, r4, r9, r8
 8001a38:	f8df 9084 	ldr.w	r9, [pc, #132]	; 8001ac0 <.text_59>
 8001a3c:	fb26 8909 	smlad	r9, r6, r9, r8
 8001a40:	f04f 0801 	mov.w	r8, #1
 8001a44:	fb27 f708 	smuad	r7, r7, r8
 8001a48:	f8df 8378 	ldr.w	r8, [pc, #888]	; 8001dc4 <.text_81>
 8001a4c:	fb2c 7808 	smlad	r8, ip, r8, r7
 8001a50:	4f16      	ldr	r7, [pc, #88]	; (8001aac <.text_54>)
 8001a52:	fb2e 8807 	smlad	r8, lr, r7, r8
 8001a56:	4fdf      	ldr	r7, [pc, #892]	; (8001dd4 <.text_85>)
 8001a58:	fb24 8807 	smlad	r8, r4, r7, r8
 8001a5c:	4fc5      	ldr	r7, [pc, #788]	; (8001d74 <.text_61>)
 8001a5e:	9c03      	ldr	r4, [sp, #12]
 8001a60:	fb26 8807 	smlad	r8, r6, r7, r8
 8001a64:	f5ab 377a 	sub.w	r7, fp, #256000	; 0x3e800
 8001a68:	1879      	adds	r1, r7, r1
 8001a6a:	1ac9      	subs	r1, r1, r3
 8001a6c:	fb51 f114 	smmulr	r1, r1, r4
 8001a70:	463b      	mov	r3, r7
 8001a72:	0049      	lsls	r1, r1, #1
 8001a74:	9f04      	ldr	r7, [sp, #16]
 8001a76:	024c      	lsls	r4, r1, #9
 8001a78:	fb54 f717 	smmulr	r7, r4, r7
 8001a7c:	9c02      	ldr	r4, [sp, #8]
 8001a7e:	1ca4      	adds	r4, r4, #2
 8001a80:	9402      	str	r4, [sp, #8]
 8001a82:	f327 078f 	ssat	r7, #16, r7, asr #2
 8001a86:	f1ba 0a01 	subs.w	sl, sl, #1
 8001a8a:	f824 7d02 	strh.w	r7, [r4, #-2]!
 8001a8e:	f47f af35 	bne.w	80018fc <D80_1CH_HTONS_VOL_HP+0x30>
 8001a92:	f8c2 8008 	str.w	r8, [r2, #8]
 8001a96:	f8c2 900c 	str.w	r9, [r2, #12]
 8001a9a:	61d5      	str	r5, [r2, #28]
 8001a9c:	6111      	str	r1, [r2, #16]
 8001a9e:	6153      	str	r3, [r2, #20]
 8001aa0:	9805      	ldr	r0, [sp, #20]
 8001aa2:	6190      	str	r0, [r2, #24]
 8001aa4:	b006      	add	sp, #24
 8001aa6:	2000      	movs	r0, #0
 8001aa8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08001aac <.text_54>:
 8001aac:	000a000f 	.word	0x000a000f

08001ab0 <.text_55>:
 8001ab0:	002d0024 	.word	0x002d0024

08001ab4 <.text_56>:
 8001ab4:	0037003f 	.word	0x0037003f

08001ab8 <.text_57>:
 8001ab8:	00450049 	.word	0x00450049

08001abc <.text_58>:
 8001abc:	00490045 	.word	0x00490045

08001ac0 <.text_59>:
 8001ac0:	003f0037 	.word	0x003f0037

08001ac4 <D128_1CH_HTONS_VOL_HP>:
 8001ac4:	e92d 4ff5 	stmdb	sp!, {r0, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001ac8:	b086      	sub	sp, #24
 8001aca:	f8d2 9010 	ldr.w	r9, [r2, #16]
 8001ace:	f8d2 a014 	ldr.w	sl, [r2, #20]
 8001ad2:	6990      	ldr	r0, [r2, #24]
 8001ad4:	9005      	str	r0, [sp, #20]
 8001ad6:	9807      	ldr	r0, [sp, #28]
 8001ad8:	69c6      	ldr	r6, [r0, #28]
 8001ada:	f8d0 b008 	ldr.w	fp, [r0, #8]
 8001ade:	f8d0 c00c 	ldr.w	ip, [r0, #12]
 8001ae2:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8001ae4:	9807      	ldr	r0, [sp, #28]
 8001ae6:	9204      	str	r2, [sp, #16]
 8001ae8:	f8b0 e026 	ldrh.w	lr, [r0, #38]	; 0x26
 8001aec:	6a02      	ldr	r2, [r0, #32]
 8001aee:	9203      	str	r2, [sp, #12]
 8001af0:	f1be 0f01 	cmp.w	lr, #1
 8001af4:	f2c0 8128 	blt.w	8001d48 <D128_1CH_HTONS_VOL_HP+0x284>
 8001af8:	9102      	str	r1, [sp, #8]
 8001afa:	9806      	ldr	r0, [sp, #24]
 8001afc:	3008      	adds	r0, #8
 8001afe:	9006      	str	r0, [sp, #24]
 8001b00:	3808      	subs	r0, #8
 8001b02:	9a06      	ldr	r2, [sp, #24]
 8001b04:	e9d0 0100 	ldrd	r0, r1, [r0]
 8001b08:	3208      	adds	r2, #8
 8001b0a:	9206      	str	r2, [sp, #24]
 8001b0c:	ba40      	rev16	r0, r0
 8001b0e:	3a08      	subs	r2, #8
 8001b10:	f000 04ff 	and.w	r4, r0, #255	; 0xff
 8001b14:	e9d2 2300 	ldrd	r2, r3, [r2]
 8001b18:	ba57      	rev16	r7, r2
 8001b1a:	ba5a      	rev16	r2, r3
 8001b1c:	4ba6      	ldr	r3, [pc, #664]	; (8001db8 <.text_78>)
 8001b1e:	0a00      	lsrs	r0, r0, #8
 8001b20:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8001b24:	f000 05ff 	and.w	r5, r0, #255	; 0xff
 8001b28:	eb03 0585 	add.w	r5, r3, r5, lsl #2
 8001b2c:	6864      	ldr	r4, [r4, #4]
 8001b2e:	686d      	ldr	r5, [r5, #4]
 8001b30:	19a6      	adds	r6, r4, r6
 8001b32:	f3c6 0409 	ubfx	r4, r6, #0, #10
 8001b36:	eb05 2596 	add.w	r5, r5, r6, lsr #10
 8001b3a:	0a06      	lsrs	r6, r0, #8
 8001b3c:	f3c5 0009 	ubfx	r0, r5, #0, #10
 8001b40:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8001b44:	f006 04ff 	and.w	r4, r6, #255	; 0xff
 8001b48:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8001b4c:	0a36      	lsrs	r6, r6, #8
 8001b4e:	6864      	ldr	r4, [r4, #4]
 8001b50:	eb03 0686 	add.w	r6, r3, r6, lsl #2
 8001b54:	eb04 2595 	add.w	r5, r4, r5, lsr #10
 8001b58:	6876      	ldr	r6, [r6, #4]
 8001b5a:	f3c5 0409 	ubfx	r4, r5, #0, #10
 8001b5e:	ba49      	rev16	r1, r1
 8001b60:	eb06 2595 	add.w	r5, r6, r5, lsr #10
 8001b64:	f3c5 0609 	ubfx	r6, r5, #0, #10
 8001b68:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
 8001b6c:	f001 06ff 	and.w	r6, r1, #255	; 0xff
 8001b70:	0a09      	lsrs	r1, r1, #8
 8001b72:	eb03 0686 	add.w	r6, r3, r6, lsl #2
 8001b76:	9401      	str	r4, [sp, #4]
 8001b78:	6876      	ldr	r6, [r6, #4]
 8001b7a:	eb06 2695 	add.w	r6, r6, r5, lsr #10
 8001b7e:	f001 05ff 	and.w	r5, r1, #255	; 0xff
 8001b82:	eb03 0585 	add.w	r5, r3, r5, lsl #2
 8001b86:	f3c6 0409 	ubfx	r4, r6, #0, #10
 8001b8a:	686d      	ldr	r5, [r5, #4]
 8001b8c:	eb05 2596 	add.w	r5, r5, r6, lsr #10
 8001b90:	0a0e      	lsrs	r6, r1, #8
 8001b92:	f3c5 0109 	ubfx	r1, r5, #0, #10
 8001b96:	ea41 4404 	orr.w	r4, r1, r4, lsl #16
 8001b9a:	f006 01ff 	and.w	r1, r6, #255	; 0xff
 8001b9e:	eb03 0181 	add.w	r1, r3, r1, lsl #2
 8001ba2:	0a36      	lsrs	r6, r6, #8
 8001ba4:	9400      	str	r4, [sp, #0]
 8001ba6:	eb03 0686 	add.w	r6, r3, r6, lsl #2
 8001baa:	6849      	ldr	r1, [r1, #4]
 8001bac:	6876      	ldr	r6, [r6, #4]
 8001bae:	eb01 2495 	add.w	r4, r1, r5, lsr #10
 8001bb2:	f3c4 0109 	ubfx	r1, r4, #0, #10
 8001bb6:	eb06 2694 	add.w	r6, r6, r4, lsr #10
 8001bba:	f3c6 0409 	ubfx	r4, r6, #0, #10
 8001bbe:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8001bc2:	f007 04ff 	and.w	r4, r7, #255	; 0xff
 8001bc6:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8001bca:	6864      	ldr	r4, [r4, #4]
 8001bcc:	eb04 2496 	add.w	r4, r4, r6, lsr #10
 8001bd0:	0a3e      	lsrs	r6, r7, #8
 8001bd2:	f006 05ff 	and.w	r5, r6, #255	; 0xff
 8001bd6:	eb03 0585 	add.w	r5, r3, r5, lsl #2
 8001bda:	f3c4 0709 	ubfx	r7, r4, #0, #10
 8001bde:	686d      	ldr	r5, [r5, #4]
 8001be0:	eb05 2494 	add.w	r4, r5, r4, lsr #10
 8001be4:	f3c4 0509 	ubfx	r5, r4, #0, #10
 8001be8:	0a36      	lsrs	r6, r6, #8
 8001bea:	ea45 4807 	orr.w	r8, r5, r7, lsl #16
 8001bee:	f006 05ff 	and.w	r5, r6, #255	; 0xff
 8001bf2:	eb03 0585 	add.w	r5, r3, r5, lsl #2
 8001bf6:	0a36      	lsrs	r6, r6, #8
 8001bf8:	eb03 0686 	add.w	r6, r3, r6, lsl #2
 8001bfc:	686d      	ldr	r5, [r5, #4]
 8001bfe:	6876      	ldr	r6, [r6, #4]
 8001c00:	eb05 2594 	add.w	r5, r5, r4, lsr #10
 8001c04:	f3c5 0409 	ubfx	r4, r5, #0, #10
 8001c08:	eb06 2695 	add.w	r6, r6, r5, lsr #10
 8001c0c:	f3c6 0509 	ubfx	r5, r6, #0, #10
 8001c10:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8001c14:	f002 05ff 	and.w	r5, r2, #255	; 0xff
 8001c18:	eb03 0585 	add.w	r5, r3, r5, lsl #2
 8001c1c:	686d      	ldr	r5, [r5, #4]
 8001c1e:	eb05 2596 	add.w	r5, r5, r6, lsr #10
 8001c22:	0a16      	lsrs	r6, r2, #8
 8001c24:	f006 07ff 	and.w	r7, r6, #255	; 0xff
 8001c28:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8001c2c:	f3c5 0209 	ubfx	r2, r5, #0, #10
 8001c30:	687f      	ldr	r7, [r7, #4]
 8001c32:	eb07 2595 	add.w	r5, r7, r5, lsr #10
 8001c36:	f3c5 0709 	ubfx	r7, r5, #0, #10
 8001c3a:	0a36      	lsrs	r6, r6, #8
 8001c3c:	ea47 4202 	orr.w	r2, r7, r2, lsl #16
 8001c40:	f006 07ff 	and.w	r7, r6, #255	; 0xff
 8001c44:	0a36      	lsrs	r6, r6, #8
 8001c46:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8001c4a:	eb03 0386 	add.w	r3, r3, r6, lsl #2
 8001c4e:	687f      	ldr	r7, [r7, #4]
 8001c50:	685b      	ldr	r3, [r3, #4]
 8001c52:	eb07 2795 	add.w	r7, r7, r5, lsr #10
 8001c56:	eb03 2697 	add.w	r6, r3, r7, lsr #10
 8001c5a:	f3c7 0509 	ubfx	r5, r7, #0, #10
 8001c5e:	f3c6 0309 	ubfx	r3, r6, #0, #10
 8001c62:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
 8001c66:	4d44      	ldr	r5, [pc, #272]	; (8001d78 <.text_62>)
 8001c68:	9f01      	ldr	r7, [sp, #4]
 8001c6a:	fb20 cc05 	smlad	ip, r0, r5, ip
 8001c6e:	4d43      	ldr	r5, [pc, #268]	; (8001d7c <.text_63>)
 8001c70:	fb27 cc05 	smlad	ip, r7, r5, ip
 8001c74:	9f00      	ldr	r7, [sp, #0]
 8001c76:	4d42      	ldr	r5, [pc, #264]	; (8001d80 <.text_64>)
 8001c78:	fb27 cc05 	smlad	ip, r7, r5, ip
 8001c7c:	4d56      	ldr	r5, [pc, #344]	; (8001dd8 <.text_86>)
 8001c7e:	fb21 cc05 	smlad	ip, r1, r5, ip
 8001c82:	4d53      	ldr	r5, [pc, #332]	; (8001dd0 <.text_84>)
 8001c84:	fb28 cc05 	smlad	ip, r8, r5, ip
 8001c88:	4d4f      	ldr	r5, [pc, #316]	; (8001dc8 <.text_82>)
 8001c8a:	0ab6      	lsrs	r6, r6, #10
 8001c8c:	fb24 cc05 	smlad	ip, r4, r5, ip
 8001c90:	4d4b      	ldr	r5, [pc, #300]	; (8001dc0 <.text_80>)
 8001c92:	4f3c      	ldr	r7, [pc, #240]	; (8001d84 <.text_65>)
 8001c94:	fb22 cc05 	smlad	ip, r2, r5, ip
 8001c98:	f44f 3580 	mov.w	r5, #65536	; 0x10000
 8001c9c:	fb23 c505 	smlad	r5, r3, r5, ip
 8001ca0:	fb20 bb07 	smlad	fp, r0, r7, fp
 8001ca4:	9f01      	ldr	r7, [sp, #4]
 8001ca6:	f8df c0e0 	ldr.w	ip, [pc, #224]	; 8001d88 <.text_66>
 8001caa:	fb27 bb0c 	smlad	fp, r7, ip, fp
 8001cae:	9f00      	ldr	r7, [sp, #0]
 8001cb0:	f8df c0d8 	ldr.w	ip, [pc, #216]	; 8001d8c <.text_67>
 8001cb4:	fb27 bb0c 	smlad	fp, r7, ip, fp
 8001cb8:	4f35      	ldr	r7, [pc, #212]	; (8001d90 <.text_68>)
 8001cba:	f8df c0dc 	ldr.w	ip, [pc, #220]	; 8001d98 <.text_70>
 8001cbe:	fb21 bb07 	smlad	fp, r1, r7, fp
 8001cc2:	4f34      	ldr	r7, [pc, #208]	; (8001d94 <.text_69>)
 8001cc4:	fb28 bb07 	smlad	fp, r8, r7, fp
 8001cc8:	4f34      	ldr	r7, [pc, #208]	; (8001d9c <.text_71>)
 8001cca:	fb24 bb07 	smlad	fp, r4, r7, fp
 8001cce:	4f34      	ldr	r7, [pc, #208]	; (8001da0 <.text_72>)
 8001cd0:	fb22 bb07 	smlad	fp, r2, r7, fp
 8001cd4:	fb23 bc0c 	smlad	ip, r3, ip, fp
 8001cd8:	2701      	movs	r7, #1
 8001cda:	fb20 f007 	smuad	r0, r0, r7
 8001cde:	9f01      	ldr	r7, [sp, #4]
 8001ce0:	f8df b0e0 	ldr.w	fp, [pc, #224]	; 8001dc4 <.text_81>
 8001ce4:	fb27 000b 	smlad	r0, r7, fp, r0
 8001ce8:	9f00      	ldr	r7, [sp, #0]
 8001cea:	f8df b0e0 	ldr.w	fp, [pc, #224]	; 8001dcc <.text_83>
 8001cee:	fb27 000b 	smlad	r0, r7, fp, r0
 8001cf2:	4f38      	ldr	r7, [pc, #224]	; (8001dd4 <.text_85>)
 8001cf4:	fb21 0007 	smlad	r0, r1, r7, r0
 8001cf8:	491e      	ldr	r1, [pc, #120]	; (8001d74 <.text_61>)
 8001cfa:	fb28 0001 	smlad	r0, r8, r1, r0
 8001cfe:	4929      	ldr	r1, [pc, #164]	; (8001da4 <.text_73>)
 8001d00:	fb24 0001 	smlad	r0, r4, r1, r0
 8001d04:	4928      	ldr	r1, [pc, #160]	; (8001da8 <.text_74>)
 8001d06:	fb22 0001 	smlad	r0, r2, r1, r0
 8001d0a:	4928      	ldr	r1, [pc, #160]	; (8001dac <.text_75>)
 8001d0c:	fb23 0b01 	smlad	fp, r3, r1, r0
 8001d10:	f5a5 1080 	sub.w	r0, r5, #1048576	; 0x100000
 8001d14:	9903      	ldr	r1, [sp, #12]
 8001d16:	eb00 0209 	add.w	r2, r0, r9
 8001d1a:	eba2 020a 	sub.w	r2, r2, sl
 8001d1e:	fb52 f111 	smmulr	r1, r2, r1
 8001d22:	4682      	mov	sl, r0
 8001d24:	ea4f 0941 	mov.w	r9, r1, lsl #1
 8001d28:	9804      	ldr	r0, [sp, #16]
 8001d2a:	ea4f 11c9 	mov.w	r1, r9, lsl #7
 8001d2e:	fb51 f010 	smmulr	r0, r1, r0
 8001d32:	9902      	ldr	r1, [sp, #8]
 8001d34:	1c89      	adds	r1, r1, #2
 8001d36:	9102      	str	r1, [sp, #8]
 8001d38:	f320 008f 	ssat	r0, #16, r0, asr #2
 8001d3c:	f1be 0e01 	subs.w	lr, lr, #1
 8001d40:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8001d44:	f47f aed9 	bne.w	8001afa <D128_1CH_HTONS_VOL_HP+0x36>
 8001d48:	9807      	ldr	r0, [sp, #28]
 8001d4a:	f8c0 b008 	str.w	fp, [r0, #8]
 8001d4e:	9807      	ldr	r0, [sp, #28]
 8001d50:	f8c0 c00c 	str.w	ip, [r0, #12]
 8001d54:	9807      	ldr	r0, [sp, #28]
 8001d56:	61c6      	str	r6, [r0, #28]
 8001d58:	9807      	ldr	r0, [sp, #28]
 8001d5a:	f8c0 9010 	str.w	r9, [r0, #16]
 8001d5e:	9807      	ldr	r0, [sp, #28]
 8001d60:	f8c0 a014 	str.w	sl, [r0, #20]
 8001d64:	9907      	ldr	r1, [sp, #28]
 8001d66:	9805      	ldr	r0, [sp, #20]
 8001d68:	6188      	str	r0, [r1, #24]
 8001d6a:	b008      	add	sp, #32
 8001d6c:	2000      	movs	r0, #0
 8001d6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08001d74 <.text_61>:
 8001d74:	0024002d 	.word	0x0024002d

08001d78 <.text_62>:
 8001d78:	00780069 	.word	0x00780069

08001d7c <.text_63>:
 8001d7c:	005b004e 	.word	0x005b004e

08001d80 <.text_64>:
 8001d80:	00420037 	.word	0x00420037

08001d84 <.text_65>:
 8001d84:	00880096 	.word	0x00880096

08001d88 <.text_66>:
 8001d88:	00a200ac 	.word	0x00a200ac

08001d8c <.text_67>:
 8001d8c:	00b400ba 	.word	0x00b400ba

08001d90 <.text_68>:
 8001d90:	00be00c0 	.word	0x00be00c0

08001d94 <.text_69>:
 8001d94:	00c000be 	.word	0x00c000be

08001d98 <.text_70>:
 8001d98:	00960088 	.word	0x00960088

08001d9c <.text_71>:
 8001d9c:	00ba00b4 	.word	0x00ba00b4

08001da0 <.text_72>:
 8001da0:	00ac00a2 	.word	0x00ac00a2

08001da4 <.text_73>:
 8001da4:	00370042 	.word	0x00370042

08001da8 <.text_74>:
 8001da8:	004e005b 	.word	0x004e005b

08001dac <.text_75>:
 8001dac:	00690078 	.word	0x00690078

08001db0 <.text_76>:
 8001db0:	00010003 	.word	0x00010003

08001db4 <.text_77>:
 8001db4:	00030001 	.word	0x00030001

08001db8 <.text_78>:
 8001db8:	20000000 	.word	0x20000000

08001dbc <.text_79>:
 8001dbc:	00060007 	.word	0x00060007

08001dc0 <.text_80>:
 8001dc0:	00060003 	.word	0x00060003

08001dc4 <.text_81>:
 8001dc4:	00030006 	.word	0x00030006

08001dc8 <.text_82>:
 8001dc8:	000f000a 	.word	0x000f000a

08001dcc <.text_83>:
 8001dcc:	000a000f 	.word	0x000a000f

08001dd0 <.text_84>:
 8001dd0:	001c0015 	.word	0x001c0015

08001dd4 <.text_85>:
 8001dd4:	0015001c 	.word	0x0015001c

08001dd8 <.text_86>:
 8001dd8:	002d0024 	.word	0x002d0024

08001ddc <CRC_Lock>:
 8001ddc:	4b13      	ldr	r3, [pc, #76]	; (8001e2c <CRC_Lock+0x50>)
 8001dde:	f8d3 c000 	ldr.w	ip, [r3]
 8001de2:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 8001de6:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 8001dea:	f8c3 c000 	str.w	ip, [r3]
 8001dee:	2200      	movs	r2, #0
 8001df0:	4b0f      	ldr	r3, [pc, #60]	; (8001e30 <CRC_Lock+0x54>)
 8001df2:	681b      	ldr	r3, [r3, #0]
 8001df4:	2b00      	cmp	r3, #0
 8001df6:	bf01      	itttt	eq
 8001df8:	4b0e      	ldreq	r3, [pc, #56]	; (8001e34 <CRC_Lock+0x58>)
 8001dfa:	681b      	ldreq	r3, [r3, #0]
 8001dfc:	f3c3 030b 	ubfxeq	r3, r3, #0, #12
 8001e00:	f5b3 6f8a 	cmpeq.w	r3, #1104	; 0x450
 8001e04:	bf0c      	ite	eq
 8001e06:	4b0c      	ldreq	r3, [pc, #48]	; (8001e38 <CRC_Lock+0x5c>)
 8001e08:	4b0c      	ldrne	r3, [pc, #48]	; (8001e3c <CRC_Lock+0x60>)
 8001e0a:	f04f 0c01 	mov.w	ip, #1
 8001e0e:	f8c3 c008 	str.w	ip, [r3, #8]
 8001e12:	bf00      	nop
 8001e14:	f8d3 c008 	ldr.w	ip, [r3, #8]
 8001e18:	f1bc 0f00 	cmp.w	ip, #0
 8001e1c:	d1fa      	bne.n	8001e14 <CRC_Lock+0x38>
 8001e1e:	6018      	str	r0, [r3, #0]
 8001e20:	6818      	ldr	r0, [r3, #0]
 8001e22:	4288      	cmp	r0, r1
 8001e24:	bf08      	it	eq
 8001e26:	2201      	moveq	r2, #1
 8001e28:	4610      	mov	r0, r2
 8001e2a:	4770      	bx	lr
 8001e2c:	e0002000 	.word	0xe0002000
 8001e30:	e0042000 	.word	0xe0042000
 8001e34:	5c001000 	.word	0x5c001000
 8001e38:	58024c00 	.word	0x58024c00
 8001e3c:	40023000 	.word	0x40023000

08001e40 <__aeabi_drsub>:
 8001e40:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8001e44:	e002      	b.n	8001e4c <__adddf3>
 8001e46:	bf00      	nop

08001e48 <__aeabi_dsub>:
 8001e48:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08001e4c <__adddf3>:
 8001e4c:	b530      	push	{r4, r5, lr}
 8001e4e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8001e52:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8001e56:	ea94 0f05 	teq	r4, r5
 8001e5a:	bf08      	it	eq
 8001e5c:	ea90 0f02 	teqeq	r0, r2
 8001e60:	bf1f      	itttt	ne
 8001e62:	ea54 0c00 	orrsne.w	ip, r4, r0
 8001e66:	ea55 0c02 	orrsne.w	ip, r5, r2
 8001e6a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8001e6e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8001e72:	f000 80e2 	beq.w	800203a <__adddf3+0x1ee>
 8001e76:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8001e7a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8001e7e:	bfb8      	it	lt
 8001e80:	426d      	neglt	r5, r5
 8001e82:	dd0c      	ble.n	8001e9e <__adddf3+0x52>
 8001e84:	442c      	add	r4, r5
 8001e86:	ea80 0202 	eor.w	r2, r0, r2
 8001e8a:	ea81 0303 	eor.w	r3, r1, r3
 8001e8e:	ea82 0000 	eor.w	r0, r2, r0
 8001e92:	ea83 0101 	eor.w	r1, r3, r1
 8001e96:	ea80 0202 	eor.w	r2, r0, r2
 8001e9a:	ea81 0303 	eor.w	r3, r1, r3
 8001e9e:	2d36      	cmp	r5, #54	; 0x36
 8001ea0:	bf88      	it	hi
 8001ea2:	bd30      	pophi	{r4, r5, pc}
 8001ea4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8001ea8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8001eac:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8001eb0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8001eb4:	d002      	beq.n	8001ebc <__adddf3+0x70>
 8001eb6:	4240      	negs	r0, r0
 8001eb8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8001ebc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8001ec0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8001ec4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8001ec8:	d002      	beq.n	8001ed0 <__adddf3+0x84>
 8001eca:	4252      	negs	r2, r2
 8001ecc:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8001ed0:	ea94 0f05 	teq	r4, r5
 8001ed4:	f000 80a7 	beq.w	8002026 <__adddf3+0x1da>
 8001ed8:	f1a4 0401 	sub.w	r4, r4, #1
 8001edc:	f1d5 0e20 	rsbs	lr, r5, #32
 8001ee0:	db0d      	blt.n	8001efe <__adddf3+0xb2>
 8001ee2:	fa02 fc0e 	lsl.w	ip, r2, lr
 8001ee6:	fa22 f205 	lsr.w	r2, r2, r5
 8001eea:	1880      	adds	r0, r0, r2
 8001eec:	f141 0100 	adc.w	r1, r1, #0
 8001ef0:	fa03 f20e 	lsl.w	r2, r3, lr
 8001ef4:	1880      	adds	r0, r0, r2
 8001ef6:	fa43 f305 	asr.w	r3, r3, r5
 8001efa:	4159      	adcs	r1, r3
 8001efc:	e00e      	b.n	8001f1c <__adddf3+0xd0>
 8001efe:	f1a5 0520 	sub.w	r5, r5, #32
 8001f02:	f10e 0e20 	add.w	lr, lr, #32
 8001f06:	2a01      	cmp	r2, #1
 8001f08:	fa03 fc0e 	lsl.w	ip, r3, lr
 8001f0c:	bf28      	it	cs
 8001f0e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8001f12:	fa43 f305 	asr.w	r3, r3, r5
 8001f16:	18c0      	adds	r0, r0, r3
 8001f18:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8001f1c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8001f20:	d507      	bpl.n	8001f32 <__adddf3+0xe6>
 8001f22:	f04f 0e00 	mov.w	lr, #0
 8001f26:	f1dc 0c00 	rsbs	ip, ip, #0
 8001f2a:	eb7e 0000 	sbcs.w	r0, lr, r0
 8001f2e:	eb6e 0101 	sbc.w	r1, lr, r1
 8001f32:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8001f36:	d31b      	bcc.n	8001f70 <__adddf3+0x124>
 8001f38:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8001f3c:	d30c      	bcc.n	8001f58 <__adddf3+0x10c>
 8001f3e:	0849      	lsrs	r1, r1, #1
 8001f40:	ea5f 0030 	movs.w	r0, r0, rrx
 8001f44:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8001f48:	f104 0401 	add.w	r4, r4, #1
 8001f4c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8001f50:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8001f54:	f080 809a 	bcs.w	800208c <__adddf3+0x240>
 8001f58:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8001f5c:	bf08      	it	eq
 8001f5e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8001f62:	f150 0000 	adcs.w	r0, r0, #0
 8001f66:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8001f6a:	ea41 0105 	orr.w	r1, r1, r5
 8001f6e:	bd30      	pop	{r4, r5, pc}
 8001f70:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8001f74:	4140      	adcs	r0, r0
 8001f76:	eb41 0101 	adc.w	r1, r1, r1
 8001f7a:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8001f7e:	f1a4 0401 	sub.w	r4, r4, #1
 8001f82:	d1e9      	bne.n	8001f58 <__adddf3+0x10c>
 8001f84:	f091 0f00 	teq	r1, #0
 8001f88:	bf04      	itt	eq
 8001f8a:	4601      	moveq	r1, r0
 8001f8c:	2000      	moveq	r0, #0
 8001f8e:	fab1 f381 	clz	r3, r1
 8001f92:	bf08      	it	eq
 8001f94:	3320      	addeq	r3, #32
 8001f96:	f1a3 030b 	sub.w	r3, r3, #11
 8001f9a:	f1b3 0220 	subs.w	r2, r3, #32
 8001f9e:	da0c      	bge.n	8001fba <__adddf3+0x16e>
 8001fa0:	320c      	adds	r2, #12
 8001fa2:	dd08      	ble.n	8001fb6 <__adddf3+0x16a>
 8001fa4:	f102 0c14 	add.w	ip, r2, #20
 8001fa8:	f1c2 020c 	rsb	r2, r2, #12
 8001fac:	fa01 f00c 	lsl.w	r0, r1, ip
 8001fb0:	fa21 f102 	lsr.w	r1, r1, r2
 8001fb4:	e00c      	b.n	8001fd0 <__adddf3+0x184>
 8001fb6:	f102 0214 	add.w	r2, r2, #20
 8001fba:	bfd8      	it	le
 8001fbc:	f1c2 0c20 	rsble	ip, r2, #32
 8001fc0:	fa01 f102 	lsl.w	r1, r1, r2
 8001fc4:	fa20 fc0c 	lsr.w	ip, r0, ip
 8001fc8:	bfdc      	itt	le
 8001fca:	ea41 010c 	orrle.w	r1, r1, ip
 8001fce:	4090      	lslle	r0, r2
 8001fd0:	1ae4      	subs	r4, r4, r3
 8001fd2:	bfa2      	ittt	ge
 8001fd4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8001fd8:	4329      	orrge	r1, r5
 8001fda:	bd30      	popge	{r4, r5, pc}
 8001fdc:	ea6f 0404 	mvn.w	r4, r4
 8001fe0:	3c1f      	subs	r4, #31
 8001fe2:	da1c      	bge.n	800201e <__adddf3+0x1d2>
 8001fe4:	340c      	adds	r4, #12
 8001fe6:	dc0e      	bgt.n	8002006 <__adddf3+0x1ba>
 8001fe8:	f104 0414 	add.w	r4, r4, #20
 8001fec:	f1c4 0220 	rsb	r2, r4, #32
 8001ff0:	fa20 f004 	lsr.w	r0, r0, r4
 8001ff4:	fa01 f302 	lsl.w	r3, r1, r2
 8001ff8:	ea40 0003 	orr.w	r0, r0, r3
 8001ffc:	fa21 f304 	lsr.w	r3, r1, r4
 8002000:	ea45 0103 	orr.w	r1, r5, r3
 8002004:	bd30      	pop	{r4, r5, pc}
 8002006:	f1c4 040c 	rsb	r4, r4, #12
 800200a:	f1c4 0220 	rsb	r2, r4, #32
 800200e:	fa20 f002 	lsr.w	r0, r0, r2
 8002012:	fa01 f304 	lsl.w	r3, r1, r4
 8002016:	ea40 0003 	orr.w	r0, r0, r3
 800201a:	4629      	mov	r1, r5
 800201c:	bd30      	pop	{r4, r5, pc}
 800201e:	fa21 f004 	lsr.w	r0, r1, r4
 8002022:	4629      	mov	r1, r5
 8002024:	bd30      	pop	{r4, r5, pc}
 8002026:	f094 0f00 	teq	r4, #0
 800202a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800202e:	bf06      	itte	eq
 8002030:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8002034:	3401      	addeq	r4, #1
 8002036:	3d01      	subne	r5, #1
 8002038:	e74e      	b.n	8001ed8 <__adddf3+0x8c>
 800203a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800203e:	bf18      	it	ne
 8002040:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8002044:	d029      	beq.n	800209a <__adddf3+0x24e>
 8002046:	ea94 0f05 	teq	r4, r5
 800204a:	bf08      	it	eq
 800204c:	ea90 0f02 	teqeq	r0, r2
 8002050:	d005      	beq.n	800205e <__adddf3+0x212>
 8002052:	ea54 0c00 	orrs.w	ip, r4, r0
 8002056:	bf04      	itt	eq
 8002058:	4619      	moveq	r1, r3
 800205a:	4610      	moveq	r0, r2
 800205c:	bd30      	pop	{r4, r5, pc}
 800205e:	ea91 0f03 	teq	r1, r3
 8002062:	bf1e      	ittt	ne
 8002064:	2100      	movne	r1, #0
 8002066:	2000      	movne	r0, #0
 8002068:	bd30      	popne	{r4, r5, pc}
 800206a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800206e:	d105      	bne.n	800207c <__adddf3+0x230>
 8002070:	0040      	lsls	r0, r0, #1
 8002072:	4149      	adcs	r1, r1
 8002074:	bf28      	it	cs
 8002076:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800207a:	bd30      	pop	{r4, r5, pc}
 800207c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8002080:	bf3c      	itt	cc
 8002082:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8002086:	bd30      	popcc	{r4, r5, pc}
 8002088:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800208c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8002090:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8002094:	f04f 0000 	mov.w	r0, #0
 8002098:	bd30      	pop	{r4, r5, pc}
 800209a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800209e:	bf1a      	itte	ne
 80020a0:	4619      	movne	r1, r3
 80020a2:	4610      	movne	r0, r2
 80020a4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80020a8:	bf1c      	itt	ne
 80020aa:	460b      	movne	r3, r1
 80020ac:	4602      	movne	r2, r0
 80020ae:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80020b2:	bf06      	itte	eq
 80020b4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80020b8:	ea91 0f03 	teqeq	r1, r3
 80020bc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80020c0:	bd30      	pop	{r4, r5, pc}
 80020c2:	bf00      	nop

080020c4 <__aeabi_ui2d>:
 80020c4:	f090 0f00 	teq	r0, #0
 80020c8:	bf04      	itt	eq
 80020ca:	2100      	moveq	r1, #0
 80020cc:	4770      	bxeq	lr
 80020ce:	b530      	push	{r4, r5, lr}
 80020d0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80020d4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80020d8:	f04f 0500 	mov.w	r5, #0
 80020dc:	f04f 0100 	mov.w	r1, #0
 80020e0:	e750      	b.n	8001f84 <__adddf3+0x138>
 80020e2:	bf00      	nop

080020e4 <__aeabi_i2d>:
 80020e4:	f090 0f00 	teq	r0, #0
 80020e8:	bf04      	itt	eq
 80020ea:	2100      	moveq	r1, #0
 80020ec:	4770      	bxeq	lr
 80020ee:	b530      	push	{r4, r5, lr}
 80020f0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80020f4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80020f8:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80020fc:	bf48      	it	mi
 80020fe:	4240      	negmi	r0, r0
 8002100:	f04f 0100 	mov.w	r1, #0
 8002104:	e73e      	b.n	8001f84 <__adddf3+0x138>
 8002106:	bf00      	nop

08002108 <__aeabi_f2d>:
 8002108:	0042      	lsls	r2, r0, #1
 800210a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800210e:	ea4f 0131 	mov.w	r1, r1, rrx
 8002112:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8002116:	bf1f      	itttt	ne
 8002118:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800211c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8002120:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8002124:	4770      	bxne	lr
 8002126:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800212a:	bf08      	it	eq
 800212c:	4770      	bxeq	lr
 800212e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8002132:	bf04      	itt	eq
 8002134:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8002138:	4770      	bxeq	lr
 800213a:	b530      	push	{r4, r5, lr}
 800213c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8002140:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8002144:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8002148:	e71c      	b.n	8001f84 <__adddf3+0x138>
 800214a:	bf00      	nop

0800214c <__aeabi_ul2d>:
 800214c:	ea50 0201 	orrs.w	r2, r0, r1
 8002150:	bf08      	it	eq
 8002152:	4770      	bxeq	lr
 8002154:	b530      	push	{r4, r5, lr}
 8002156:	f04f 0500 	mov.w	r5, #0
 800215a:	e00a      	b.n	8002172 <__aeabi_l2d+0x16>

0800215c <__aeabi_l2d>:
 800215c:	ea50 0201 	orrs.w	r2, r0, r1
 8002160:	bf08      	it	eq
 8002162:	4770      	bxeq	lr
 8002164:	b530      	push	{r4, r5, lr}
 8002166:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800216a:	d502      	bpl.n	8002172 <__aeabi_l2d+0x16>
 800216c:	4240      	negs	r0, r0
 800216e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8002172:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8002176:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800217a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800217e:	f43f aed8 	beq.w	8001f32 <__adddf3+0xe6>
 8002182:	f04f 0203 	mov.w	r2, #3
 8002186:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800218a:	bf18      	it	ne
 800218c:	3203      	addne	r2, #3
 800218e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8002192:	bf18      	it	ne
 8002194:	3203      	addne	r2, #3
 8002196:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800219a:	f1c2 0320 	rsb	r3, r2, #32
 800219e:	fa00 fc03 	lsl.w	ip, r0, r3
 80021a2:	fa20 f002 	lsr.w	r0, r0, r2
 80021a6:	fa01 fe03 	lsl.w	lr, r1, r3
 80021aa:	ea40 000e 	orr.w	r0, r0, lr
 80021ae:	fa21 f102 	lsr.w	r1, r1, r2
 80021b2:	4414      	add	r4, r2
 80021b4:	e6bd      	b.n	8001f32 <__adddf3+0xe6>
 80021b6:	bf00      	nop

080021b8 <__aeabi_dmul>:
 80021b8:	b570      	push	{r4, r5, r6, lr}
 80021ba:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80021be:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80021c2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80021c6:	bf1d      	ittte	ne
 80021c8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80021cc:	ea94 0f0c 	teqne	r4, ip
 80021d0:	ea95 0f0c 	teqne	r5, ip
 80021d4:	f000 f8de 	bleq	8002394 <__aeabi_dmul+0x1dc>
 80021d8:	442c      	add	r4, r5
 80021da:	ea81 0603 	eor.w	r6, r1, r3
 80021de:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80021e2:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80021e6:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80021ea:	bf18      	it	ne
 80021ec:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80021f0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80021f4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80021f8:	d038      	beq.n	800226c <__aeabi_dmul+0xb4>
 80021fa:	fba0 ce02 	umull	ip, lr, r0, r2
 80021fe:	f04f 0500 	mov.w	r5, #0
 8002202:	fbe1 e502 	umlal	lr, r5, r1, r2
 8002206:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800220a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800220e:	f04f 0600 	mov.w	r6, #0
 8002212:	fbe1 5603 	umlal	r5, r6, r1, r3
 8002216:	f09c 0f00 	teq	ip, #0
 800221a:	bf18      	it	ne
 800221c:	f04e 0e01 	orrne.w	lr, lr, #1
 8002220:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8002224:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8002228:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800222c:	d204      	bcs.n	8002238 <__aeabi_dmul+0x80>
 800222e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8002232:	416d      	adcs	r5, r5
 8002234:	eb46 0606 	adc.w	r6, r6, r6
 8002238:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800223c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8002240:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8002244:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8002248:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800224c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8002250:	bf88      	it	hi
 8002252:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8002256:	d81e      	bhi.n	8002296 <__aeabi_dmul+0xde>
 8002258:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800225c:	bf08      	it	eq
 800225e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8002262:	f150 0000 	adcs.w	r0, r0, #0
 8002266:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800226a:	bd70      	pop	{r4, r5, r6, pc}
 800226c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8002270:	ea46 0101 	orr.w	r1, r6, r1
 8002274:	ea40 0002 	orr.w	r0, r0, r2
 8002278:	ea81 0103 	eor.w	r1, r1, r3
 800227c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8002280:	bfc2      	ittt	gt
 8002282:	ebd4 050c 	rsbsgt	r5, r4, ip
 8002286:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800228a:	bd70      	popgt	{r4, r5, r6, pc}
 800228c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8002290:	f04f 0e00 	mov.w	lr, #0
 8002294:	3c01      	subs	r4, #1
 8002296:	f300 80ab 	bgt.w	80023f0 <__aeabi_dmul+0x238>
 800229a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800229e:	bfde      	ittt	le
 80022a0:	2000      	movle	r0, #0
 80022a2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80022a6:	bd70      	pople	{r4, r5, r6, pc}
 80022a8:	f1c4 0400 	rsb	r4, r4, #0
 80022ac:	3c20      	subs	r4, #32
 80022ae:	da35      	bge.n	800231c <__aeabi_dmul+0x164>
 80022b0:	340c      	adds	r4, #12
 80022b2:	dc1b      	bgt.n	80022ec <__aeabi_dmul+0x134>
 80022b4:	f104 0414 	add.w	r4, r4, #20
 80022b8:	f1c4 0520 	rsb	r5, r4, #32
 80022bc:	fa00 f305 	lsl.w	r3, r0, r5
 80022c0:	fa20 f004 	lsr.w	r0, r0, r4
 80022c4:	fa01 f205 	lsl.w	r2, r1, r5
 80022c8:	ea40 0002 	orr.w	r0, r0, r2
 80022cc:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80022d0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80022d4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80022d8:	fa21 f604 	lsr.w	r6, r1, r4
 80022dc:	eb42 0106 	adc.w	r1, r2, r6
 80022e0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80022e4:	bf08      	it	eq
 80022e6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80022ea:	bd70      	pop	{r4, r5, r6, pc}
 80022ec:	f1c4 040c 	rsb	r4, r4, #12
 80022f0:	f1c4 0520 	rsb	r5, r4, #32
 80022f4:	fa00 f304 	lsl.w	r3, r0, r4
 80022f8:	fa20 f005 	lsr.w	r0, r0, r5
 80022fc:	fa01 f204 	lsl.w	r2, r1, r4
 8002300:	ea40 0002 	orr.w	r0, r0, r2
 8002304:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8002308:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800230c:	f141 0100 	adc.w	r1, r1, #0
 8002310:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8002314:	bf08      	it	eq
 8002316:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800231a:	bd70      	pop	{r4, r5, r6, pc}
 800231c:	f1c4 0520 	rsb	r5, r4, #32
 8002320:	fa00 f205 	lsl.w	r2, r0, r5
 8002324:	ea4e 0e02 	orr.w	lr, lr, r2
 8002328:	fa20 f304 	lsr.w	r3, r0, r4
 800232c:	fa01 f205 	lsl.w	r2, r1, r5
 8002330:	ea43 0302 	orr.w	r3, r3, r2
 8002334:	fa21 f004 	lsr.w	r0, r1, r4
 8002338:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800233c:	fa21 f204 	lsr.w	r2, r1, r4
 8002340:	ea20 0002 	bic.w	r0, r0, r2
 8002344:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8002348:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800234c:	bf08      	it	eq
 800234e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8002352:	bd70      	pop	{r4, r5, r6, pc}
 8002354:	f094 0f00 	teq	r4, #0
 8002358:	d10f      	bne.n	800237a <__aeabi_dmul+0x1c2>
 800235a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800235e:	0040      	lsls	r0, r0, #1
 8002360:	eb41 0101 	adc.w	r1, r1, r1
 8002364:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8002368:	bf08      	it	eq
 800236a:	3c01      	subeq	r4, #1
 800236c:	d0f7      	beq.n	800235e <__aeabi_dmul+0x1a6>
 800236e:	ea41 0106 	orr.w	r1, r1, r6
 8002372:	f095 0f00 	teq	r5, #0
 8002376:	bf18      	it	ne
 8002378:	4770      	bxne	lr
 800237a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800237e:	0052      	lsls	r2, r2, #1
 8002380:	eb43 0303 	adc.w	r3, r3, r3
 8002384:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8002388:	bf08      	it	eq
 800238a:	3d01      	subeq	r5, #1
 800238c:	d0f7      	beq.n	800237e <__aeabi_dmul+0x1c6>
 800238e:	ea43 0306 	orr.w	r3, r3, r6
 8002392:	4770      	bx	lr
 8002394:	ea94 0f0c 	teq	r4, ip
 8002398:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800239c:	bf18      	it	ne
 800239e:	ea95 0f0c 	teqne	r5, ip
 80023a2:	d00c      	beq.n	80023be <__aeabi_dmul+0x206>
 80023a4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80023a8:	bf18      	it	ne
 80023aa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80023ae:	d1d1      	bne.n	8002354 <__aeabi_dmul+0x19c>
 80023b0:	ea81 0103 	eor.w	r1, r1, r3
 80023b4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80023b8:	f04f 0000 	mov.w	r0, #0
 80023bc:	bd70      	pop	{r4, r5, r6, pc}
 80023be:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80023c2:	bf06      	itte	eq
 80023c4:	4610      	moveq	r0, r2
 80023c6:	4619      	moveq	r1, r3
 80023c8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80023cc:	d019      	beq.n	8002402 <__aeabi_dmul+0x24a>
 80023ce:	ea94 0f0c 	teq	r4, ip
 80023d2:	d102      	bne.n	80023da <__aeabi_dmul+0x222>
 80023d4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80023d8:	d113      	bne.n	8002402 <__aeabi_dmul+0x24a>
 80023da:	ea95 0f0c 	teq	r5, ip
 80023de:	d105      	bne.n	80023ec <__aeabi_dmul+0x234>
 80023e0:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80023e4:	bf1c      	itt	ne
 80023e6:	4610      	movne	r0, r2
 80023e8:	4619      	movne	r1, r3
 80023ea:	d10a      	bne.n	8002402 <__aeabi_dmul+0x24a>
 80023ec:	ea81 0103 	eor.w	r1, r1, r3
 80023f0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80023f4:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80023f8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80023fc:	f04f 0000 	mov.w	r0, #0
 8002400:	bd70      	pop	{r4, r5, r6, pc}
 8002402:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8002406:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800240a:	bd70      	pop	{r4, r5, r6, pc}

0800240c <__aeabi_ddiv>:
 800240c:	b570      	push	{r4, r5, r6, lr}
 800240e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8002412:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8002416:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800241a:	bf1d      	ittte	ne
 800241c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8002420:	ea94 0f0c 	teqne	r4, ip
 8002424:	ea95 0f0c 	teqne	r5, ip
 8002428:	f000 f8a7 	bleq	800257a <__aeabi_ddiv+0x16e>
 800242c:	eba4 0405 	sub.w	r4, r4, r5
 8002430:	ea81 0e03 	eor.w	lr, r1, r3
 8002434:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8002438:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800243c:	f000 8088 	beq.w	8002550 <__aeabi_ddiv+0x144>
 8002440:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8002444:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8002448:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800244c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8002450:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8002454:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8002458:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800245c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8002460:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8002464:	429d      	cmp	r5, r3
 8002466:	bf08      	it	eq
 8002468:	4296      	cmpeq	r6, r2
 800246a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800246e:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8002472:	d202      	bcs.n	800247a <__aeabi_ddiv+0x6e>
 8002474:	085b      	lsrs	r3, r3, #1
 8002476:	ea4f 0232 	mov.w	r2, r2, rrx
 800247a:	1ab6      	subs	r6, r6, r2
 800247c:	eb65 0503 	sbc.w	r5, r5, r3
 8002480:	085b      	lsrs	r3, r3, #1
 8002482:	ea4f 0232 	mov.w	r2, r2, rrx
 8002486:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800248a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800248e:	ebb6 0e02 	subs.w	lr, r6, r2
 8002492:	eb75 0e03 	sbcs.w	lr, r5, r3
 8002496:	bf22      	ittt	cs
 8002498:	1ab6      	subcs	r6, r6, r2
 800249a:	4675      	movcs	r5, lr
 800249c:	ea40 000c 	orrcs.w	r0, r0, ip
 80024a0:	085b      	lsrs	r3, r3, #1
 80024a2:	ea4f 0232 	mov.w	r2, r2, rrx
 80024a6:	ebb6 0e02 	subs.w	lr, r6, r2
 80024aa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80024ae:	bf22      	ittt	cs
 80024b0:	1ab6      	subcs	r6, r6, r2
 80024b2:	4675      	movcs	r5, lr
 80024b4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80024b8:	085b      	lsrs	r3, r3, #1
 80024ba:	ea4f 0232 	mov.w	r2, r2, rrx
 80024be:	ebb6 0e02 	subs.w	lr, r6, r2
 80024c2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80024c6:	bf22      	ittt	cs
 80024c8:	1ab6      	subcs	r6, r6, r2
 80024ca:	4675      	movcs	r5, lr
 80024cc:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80024d0:	085b      	lsrs	r3, r3, #1
 80024d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80024d6:	ebb6 0e02 	subs.w	lr, r6, r2
 80024da:	eb75 0e03 	sbcs.w	lr, r5, r3
 80024de:	bf22      	ittt	cs
 80024e0:	1ab6      	subcs	r6, r6, r2
 80024e2:	4675      	movcs	r5, lr
 80024e4:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80024e8:	ea55 0e06 	orrs.w	lr, r5, r6
 80024ec:	d018      	beq.n	8002520 <__aeabi_ddiv+0x114>
 80024ee:	ea4f 1505 	mov.w	r5, r5, lsl #4
 80024f2:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 80024f6:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80024fa:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80024fe:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8002502:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8002506:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800250a:	d1c0      	bne.n	800248e <__aeabi_ddiv+0x82>
 800250c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8002510:	d10b      	bne.n	800252a <__aeabi_ddiv+0x11e>
 8002512:	ea41 0100 	orr.w	r1, r1, r0
 8002516:	f04f 0000 	mov.w	r0, #0
 800251a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800251e:	e7b6      	b.n	800248e <__aeabi_ddiv+0x82>
 8002520:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8002524:	bf04      	itt	eq
 8002526:	4301      	orreq	r1, r0
 8002528:	2000      	moveq	r0, #0
 800252a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800252e:	bf88      	it	hi
 8002530:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8002534:	f63f aeaf 	bhi.w	8002296 <__aeabi_dmul+0xde>
 8002538:	ebb5 0c03 	subs.w	ip, r5, r3
 800253c:	bf04      	itt	eq
 800253e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8002542:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8002546:	f150 0000 	adcs.w	r0, r0, #0
 800254a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800254e:	bd70      	pop	{r4, r5, r6, pc}
 8002550:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8002554:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8002558:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800255c:	bfc2      	ittt	gt
 800255e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8002562:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8002566:	bd70      	popgt	{r4, r5, r6, pc}
 8002568:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800256c:	f04f 0e00 	mov.w	lr, #0
 8002570:	3c01      	subs	r4, #1
 8002572:	e690      	b.n	8002296 <__aeabi_dmul+0xde>
 8002574:	ea45 0e06 	orr.w	lr, r5, r6
 8002578:	e68d      	b.n	8002296 <__aeabi_dmul+0xde>
 800257a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800257e:	ea94 0f0c 	teq	r4, ip
 8002582:	bf08      	it	eq
 8002584:	ea95 0f0c 	teqeq	r5, ip
 8002588:	f43f af3b 	beq.w	8002402 <__aeabi_dmul+0x24a>
 800258c:	ea94 0f0c 	teq	r4, ip
 8002590:	d10a      	bne.n	80025a8 <__aeabi_ddiv+0x19c>
 8002592:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8002596:	f47f af34 	bne.w	8002402 <__aeabi_dmul+0x24a>
 800259a:	ea95 0f0c 	teq	r5, ip
 800259e:	f47f af25 	bne.w	80023ec <__aeabi_dmul+0x234>
 80025a2:	4610      	mov	r0, r2
 80025a4:	4619      	mov	r1, r3
 80025a6:	e72c      	b.n	8002402 <__aeabi_dmul+0x24a>
 80025a8:	ea95 0f0c 	teq	r5, ip
 80025ac:	d106      	bne.n	80025bc <__aeabi_ddiv+0x1b0>
 80025ae:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80025b2:	f43f aefd 	beq.w	80023b0 <__aeabi_dmul+0x1f8>
 80025b6:	4610      	mov	r0, r2
 80025b8:	4619      	mov	r1, r3
 80025ba:	e722      	b.n	8002402 <__aeabi_dmul+0x24a>
 80025bc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80025c0:	bf18      	it	ne
 80025c2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80025c6:	f47f aec5 	bne.w	8002354 <__aeabi_dmul+0x19c>
 80025ca:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80025ce:	f47f af0d 	bne.w	80023ec <__aeabi_dmul+0x234>
 80025d2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80025d6:	f47f aeeb 	bne.w	80023b0 <__aeabi_dmul+0x1f8>
 80025da:	e712      	b.n	8002402 <__aeabi_dmul+0x24a>

080025dc <__aeabi_d2iz>:
 80025dc:	ea4f 0241 	mov.w	r2, r1, lsl #1
 80025e0:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 80025e4:	d215      	bcs.n	8002612 <__aeabi_d2iz+0x36>
 80025e6:	d511      	bpl.n	800260c <__aeabi_d2iz+0x30>
 80025e8:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 80025ec:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 80025f0:	d912      	bls.n	8002618 <__aeabi_d2iz+0x3c>
 80025f2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 80025f6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80025fa:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 80025fe:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8002602:	fa23 f002 	lsr.w	r0, r3, r2
 8002606:	bf18      	it	ne
 8002608:	4240      	negne	r0, r0
 800260a:	4770      	bx	lr
 800260c:	f04f 0000 	mov.w	r0, #0
 8002610:	4770      	bx	lr
 8002612:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8002616:	d105      	bne.n	8002624 <__aeabi_d2iz+0x48>
 8002618:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 800261c:	bf08      	it	eq
 800261e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8002622:	4770      	bx	lr
 8002624:	f04f 0000 	mov.w	r0, #0
 8002628:	4770      	bx	lr
 800262a:	bf00      	nop

0800262c <__aeabi_d2f>:
 800262c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8002630:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8002634:	bf24      	itt	cs
 8002636:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 800263a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 800263e:	d90d      	bls.n	800265c <__aeabi_d2f+0x30>
 8002640:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8002644:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8002648:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 800264c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8002650:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8002654:	bf08      	it	eq
 8002656:	f020 0001 	biceq.w	r0, r0, #1
 800265a:	4770      	bx	lr
 800265c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8002660:	d121      	bne.n	80026a6 <__aeabi_d2f+0x7a>
 8002662:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8002666:	bfbc      	itt	lt
 8002668:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 800266c:	4770      	bxlt	lr
 800266e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8002672:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8002676:	f1c2 0218 	rsb	r2, r2, #24
 800267a:	f1c2 0c20 	rsb	ip, r2, #32
 800267e:	fa10 f30c 	lsls.w	r3, r0, ip
 8002682:	fa20 f002 	lsr.w	r0, r0, r2
 8002686:	bf18      	it	ne
 8002688:	f040 0001 	orrne.w	r0, r0, #1
 800268c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8002690:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8002694:	fa03 fc0c 	lsl.w	ip, r3, ip
 8002698:	ea40 000c 	orr.w	r0, r0, ip
 800269c:	fa23 f302 	lsr.w	r3, r3, r2
 80026a0:	ea4f 0343 	mov.w	r3, r3, lsl #1
 80026a4:	e7cc      	b.n	8002640 <__aeabi_d2f+0x14>
 80026a6:	ea7f 5362 	mvns.w	r3, r2, asr #21
 80026aa:	d107      	bne.n	80026bc <__aeabi_d2f+0x90>
 80026ac:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 80026b0:	bf1e      	ittt	ne
 80026b2:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 80026b6:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 80026ba:	4770      	bxne	lr
 80026bc:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 80026c0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80026c4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80026c8:	4770      	bx	lr
 80026ca:	bf00      	nop

080026cc <__aeabi_frsub>:
 80026cc:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 80026d0:	e002      	b.n	80026d8 <__addsf3>
 80026d2:	bf00      	nop

080026d4 <__aeabi_fsub>:
 80026d4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

080026d8 <__addsf3>:
 80026d8:	0042      	lsls	r2, r0, #1
 80026da:	bf1f      	itttt	ne
 80026dc:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 80026e0:	ea92 0f03 	teqne	r2, r3
 80026e4:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 80026e8:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 80026ec:	d06a      	beq.n	80027c4 <__addsf3+0xec>
 80026ee:	ea4f 6212 	mov.w	r2, r2, lsr #24
 80026f2:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 80026f6:	bfc1      	itttt	gt
 80026f8:	18d2      	addgt	r2, r2, r3
 80026fa:	4041      	eorgt	r1, r0
 80026fc:	4048      	eorgt	r0, r1
 80026fe:	4041      	eorgt	r1, r0
 8002700:	bfb8      	it	lt
 8002702:	425b      	neglt	r3, r3
 8002704:	2b19      	cmp	r3, #25
 8002706:	bf88      	it	hi
 8002708:	4770      	bxhi	lr
 800270a:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 800270e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8002712:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8002716:	bf18      	it	ne
 8002718:	4240      	negne	r0, r0
 800271a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800271e:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8002722:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8002726:	bf18      	it	ne
 8002728:	4249      	negne	r1, r1
 800272a:	ea92 0f03 	teq	r2, r3
 800272e:	d03f      	beq.n	80027b0 <__addsf3+0xd8>
 8002730:	f1a2 0201 	sub.w	r2, r2, #1
 8002734:	fa41 fc03 	asr.w	ip, r1, r3
 8002738:	eb10 000c 	adds.w	r0, r0, ip
 800273c:	f1c3 0320 	rsb	r3, r3, #32
 8002740:	fa01 f103 	lsl.w	r1, r1, r3
 8002744:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8002748:	d502      	bpl.n	8002750 <__addsf3+0x78>
 800274a:	4249      	negs	r1, r1
 800274c:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8002750:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8002754:	d313      	bcc.n	800277e <__addsf3+0xa6>
 8002756:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 800275a:	d306      	bcc.n	800276a <__addsf3+0x92>
 800275c:	0840      	lsrs	r0, r0, #1
 800275e:	ea4f 0131 	mov.w	r1, r1, rrx
 8002762:	f102 0201 	add.w	r2, r2, #1
 8002766:	2afe      	cmp	r2, #254	; 0xfe
 8002768:	d251      	bcs.n	800280e <__addsf3+0x136>
 800276a:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 800276e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8002772:	bf08      	it	eq
 8002774:	f020 0001 	biceq.w	r0, r0, #1
 8002778:	ea40 0003 	orr.w	r0, r0, r3
 800277c:	4770      	bx	lr
 800277e:	0049      	lsls	r1, r1, #1
 8002780:	eb40 0000 	adc.w	r0, r0, r0
 8002784:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
 8002788:	f1a2 0201 	sub.w	r2, r2, #1
 800278c:	d1ed      	bne.n	800276a <__addsf3+0x92>
 800278e:	fab0 fc80 	clz	ip, r0
 8002792:	f1ac 0c08 	sub.w	ip, ip, #8
 8002796:	ebb2 020c 	subs.w	r2, r2, ip
 800279a:	fa00 f00c 	lsl.w	r0, r0, ip
 800279e:	bfaa      	itet	ge
 80027a0:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 80027a4:	4252      	neglt	r2, r2
 80027a6:	4318      	orrge	r0, r3
 80027a8:	bfbc      	itt	lt
 80027aa:	40d0      	lsrlt	r0, r2
 80027ac:	4318      	orrlt	r0, r3
 80027ae:	4770      	bx	lr
 80027b0:	f092 0f00 	teq	r2, #0
 80027b4:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 80027b8:	bf06      	itte	eq
 80027ba:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 80027be:	3201      	addeq	r2, #1
 80027c0:	3b01      	subne	r3, #1
 80027c2:	e7b5      	b.n	8002730 <__addsf3+0x58>
 80027c4:	ea4f 0341 	mov.w	r3, r1, lsl #1
 80027c8:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 80027cc:	bf18      	it	ne
 80027ce:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 80027d2:	d021      	beq.n	8002818 <__addsf3+0x140>
 80027d4:	ea92 0f03 	teq	r2, r3
 80027d8:	d004      	beq.n	80027e4 <__addsf3+0x10c>
 80027da:	f092 0f00 	teq	r2, #0
 80027de:	bf08      	it	eq
 80027e0:	4608      	moveq	r0, r1
 80027e2:	4770      	bx	lr
 80027e4:	ea90 0f01 	teq	r0, r1
 80027e8:	bf1c      	itt	ne
 80027ea:	2000      	movne	r0, #0
 80027ec:	4770      	bxne	lr
 80027ee:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 80027f2:	d104      	bne.n	80027fe <__addsf3+0x126>
 80027f4:	0040      	lsls	r0, r0, #1
 80027f6:	bf28      	it	cs
 80027f8:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 80027fc:	4770      	bx	lr
 80027fe:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8002802:	bf3c      	itt	cc
 8002804:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8002808:	4770      	bxcc	lr
 800280a:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 800280e:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8002812:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8002816:	4770      	bx	lr
 8002818:	ea7f 6222 	mvns.w	r2, r2, asr #24
 800281c:	bf16      	itet	ne
 800281e:	4608      	movne	r0, r1
 8002820:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8002824:	4601      	movne	r1, r0
 8002826:	0242      	lsls	r2, r0, #9
 8002828:	bf06      	itte	eq
 800282a:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 800282e:	ea90 0f01 	teqeq	r0, r1
 8002832:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8002836:	4770      	bx	lr

08002838 <__aeabi_ui2f>:
 8002838:	f04f 0300 	mov.w	r3, #0
 800283c:	e004      	b.n	8002848 <__aeabi_i2f+0x8>
 800283e:	bf00      	nop

08002840 <__aeabi_i2f>:
 8002840:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8002844:	bf48      	it	mi
 8002846:	4240      	negmi	r0, r0
 8002848:	ea5f 0c00 	movs.w	ip, r0
 800284c:	bf08      	it	eq
 800284e:	4770      	bxeq	lr
 8002850:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8002854:	4601      	mov	r1, r0
 8002856:	f04f 0000 	mov.w	r0, #0
 800285a:	e01c      	b.n	8002896 <__aeabi_l2f+0x2a>

0800285c <__aeabi_ul2f>:
 800285c:	ea50 0201 	orrs.w	r2, r0, r1
 8002860:	bf08      	it	eq
 8002862:	4770      	bxeq	lr
 8002864:	f04f 0300 	mov.w	r3, #0
 8002868:	e00a      	b.n	8002880 <__aeabi_l2f+0x14>
 800286a:	bf00      	nop

0800286c <__aeabi_l2f>:
 800286c:	ea50 0201 	orrs.w	r2, r0, r1
 8002870:	bf08      	it	eq
 8002872:	4770      	bxeq	lr
 8002874:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8002878:	d502      	bpl.n	8002880 <__aeabi_l2f+0x14>
 800287a:	4240      	negs	r0, r0
 800287c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8002880:	ea5f 0c01 	movs.w	ip, r1
 8002884:	bf02      	ittt	eq
 8002886:	4684      	moveq	ip, r0
 8002888:	4601      	moveq	r1, r0
 800288a:	2000      	moveq	r0, #0
 800288c:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8002890:	bf08      	it	eq
 8002892:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8002896:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 800289a:	fabc f28c 	clz	r2, ip
 800289e:	3a08      	subs	r2, #8
 80028a0:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 80028a4:	db10      	blt.n	80028c8 <__aeabi_l2f+0x5c>
 80028a6:	fa01 fc02 	lsl.w	ip, r1, r2
 80028aa:	4463      	add	r3, ip
 80028ac:	fa00 fc02 	lsl.w	ip, r0, r2
 80028b0:	f1c2 0220 	rsb	r2, r2, #32
 80028b4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80028b8:	fa20 f202 	lsr.w	r2, r0, r2
 80028bc:	eb43 0002 	adc.w	r0, r3, r2
 80028c0:	bf08      	it	eq
 80028c2:	f020 0001 	biceq.w	r0, r0, #1
 80028c6:	4770      	bx	lr
 80028c8:	f102 0220 	add.w	r2, r2, #32
 80028cc:	fa01 fc02 	lsl.w	ip, r1, r2
 80028d0:	f1c2 0220 	rsb	r2, r2, #32
 80028d4:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 80028d8:	fa21 f202 	lsr.w	r2, r1, r2
 80028dc:	eb43 0002 	adc.w	r0, r3, r2
 80028e0:	bf08      	it	eq
 80028e2:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 80028e6:	4770      	bx	lr

080028e8 <__aeabi_fmul>:
 80028e8:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80028ec:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 80028f0:	bf1e      	ittt	ne
 80028f2:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 80028f6:	ea92 0f0c 	teqne	r2, ip
 80028fa:	ea93 0f0c 	teqne	r3, ip
 80028fe:	d06f      	beq.n	80029e0 <__aeabi_fmul+0xf8>
 8002900:	441a      	add	r2, r3
 8002902:	ea80 0c01 	eor.w	ip, r0, r1
 8002906:	0240      	lsls	r0, r0, #9
 8002908:	bf18      	it	ne
 800290a:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 800290e:	d01e      	beq.n	800294e <__aeabi_fmul+0x66>
 8002910:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8002914:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8002918:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 800291c:	fba0 3101 	umull	r3, r1, r0, r1
 8002920:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8002924:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8002928:	bf3e      	ittt	cc
 800292a:	0049      	lslcc	r1, r1, #1
 800292c:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8002930:	005b      	lslcc	r3, r3, #1
 8002932:	ea40 0001 	orr.w	r0, r0, r1
 8002936:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 800293a:	2afd      	cmp	r2, #253	; 0xfd
 800293c:	d81d      	bhi.n	800297a <__aeabi_fmul+0x92>
 800293e:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8002942:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8002946:	bf08      	it	eq
 8002948:	f020 0001 	biceq.w	r0, r0, #1
 800294c:	4770      	bx	lr
 800294e:	f090 0f00 	teq	r0, #0
 8002952:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8002956:	bf08      	it	eq
 8002958:	0249      	lsleq	r1, r1, #9
 800295a:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 800295e:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8002962:	3a7f      	subs	r2, #127	; 0x7f
 8002964:	bfc2      	ittt	gt
 8002966:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 800296a:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 800296e:	4770      	bxgt	lr
 8002970:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8002974:	f04f 0300 	mov.w	r3, #0
 8002978:	3a01      	subs	r2, #1
 800297a:	dc5d      	bgt.n	8002a38 <__aeabi_fmul+0x150>
 800297c:	f112 0f19 	cmn.w	r2, #25
 8002980:	bfdc      	itt	le
 8002982:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8002986:	4770      	bxle	lr
 8002988:	f1c2 0200 	rsb	r2, r2, #0
 800298c:	0041      	lsls	r1, r0, #1
 800298e:	fa21 f102 	lsr.w	r1, r1, r2
 8002992:	f1c2 0220 	rsb	r2, r2, #32
 8002996:	fa00 fc02 	lsl.w	ip, r0, r2
 800299a:	ea5f 0031 	movs.w	r0, r1, rrx
 800299e:	f140 0000 	adc.w	r0, r0, #0
 80029a2:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 80029a6:	bf08      	it	eq
 80029a8:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 80029ac:	4770      	bx	lr
 80029ae:	f092 0f00 	teq	r2, #0
 80029b2:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 80029b6:	bf02      	ittt	eq
 80029b8:	0040      	lsleq	r0, r0, #1
 80029ba:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 80029be:	3a01      	subeq	r2, #1
 80029c0:	d0f9      	beq.n	80029b6 <__aeabi_fmul+0xce>
 80029c2:	ea40 000c 	orr.w	r0, r0, ip
 80029c6:	f093 0f00 	teq	r3, #0
 80029ca:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 80029ce:	bf02      	ittt	eq
 80029d0:	0049      	lsleq	r1, r1, #1
 80029d2:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 80029d6:	3b01      	subeq	r3, #1
 80029d8:	d0f9      	beq.n	80029ce <__aeabi_fmul+0xe6>
 80029da:	ea41 010c 	orr.w	r1, r1, ip
 80029de:	e78f      	b.n	8002900 <__aeabi_fmul+0x18>
 80029e0:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 80029e4:	ea92 0f0c 	teq	r2, ip
 80029e8:	bf18      	it	ne
 80029ea:	ea93 0f0c 	teqne	r3, ip
 80029ee:	d00a      	beq.n	8002a06 <__aeabi_fmul+0x11e>
 80029f0:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 80029f4:	bf18      	it	ne
 80029f6:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 80029fa:	d1d8      	bne.n	80029ae <__aeabi_fmul+0xc6>
 80029fc:	ea80 0001 	eor.w	r0, r0, r1
 8002a00:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8002a04:	4770      	bx	lr
 8002a06:	f090 0f00 	teq	r0, #0
 8002a0a:	bf17      	itett	ne
 8002a0c:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8002a10:	4608      	moveq	r0, r1
 8002a12:	f091 0f00 	teqne	r1, #0
 8002a16:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8002a1a:	d014      	beq.n	8002a46 <__aeabi_fmul+0x15e>
 8002a1c:	ea92 0f0c 	teq	r2, ip
 8002a20:	d101      	bne.n	8002a26 <__aeabi_fmul+0x13e>
 8002a22:	0242      	lsls	r2, r0, #9
 8002a24:	d10f      	bne.n	8002a46 <__aeabi_fmul+0x15e>
 8002a26:	ea93 0f0c 	teq	r3, ip
 8002a2a:	d103      	bne.n	8002a34 <__aeabi_fmul+0x14c>
 8002a2c:	024b      	lsls	r3, r1, #9
 8002a2e:	bf18      	it	ne
 8002a30:	4608      	movne	r0, r1
 8002a32:	d108      	bne.n	8002a46 <__aeabi_fmul+0x15e>
 8002a34:	ea80 0001 	eor.w	r0, r0, r1
 8002a38:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8002a3c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8002a40:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8002a44:	4770      	bx	lr
 8002a46:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8002a4a:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8002a4e:	4770      	bx	lr

08002a50 <__aeabi_fdiv>:
 8002a50:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8002a54:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8002a58:	bf1e      	ittt	ne
 8002a5a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8002a5e:	ea92 0f0c 	teqne	r2, ip
 8002a62:	ea93 0f0c 	teqne	r3, ip
 8002a66:	d069      	beq.n	8002b3c <__aeabi_fdiv+0xec>
 8002a68:	eba2 0203 	sub.w	r2, r2, r3
 8002a6c:	ea80 0c01 	eor.w	ip, r0, r1
 8002a70:	0249      	lsls	r1, r1, #9
 8002a72:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8002a76:	d037      	beq.n	8002ae8 <__aeabi_fdiv+0x98>
 8002a78:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8002a7c:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8002a80:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8002a84:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8002a88:	428b      	cmp	r3, r1
 8002a8a:	bf38      	it	cc
 8002a8c:	005b      	lslcc	r3, r3, #1
 8002a8e:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8002a92:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8002a96:	428b      	cmp	r3, r1
 8002a98:	bf24      	itt	cs
 8002a9a:	1a5b      	subcs	r3, r3, r1
 8002a9c:	ea40 000c 	orrcs.w	r0, r0, ip
 8002aa0:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8002aa4:	bf24      	itt	cs
 8002aa6:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8002aaa:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8002aae:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8002ab2:	bf24      	itt	cs
 8002ab4:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8002ab8:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8002abc:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8002ac0:	bf24      	itt	cs
 8002ac2:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8002ac6:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8002aca:	011b      	lsls	r3, r3, #4
 8002acc:	bf18      	it	ne
 8002ace:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8002ad2:	d1e0      	bne.n	8002a96 <__aeabi_fdiv+0x46>
 8002ad4:	2afd      	cmp	r2, #253	; 0xfd
 8002ad6:	f63f af50 	bhi.w	800297a <__aeabi_fmul+0x92>
 8002ada:	428b      	cmp	r3, r1
 8002adc:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8002ae0:	bf08      	it	eq
 8002ae2:	f020 0001 	biceq.w	r0, r0, #1
 8002ae6:	4770      	bx	lr
 8002ae8:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8002aec:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8002af0:	327f      	adds	r2, #127	; 0x7f
 8002af2:	bfc2      	ittt	gt
 8002af4:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8002af8:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8002afc:	4770      	bxgt	lr
 8002afe:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8002b02:	f04f 0300 	mov.w	r3, #0
 8002b06:	3a01      	subs	r2, #1
 8002b08:	e737      	b.n	800297a <__aeabi_fmul+0x92>
 8002b0a:	f092 0f00 	teq	r2, #0
 8002b0e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8002b12:	bf02      	ittt	eq
 8002b14:	0040      	lsleq	r0, r0, #1
 8002b16:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8002b1a:	3a01      	subeq	r2, #1
 8002b1c:	d0f9      	beq.n	8002b12 <__aeabi_fdiv+0xc2>
 8002b1e:	ea40 000c 	orr.w	r0, r0, ip
 8002b22:	f093 0f00 	teq	r3, #0
 8002b26:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8002b2a:	bf02      	ittt	eq
 8002b2c:	0049      	lsleq	r1, r1, #1
 8002b2e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8002b32:	3b01      	subeq	r3, #1
 8002b34:	d0f9      	beq.n	8002b2a <__aeabi_fdiv+0xda>
 8002b36:	ea41 010c 	orr.w	r1, r1, ip
 8002b3a:	e795      	b.n	8002a68 <__aeabi_fdiv+0x18>
 8002b3c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8002b40:	ea92 0f0c 	teq	r2, ip
 8002b44:	d108      	bne.n	8002b58 <__aeabi_fdiv+0x108>
 8002b46:	0242      	lsls	r2, r0, #9
 8002b48:	f47f af7d 	bne.w	8002a46 <__aeabi_fmul+0x15e>
 8002b4c:	ea93 0f0c 	teq	r3, ip
 8002b50:	f47f af70 	bne.w	8002a34 <__aeabi_fmul+0x14c>
 8002b54:	4608      	mov	r0, r1
 8002b56:	e776      	b.n	8002a46 <__aeabi_fmul+0x15e>
 8002b58:	ea93 0f0c 	teq	r3, ip
 8002b5c:	d104      	bne.n	8002b68 <__aeabi_fdiv+0x118>
 8002b5e:	024b      	lsls	r3, r1, #9
 8002b60:	f43f af4c 	beq.w	80029fc <__aeabi_fmul+0x114>
 8002b64:	4608      	mov	r0, r1
 8002b66:	e76e      	b.n	8002a46 <__aeabi_fmul+0x15e>
 8002b68:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8002b6c:	bf18      	it	ne
 8002b6e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8002b72:	d1ca      	bne.n	8002b0a <__aeabi_fdiv+0xba>
 8002b74:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8002b78:	f47f af5c 	bne.w	8002a34 <__aeabi_fmul+0x14c>
 8002b7c:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 8002b80:	f47f af3c 	bne.w	80029fc <__aeabi_fmul+0x114>
 8002b84:	e75f      	b.n	8002a46 <__aeabi_fmul+0x15e>
 8002b86:	bf00      	nop

08002b88 <__gesf2>:
 8002b88:	f04f 3cff 	mov.w	ip, #4294967295
 8002b8c:	e006      	b.n	8002b9c <__cmpsf2+0x4>
 8002b8e:	bf00      	nop

08002b90 <__lesf2>:
 8002b90:	f04f 0c01 	mov.w	ip, #1
 8002b94:	e002      	b.n	8002b9c <__cmpsf2+0x4>
 8002b96:	bf00      	nop

08002b98 <__cmpsf2>:
 8002b98:	f04f 0c01 	mov.w	ip, #1
 8002b9c:	f84d cd04 	str.w	ip, [sp, #-4]!
 8002ba0:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8002ba4:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8002ba8:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8002bac:	bf18      	it	ne
 8002bae:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8002bb2:	d011      	beq.n	8002bd8 <__cmpsf2+0x40>
 8002bb4:	b001      	add	sp, #4
 8002bb6:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8002bba:	bf18      	it	ne
 8002bbc:	ea90 0f01 	teqne	r0, r1
 8002bc0:	bf58      	it	pl
 8002bc2:	ebb2 0003 	subspl.w	r0, r2, r3
 8002bc6:	bf88      	it	hi
 8002bc8:	17c8      	asrhi	r0, r1, #31
 8002bca:	bf38      	it	cc
 8002bcc:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8002bd0:	bf18      	it	ne
 8002bd2:	f040 0001 	orrne.w	r0, r0, #1
 8002bd6:	4770      	bx	lr
 8002bd8:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8002bdc:	d102      	bne.n	8002be4 <__cmpsf2+0x4c>
 8002bde:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8002be2:	d105      	bne.n	8002bf0 <__cmpsf2+0x58>
 8002be4:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8002be8:	d1e4      	bne.n	8002bb4 <__cmpsf2+0x1c>
 8002bea:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8002bee:	d0e1      	beq.n	8002bb4 <__cmpsf2+0x1c>
 8002bf0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8002bf4:	4770      	bx	lr
 8002bf6:	bf00      	nop

08002bf8 <__aeabi_cfrcmple>:
 8002bf8:	4684      	mov	ip, r0
 8002bfa:	4608      	mov	r0, r1
 8002bfc:	4661      	mov	r1, ip
 8002bfe:	e7ff      	b.n	8002c00 <__aeabi_cfcmpeq>

08002c00 <__aeabi_cfcmpeq>:
 8002c00:	b50f      	push	{r0, r1, r2, r3, lr}
 8002c02:	f7ff ffc9 	bl	8002b98 <__cmpsf2>
 8002c06:	2800      	cmp	r0, #0
 8002c08:	bf48      	it	mi
 8002c0a:	f110 0f00 	cmnmi.w	r0, #0
 8002c0e:	bd0f      	pop	{r0, r1, r2, r3, pc}

08002c10 <__aeabi_fcmpeq>:
 8002c10:	f84d ed08 	str.w	lr, [sp, #-8]!
 8002c14:	f7ff fff4 	bl	8002c00 <__aeabi_cfcmpeq>
 8002c18:	bf0c      	ite	eq
 8002c1a:	2001      	moveq	r0, #1
 8002c1c:	2000      	movne	r0, #0
 8002c1e:	f85d fb08 	ldr.w	pc, [sp], #8
 8002c22:	bf00      	nop

08002c24 <__aeabi_fcmplt>:
 8002c24:	f84d ed08 	str.w	lr, [sp, #-8]!
 8002c28:	f7ff ffea 	bl	8002c00 <__aeabi_cfcmpeq>
 8002c2c:	bf34      	ite	cc
 8002c2e:	2001      	movcc	r0, #1
 8002c30:	2000      	movcs	r0, #0
 8002c32:	f85d fb08 	ldr.w	pc, [sp], #8
 8002c36:	bf00      	nop

08002c38 <__aeabi_fcmple>:
 8002c38:	f84d ed08 	str.w	lr, [sp, #-8]!
 8002c3c:	f7ff ffe0 	bl	8002c00 <__aeabi_cfcmpeq>
 8002c40:	bf94      	ite	ls
 8002c42:	2001      	movls	r0, #1
 8002c44:	2000      	movhi	r0, #0
 8002c46:	f85d fb08 	ldr.w	pc, [sp], #8
 8002c4a:	bf00      	nop

08002c4c <__aeabi_fcmpge>:
 8002c4c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8002c50:	f7ff ffd2 	bl	8002bf8 <__aeabi_cfrcmple>
 8002c54:	bf94      	ite	ls
 8002c56:	2001      	movls	r0, #1
 8002c58:	2000      	movhi	r0, #0
 8002c5a:	f85d fb08 	ldr.w	pc, [sp], #8
 8002c5e:	bf00      	nop

08002c60 <__aeabi_fcmpgt>:
 8002c60:	f84d ed08 	str.w	lr, [sp, #-8]!
 8002c64:	f7ff ffc8 	bl	8002bf8 <__aeabi_cfrcmple>
 8002c68:	bf34      	ite	cc
 8002c6a:	2001      	movcc	r0, #1
 8002c6c:	2000      	movcs	r0, #0
 8002c6e:	f85d fb08 	ldr.w	pc, [sp], #8
 8002c72:	bf00      	nop

08002c74 <__aeabi_fcmpun>:
 8002c74:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8002c78:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8002c7c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8002c80:	d102      	bne.n	8002c88 <__aeabi_fcmpun+0x14>
 8002c82:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8002c86:	d108      	bne.n	8002c9a <__aeabi_fcmpun+0x26>
 8002c88:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8002c8c:	d102      	bne.n	8002c94 <__aeabi_fcmpun+0x20>
 8002c8e:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8002c92:	d102      	bne.n	8002c9a <__aeabi_fcmpun+0x26>
 8002c94:	f04f 0000 	mov.w	r0, #0
 8002c98:	4770      	bx	lr
 8002c9a:	f04f 0001 	mov.w	r0, #1
 8002c9e:	4770      	bx	lr

08002ca0 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8002ca0:	b480      	push	{r7}
 8002ca2:	b083      	sub	sp, #12
 8002ca4:	af00      	add	r7, sp, #0
 8002ca6:	4603      	mov	r3, r0
 8002ca8:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8002caa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002cae:	2b00      	cmp	r3, #0
 8002cb0:	db0b      	blt.n	8002cca <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002cb2:	79fb      	ldrb	r3, [r7, #7]
 8002cb4:	f003 021f 	and.w	r2, r3, #31
 8002cb8:	4906      	ldr	r1, [pc, #24]	; (8002cd4 <__NVIC_EnableIRQ+0x34>)
 8002cba:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002cbe:	095b      	lsrs	r3, r3, #5
 8002cc0:	2001      	movs	r0, #1
 8002cc2:	fa00 f202 	lsl.w	r2, r0, r2
 8002cc6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 8002cca:	bf00      	nop
 8002ccc:	370c      	adds	r7, #12
 8002cce:	46bd      	mov	sp, r7
 8002cd0:	bc80      	pop	{r7}
 8002cd2:	4770      	bx	lr
 8002cd4:	e000e100 	.word	0xe000e100

08002cd8 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8002cd8:	b480      	push	{r7}
 8002cda:	b083      	sub	sp, #12
 8002cdc:	af00      	add	r7, sp, #0
 8002cde:	4603      	mov	r3, r0
 8002ce0:	6039      	str	r1, [r7, #0]
 8002ce2:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8002ce4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002ce8:	2b00      	cmp	r3, #0
 8002cea:	db0a      	blt.n	8002d02 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002cec:	683b      	ldr	r3, [r7, #0]
 8002cee:	b2da      	uxtb	r2, r3
 8002cf0:	490c      	ldr	r1, [pc, #48]	; (8002d24 <__NVIC_SetPriority+0x4c>)
 8002cf2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002cf6:	0112      	lsls	r2, r2, #4
 8002cf8:	b2d2      	uxtb	r2, r2
 8002cfa:	440b      	add	r3, r1
 8002cfc:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8002d00:	e00a      	b.n	8002d18 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002d02:	683b      	ldr	r3, [r7, #0]
 8002d04:	b2da      	uxtb	r2, r3
 8002d06:	4908      	ldr	r1, [pc, #32]	; (8002d28 <__NVIC_SetPriority+0x50>)
 8002d08:	79fb      	ldrb	r3, [r7, #7]
 8002d0a:	f003 030f 	and.w	r3, r3, #15
 8002d0e:	3b04      	subs	r3, #4
 8002d10:	0112      	lsls	r2, r2, #4
 8002d12:	b2d2      	uxtb	r2, r2
 8002d14:	440b      	add	r3, r1
 8002d16:	761a      	strb	r2, [r3, #24]
}
 8002d18:	bf00      	nop
 8002d1a:	370c      	adds	r7, #12
 8002d1c:	46bd      	mov	sp, r7
 8002d1e:	bc80      	pop	{r7}
 8002d20:	4770      	bx	lr
 8002d22:	bf00      	nop
 8002d24:	e000e100 	.word	0xe000e100
 8002d28:	e000ed00 	.word	0xe000ed00

08002d2c <__i2c_start>:
//void pdm_pcm(uint16_t *pdm_buffer);


///////////////////////////////////////////////////////////////////////////////////

static inline void __i2c_start() {
 8002d2c:	b480      	push	{r7}
 8002d2e:	af00      	add	r7, sp, #0
    I2C1->CR1 |= I2C_CR1_START;
 8002d30:	4b08      	ldr	r3, [pc, #32]	; (8002d54 <__i2c_start+0x28>)
 8002d32:	681b      	ldr	r3, [r3, #0]
 8002d34:	4a07      	ldr	r2, [pc, #28]	; (8002d54 <__i2c_start+0x28>)
 8002d36:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002d3a:	6013      	str	r3, [r2, #0]
    while(!(I2C1->SR1 & I2C_SR1_SB));
 8002d3c:	bf00      	nop
 8002d3e:	4b05      	ldr	r3, [pc, #20]	; (8002d54 <__i2c_start+0x28>)
 8002d40:	695b      	ldr	r3, [r3, #20]
 8002d42:	f003 0301 	and.w	r3, r3, #1
 8002d46:	2b00      	cmp	r3, #0
 8002d48:	d0f9      	beq.n	8002d3e <__i2c_start+0x12>
}
 8002d4a:	bf00      	nop
 8002d4c:	46bd      	mov	sp, r7
 8002d4e:	bc80      	pop	{r7}
 8002d50:	4770      	bx	lr
 8002d52:	bf00      	nop
 8002d54:	40005400 	.word	0x40005400

08002d58 <__i2c_stop>:

///////////////////////////////////////////////////////////////////////////////////

static inline void __i2c_stop() {
 8002d58:	b480      	push	{r7}
 8002d5a:	af00      	add	r7, sp, #0
    I2C1->CR1 |= I2C_CR1_STOP;
 8002d5c:	4b08      	ldr	r3, [pc, #32]	; (8002d80 <__i2c_stop+0x28>)
 8002d5e:	681b      	ldr	r3, [r3, #0]
 8002d60:	4a07      	ldr	r2, [pc, #28]	; (8002d80 <__i2c_stop+0x28>)
 8002d62:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002d66:	6013      	str	r3, [r2, #0]
    while(!(I2C1->SR2 & I2C_SR2_BUSY));
 8002d68:	bf00      	nop
 8002d6a:	4b05      	ldr	r3, [pc, #20]	; (8002d80 <__i2c_stop+0x28>)
 8002d6c:	699b      	ldr	r3, [r3, #24]
 8002d6e:	f003 0302 	and.w	r3, r3, #2
 8002d72:	2b00      	cmp	r3, #0
 8002d74:	d0f9      	beq.n	8002d6a <__i2c_stop+0x12>
}
 8002d76:	bf00      	nop
 8002d78:	46bd      	mov	sp, r7
 8002d7a:	bc80      	pop	{r7}
 8002d7c:	4770      	bx	lr
 8002d7e:	bf00      	nop
 8002d80:	40005400 	.word	0x40005400

08002d84 <spi_write>:

///////////////////////////////////////////////////////////////////////////////////

void spi_write(uint8_t reg, uint8_t data)
{
 8002d84:	b480      	push	{r7}
 8002d86:	b085      	sub	sp, #20
 8002d88:	af00      	add	r7, sp, #0
 8002d8a:	4603      	mov	r3, r0
 8002d8c:	460a      	mov	r2, r1
 8002d8e:	71fb      	strb	r3, [r7, #7]
 8002d90:	4613      	mov	r3, r2
 8002d92:	71bb      	strb	r3, [r7, #6]
    GPIOE->ODR &= ~(1U << 3); // enable
 8002d94:	4b17      	ldr	r3, [pc, #92]	; (8002df4 <spi_write+0x70>)
 8002d96:	695b      	ldr	r3, [r3, #20]
 8002d98:	4a16      	ldr	r2, [pc, #88]	; (8002df4 <spi_write+0x70>)
 8002d9a:	f023 0308 	bic.w	r3, r3, #8
 8002d9e:	6153      	str	r3, [r2, #20]
    // bit 15 is 0 for write for lis302dl
    uint32_t frame = 0;
 8002da0:	2300      	movs	r3, #0
 8002da2:	60fb      	str	r3, [r7, #12]
    frame = data;
 8002da4:	79bb      	ldrb	r3, [r7, #6]
 8002da6:	60fb      	str	r3, [r7, #12]
    frame |= (uint16_t)(reg << 8);
 8002da8:	79fb      	ldrb	r3, [r7, #7]
 8002daa:	b29b      	uxth	r3, r3
 8002dac:	021b      	lsls	r3, r3, #8
 8002dae:	b29b      	uxth	r3, r3
 8002db0:	461a      	mov	r2, r3
 8002db2:	68fb      	ldr	r3, [r7, #12]
 8002db4:	4313      	orrs	r3, r2
 8002db6:	60fb      	str	r3, [r7, #12]
    // Send data
    SPI1->DR = frame;
 8002db8:	4a0f      	ldr	r2, [pc, #60]	; (8002df8 <spi_write+0x74>)
 8002dba:	68fb      	ldr	r3, [r7, #12]
 8002dbc:	60d3      	str	r3, [r2, #12]
    // wait until transmit is done (TXE flag)
    while (!(SPI1->SR & (1 << 1)));
 8002dbe:	bf00      	nop
 8002dc0:	4b0d      	ldr	r3, [pc, #52]	; (8002df8 <spi_write+0x74>)
 8002dc2:	689b      	ldr	r3, [r3, #8]
 8002dc4:	f003 0302 	and.w	r3, r3, #2
 8002dc8:	2b00      	cmp	r3, #0
 8002dca:	d0f9      	beq.n	8002dc0 <spi_write+0x3c>
    // wait until rx buf is not empty (RXNE flag)
    while (!(SPI1->SR & (1 << 0)));
 8002dcc:	bf00      	nop
 8002dce:	4b0a      	ldr	r3, [pc, #40]	; (8002df8 <spi_write+0x74>)
 8002dd0:	689b      	ldr	r3, [r3, #8]
 8002dd2:	f003 0301 	and.w	r3, r3, #1
 8002dd6:	2b00      	cmp	r3, #0
 8002dd8:	d0f9      	beq.n	8002dce <spi_write+0x4a>

    GPIOE->ODR |= (1 << 3); // disable
 8002dda:	4b06      	ldr	r3, [pc, #24]	; (8002df4 <spi_write+0x70>)
 8002ddc:	695b      	ldr	r3, [r3, #20]
 8002dde:	4a05      	ldr	r2, [pc, #20]	; (8002df4 <spi_write+0x70>)
 8002de0:	f043 0308 	orr.w	r3, r3, #8
 8002de4:	6153      	str	r3, [r2, #20]
    (void)SPI1->DR; 		// dummy read
 8002de6:	4b04      	ldr	r3, [pc, #16]	; (8002df8 <spi_write+0x74>)
 8002de8:	68db      	ldr	r3, [r3, #12]
}
 8002dea:	bf00      	nop
 8002dec:	3714      	adds	r7, #20
 8002dee:	46bd      	mov	sp, r7
 8002df0:	bc80      	pop	{r7}
 8002df2:	4770      	bx	lr
 8002df4:	40021000 	.word	0x40021000
 8002df8:	40013000 	.word	0x40013000

08002dfc <spi_read>:

///////////////////////////////////////////////////////////////////////////////////

uint8_t spi_read(uint8_t reg)
{
 8002dfc:	b480      	push	{r7}
 8002dfe:	b085      	sub	sp, #20
 8002e00:	af00      	add	r7, sp, #0
 8002e02:	4603      	mov	r3, r0
 8002e04:	71fb      	strb	r3, [r7, #7]
    GPIOE->ODR &= ~(1U << 3); // enable
 8002e06:	4b1a      	ldr	r3, [pc, #104]	; (8002e70 <spi_read+0x74>)
 8002e08:	695b      	ldr	r3, [r3, #20]
 8002e0a:	4a19      	ldr	r2, [pc, #100]	; (8002e70 <spi_read+0x74>)
 8002e0c:	f023 0308 	bic.w	r3, r3, #8
 8002e10:	6153      	str	r3, [r2, #20]
    // bit 15 is 1 for read for lis302dl
    uint16_t frame = 0;
 8002e12:	2300      	movs	r3, #0
 8002e14:	81fb      	strh	r3, [r7, #14]
    frame |= (uint16_t)(reg << 8);
 8002e16:	79fb      	ldrb	r3, [r7, #7]
 8002e18:	b29b      	uxth	r3, r3
 8002e1a:	021b      	lsls	r3, r3, #8
 8002e1c:	b29a      	uxth	r2, r3
 8002e1e:	89fb      	ldrh	r3, [r7, #14]
 8002e20:	4313      	orrs	r3, r2
 8002e22:	81fb      	strh	r3, [r7, #14]
    frame |= (1 << 15); 	// read bit
 8002e24:	89fb      	ldrh	r3, [r7, #14]
 8002e26:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8002e2a:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8002e2e:	81fb      	strh	r3, [r7, #14]
    // Send data
    SPI1->DR = frame;
 8002e30:	4a10      	ldr	r2, [pc, #64]	; (8002e74 <spi_read+0x78>)
 8002e32:	89fb      	ldrh	r3, [r7, #14]
 8002e34:	60d3      	str	r3, [r2, #12]
    // wait until tx buf is empty (TXE flag)
    while (!(SPI1->SR & (1 << 1)));
 8002e36:	bf00      	nop
 8002e38:	4b0e      	ldr	r3, [pc, #56]	; (8002e74 <spi_read+0x78>)
 8002e3a:	689b      	ldr	r3, [r3, #8]
 8002e3c:	f003 0302 	and.w	r3, r3, #2
 8002e40:	2b00      	cmp	r3, #0
 8002e42:	d0f9      	beq.n	8002e38 <spi_read+0x3c>
    // wait until rx buf is not empty (RXNE flag)
    while (!(SPI1->SR & (1 << 0)));
 8002e44:	bf00      	nop
 8002e46:	4b0b      	ldr	r3, [pc, #44]	; (8002e74 <spi_read+0x78>)
 8002e48:	689b      	ldr	r3, [r3, #8]
 8002e4a:	f003 0301 	and.w	r3, r3, #1
 8002e4e:	2b00      	cmp	r3, #0
 8002e50:	d0f9      	beq.n	8002e46 <spi_read+0x4a>

    uint8_t b = (uint8_t)SPI1->DR;
 8002e52:	4b08      	ldr	r3, [pc, #32]	; (8002e74 <spi_read+0x78>)
 8002e54:	68db      	ldr	r3, [r3, #12]
 8002e56:	737b      	strb	r3, [r7, #13]
    GPIOE->ODR |= (1 << 3); // disable
 8002e58:	4b05      	ldr	r3, [pc, #20]	; (8002e70 <spi_read+0x74>)
 8002e5a:	695b      	ldr	r3, [r3, #20]
 8002e5c:	4a04      	ldr	r2, [pc, #16]	; (8002e70 <spi_read+0x74>)
 8002e5e:	f043 0308 	orr.w	r3, r3, #8
 8002e62:	6153      	str	r3, [r2, #20]
    return b;
 8002e64:	7b7b      	ldrb	r3, [r7, #13]
}
 8002e66:	4618      	mov	r0, r3
 8002e68:	3714      	adds	r7, #20
 8002e6a:	46bd      	mov	sp, r7
 8002e6c:	bc80      	pop	{r7}
 8002e6e:	4770      	bx	lr
 8002e70:	40021000 	.word	0x40021000
 8002e74:	40013000 	.word	0x40013000

08002e78 <i2c_write>:

///////////////////////////////////////////////////////////////////////////////////

void i2c_write(uint8_t regaddr, uint8_t data) {
 8002e78:	b580      	push	{r7, lr}
 8002e7a:	b082      	sub	sp, #8
 8002e7c:	af00      	add	r7, sp, #0
 8002e7e:	4603      	mov	r3, r0
 8002e80:	460a      	mov	r2, r1
 8002e82:	71fb      	strb	r3, [r7, #7]
 8002e84:	4613      	mov	r3, r2
 8002e86:	71bb      	strb	r3, [r7, #6]
    // send start condition
    __i2c_start();
 8002e88:	f7ff ff50 	bl	8002d2c <__i2c_start>

    // send chipaddr in write mode
    // wait until address is sent
    I2C1->DR = DeviceAddr;
 8002e8c:	4b13      	ldr	r3, [pc, #76]	; (8002edc <i2c_write+0x64>)
 8002e8e:	781b      	ldrb	r3, [r3, #0]
 8002e90:	b2da      	uxtb	r2, r3
 8002e92:	4b13      	ldr	r3, [pc, #76]	; (8002ee0 <i2c_write+0x68>)
 8002e94:	611a      	str	r2, [r3, #16]
    while (!(I2C1->SR1 & I2C_SR1_ADDR));
 8002e96:	bf00      	nop
 8002e98:	4b11      	ldr	r3, [pc, #68]	; (8002ee0 <i2c_write+0x68>)
 8002e9a:	695b      	ldr	r3, [r3, #20]
 8002e9c:	f003 0302 	and.w	r3, r3, #2
 8002ea0:	2b00      	cmp	r3, #0
 8002ea2:	d0f9      	beq.n	8002e98 <i2c_write+0x20>
    // dummy read to clear flags
    (void)I2C1->SR2; // clear addr condition
 8002ea4:	4b0e      	ldr	r3, [pc, #56]	; (8002ee0 <i2c_write+0x68>)
 8002ea6:	699b      	ldr	r3, [r3, #24]

    // send MAP byte with auto increment off
    // wait until byte transfer complete (BTF)
    I2C1->DR = regaddr;
 8002ea8:	4a0d      	ldr	r2, [pc, #52]	; (8002ee0 <i2c_write+0x68>)
 8002eaa:	79fb      	ldrb	r3, [r7, #7]
 8002eac:	6113      	str	r3, [r2, #16]
    while (!(I2C1->SR1 & I2C_SR1_BTF));
 8002eae:	bf00      	nop
 8002eb0:	4b0b      	ldr	r3, [pc, #44]	; (8002ee0 <i2c_write+0x68>)
 8002eb2:	695b      	ldr	r3, [r3, #20]
 8002eb4:	f003 0304 	and.w	r3, r3, #4
 8002eb8:	2b00      	cmp	r3, #0
 8002eba:	d0f9      	beq.n	8002eb0 <i2c_write+0x38>

    // send data
    // wait until byte transfer complete
    I2C1->DR = data;
 8002ebc:	4a08      	ldr	r2, [pc, #32]	; (8002ee0 <i2c_write+0x68>)
 8002ebe:	79bb      	ldrb	r3, [r7, #6]
 8002ec0:	6113      	str	r3, [r2, #16]
    while (!(I2C1->SR1 & I2C_SR1_BTF));
 8002ec2:	bf00      	nop
 8002ec4:	4b06      	ldr	r3, [pc, #24]	; (8002ee0 <i2c_write+0x68>)
 8002ec6:	695b      	ldr	r3, [r3, #20]
 8002ec8:	f003 0304 	and.w	r3, r3, #4
 8002ecc:	2b00      	cmp	r3, #0
 8002ece:	d0f9      	beq.n	8002ec4 <i2c_write+0x4c>

    // send stop condition
    __i2c_stop();
 8002ed0:	f7ff ff42 	bl	8002d58 <__i2c_stop>
}
 8002ed4:	bf00      	nop
 8002ed6:	3708      	adds	r7, #8
 8002ed8:	46bd      	mov	sp, r7
 8002eda:	bd80      	pop	{r7, pc}
 8002edc:	20000404 	.word	0x20000404
 8002ee0:	40005400 	.word	0x40005400

08002ee4 <i2c_read>:

///////////////////////////////////////////////////////////////////////////////////

uint8_t i2c_read(uint8_t regaddr) {
 8002ee4:	b580      	push	{r7, lr}
 8002ee6:	b084      	sub	sp, #16
 8002ee8:	af00      	add	r7, sp, #0
 8002eea:	4603      	mov	r3, r0
 8002eec:	71fb      	strb	r3, [r7, #7]
    uint8_t reg;

    // send start condition
    __i2c_start();
 8002eee:	f7ff ff1d 	bl	8002d2c <__i2c_start>

    // send chipaddr in write mode
    // wait until address is sent
    I2C1->DR = DeviceAddr;
 8002ef2:	4b1f      	ldr	r3, [pc, #124]	; (8002f70 <i2c_read+0x8c>)
 8002ef4:	781b      	ldrb	r3, [r3, #0]
 8002ef6:	b2da      	uxtb	r2, r3
 8002ef8:	4b1e      	ldr	r3, [pc, #120]	; (8002f74 <i2c_read+0x90>)
 8002efa:	611a      	str	r2, [r3, #16]
    while (!(I2C1->SR1 & I2C_SR1_ADDR));
 8002efc:	bf00      	nop
 8002efe:	4b1d      	ldr	r3, [pc, #116]	; (8002f74 <i2c_read+0x90>)
 8002f00:	695b      	ldr	r3, [r3, #20]
 8002f02:	f003 0302 	and.w	r3, r3, #2
 8002f06:	2b00      	cmp	r3, #0
 8002f08:	d0f9      	beq.n	8002efe <i2c_read+0x1a>
    // dummy read to clear flags
    (void)I2C1->SR2; // clear addr condition
 8002f0a:	4b1a      	ldr	r3, [pc, #104]	; (8002f74 <i2c_read+0x90>)
 8002f0c:	699b      	ldr	r3, [r3, #24]

    // send MAP byte with auto increment off
    // wait until byte transfer complete (BTF)
    I2C1->DR = regaddr;
 8002f0e:	4a19      	ldr	r2, [pc, #100]	; (8002f74 <i2c_read+0x90>)
 8002f10:	79fb      	ldrb	r3, [r7, #7]
 8002f12:	6113      	str	r3, [r2, #16]
    while (!(I2C1->SR1 & I2C_SR1_BTF));
 8002f14:	bf00      	nop
 8002f16:	4b17      	ldr	r3, [pc, #92]	; (8002f74 <i2c_read+0x90>)
 8002f18:	695b      	ldr	r3, [r3, #20]
 8002f1a:	f003 0304 	and.w	r3, r3, #4
 8002f1e:	2b00      	cmp	r3, #0
 8002f20:	d0f9      	beq.n	8002f16 <i2c_read+0x32>

    // restart transmission by sending stop & start
    __i2c_stop();
 8002f22:	f7ff ff19 	bl	8002d58 <__i2c_stop>
    __i2c_start();
 8002f26:	f7ff ff01 	bl	8002d2c <__i2c_start>

    // send chipaddr in read mode. LSB is 1
    // wait until address is sent
    I2C1->DR = DeviceAddr | 0x01; // read
 8002f2a:	4b11      	ldr	r3, [pc, #68]	; (8002f70 <i2c_read+0x8c>)
 8002f2c:	781b      	ldrb	r3, [r3, #0]
 8002f2e:	b2db      	uxtb	r3, r3
 8002f30:	f043 0301 	orr.w	r3, r3, #1
 8002f34:	b2da      	uxtb	r2, r3
 8002f36:	4b0f      	ldr	r3, [pc, #60]	; (8002f74 <i2c_read+0x90>)
 8002f38:	611a      	str	r2, [r3, #16]
    while (!(I2C1->SR1 & I2C_SR1_ADDR));
 8002f3a:	bf00      	nop
 8002f3c:	4b0d      	ldr	r3, [pc, #52]	; (8002f74 <i2c_read+0x90>)
 8002f3e:	695b      	ldr	r3, [r3, #20]
 8002f40:	f003 0302 	and.w	r3, r3, #2
 8002f44:	2b00      	cmp	r3, #0
 8002f46:	d0f9      	beq.n	8002f3c <i2c_read+0x58>
    // dummy read to clear flags
    (void)I2C1->SR2; // clear addr condition
 8002f48:	4b0a      	ldr	r3, [pc, #40]	; (8002f74 <i2c_read+0x90>)
 8002f4a:	699b      	ldr	r3, [r3, #24]

    // wait until receive buffer is not empty
    while (!(I2C1->SR1 & I2C_SR1_RXNE));
 8002f4c:	bf00      	nop
 8002f4e:	4b09      	ldr	r3, [pc, #36]	; (8002f74 <i2c_read+0x90>)
 8002f50:	695b      	ldr	r3, [r3, #20]
 8002f52:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002f56:	2b00      	cmp	r3, #0
 8002f58:	d0f9      	beq.n	8002f4e <i2c_read+0x6a>
    // read content
    reg = (uint8_t)I2C1->DR;
 8002f5a:	4b06      	ldr	r3, [pc, #24]	; (8002f74 <i2c_read+0x90>)
 8002f5c:	691b      	ldr	r3, [r3, #16]
 8002f5e:	73fb      	strb	r3, [r7, #15]

    // send stop condition
    __i2c_stop();
 8002f60:	f7ff fefa 	bl	8002d58 <__i2c_stop>

    return reg;
 8002f64:	7bfb      	ldrb	r3, [r7, #15]
}
 8002f66:	4618      	mov	r0, r3
 8002f68:	3710      	adds	r7, #16
 8002f6a:	46bd      	mov	sp, r7
 8002f6c:	bd80      	pop	{r7, pc}
 8002f6e:	bf00      	nop
 8002f70:	20000404 	.word	0x20000404
 8002f74:	40005400 	.word	0x40005400

08002f78 <init_EXT_int>:

///////////////////////////////////////////////////////////////////////////////////

void init_EXT_int()		// Externel interrupt initialization for button
{
 8002f78:	b580      	push	{r7, lr}
 8002f7a:	af00      	add	r7, sp, #0
	RCC->APB2ENR |= (1 << 14);   //for ext interrupt
 8002f7c:	4b0f      	ldr	r3, [pc, #60]	; (8002fbc <init_EXT_int+0x44>)
 8002f7e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002f80:	4a0e      	ldr	r2, [pc, #56]	; (8002fbc <init_EXT_int+0x44>)
 8002f82:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002f86:	6453      	str	r3, [r2, #68]	; 0x44
	SYSCFG->EXTICR[0] |= 0x00000000;
 8002f88:	4b0d      	ldr	r3, [pc, #52]	; (8002fc0 <init_EXT_int+0x48>)
 8002f8a:	4a0d      	ldr	r2, [pc, #52]	; (8002fc0 <init_EXT_int+0x48>)
 8002f8c:	689b      	ldr	r3, [r3, #8]
 8002f8e:	6093      	str	r3, [r2, #8]
	// Choose either rising edge trigger (RTSR) or falling edge trigger (FTSR)
	EXTI->RTSR |= 0x00001;   // Enable rising edge trigger on EXTI0
 8002f90:	4b0c      	ldr	r3, [pc, #48]	; (8002fc4 <init_EXT_int+0x4c>)
 8002f92:	689b      	ldr	r3, [r3, #8]
 8002f94:	4a0b      	ldr	r2, [pc, #44]	; (8002fc4 <init_EXT_int+0x4c>)
 8002f96:	f043 0301 	orr.w	r3, r3, #1
 8002f9a:	6093      	str	r3, [r2, #8]
	// Mask the used external interrupt numbers.
	EXTI->IMR |= 0x00001;    // Mask EXTI0
 8002f9c:	4b09      	ldr	r3, [pc, #36]	; (8002fc4 <init_EXT_int+0x4c>)
 8002f9e:	681b      	ldr	r3, [r3, #0]
 8002fa0:	4a08      	ldr	r2, [pc, #32]	; (8002fc4 <init_EXT_int+0x4c>)
 8002fa2:	f043 0301 	orr.w	r3, r3, #1
 8002fa6:	6013      	str	r3, [r2, #0]
	// Set Priority for each interrupt request
	NVIC->IP[EXTI0_IRQn] = 0x10; // Priority level 1
 8002fa8:	4b07      	ldr	r3, [pc, #28]	; (8002fc8 <init_EXT_int+0x50>)
 8002faa:	2210      	movs	r2, #16
 8002fac:	f883 2306 	strb.w	r2, [r3, #774]	; 0x306
	// enable EXT0 IRQ from NVIC
	NVIC_EnableIRQ(EXTI0_IRQn);
 8002fb0:	2006      	movs	r0, #6
 8002fb2:	f7ff fe75 	bl	8002ca0 <__NVIC_EnableIRQ>
}
 8002fb6:	bf00      	nop
 8002fb8:	bd80      	pop	{r7, pc}
 8002fba:	bf00      	nop
 8002fbc:	40023800 	.word	0x40023800
 8002fc0:	40013800 	.word	0x40013800
 8002fc4:	40013c00 	.word	0x40013c00
 8002fc8:	e000e100 	.word	0xe000e100

08002fcc <EXTI0_IRQHandler>:

///////////////////////////////////////////////////////////////////////////////////

void EXTI0_IRQHandler(void)		// Externel interrupt for button
{
 8002fcc:	b580      	push	{r7, lr}
 8002fce:	b082      	sub	sp, #8
 8002fd0:	af00      	add	r7, sp, #0
	if (EXTI->PR & (1 << 0)){
 8002fd2:	4b1b      	ldr	r3, [pc, #108]	; (8003040 <EXTI0_IRQHandler+0x74>)
 8002fd4:	695b      	ldr	r3, [r3, #20]
 8002fd6:	f003 0301 	and.w	r3, r3, #1
 8002fda:	2b00      	cmp	r3, #0
 8002fdc:	d02b      	beq.n	8003036 <EXTI0_IRQHandler+0x6a>

	    Button_pos ^= 0x1;		// changes button position
 8002fde:	4b19      	ldr	r3, [pc, #100]	; (8003044 <EXTI0_IRQHandler+0x78>)
 8002fe0:	781b      	ldrb	r3, [r3, #0]
 8002fe2:	b2db      	uxtb	r3, r3
 8002fe4:	f083 0301 	eor.w	r3, r3, #1
 8002fe8:	b2da      	uxtb	r2, r3
 8002fea:	4b16      	ldr	r3, [pc, #88]	; (8003044 <EXTI0_IRQHandler+0x78>)
 8002fec:	701a      	strb	r2, [r3, #0]
	    q = 0;					// resets timer
 8002fee:	4b16      	ldr	r3, [pc, #88]	; (8003048 <EXTI0_IRQHandler+0x7c>)
 8002ff0:	2200      	movs	r2, #0
 8002ff2:	701a      	strb	r2, [r3, #0]
	    for(uint32_t j=0; j<500000; j++);
 8002ff4:	2300      	movs	r3, #0
 8002ff6:	607b      	str	r3, [r7, #4]
 8002ff8:	e002      	b.n	8003000 <EXTI0_IRQHandler+0x34>
 8002ffa:	687b      	ldr	r3, [r7, #4]
 8002ffc:	3301      	adds	r3, #1
 8002ffe:	607b      	str	r3, [r7, #4]
 8003000:	687b      	ldr	r3, [r7, #4]
 8003002:	4a12      	ldr	r2, [pc, #72]	; (800304c <EXTI0_IRQHandler+0x80>)
 8003004:	4293      	cmp	r3, r2
 8003006:	d9f8      	bls.n	8002ffa <EXTI0_IRQHandler+0x2e>

	   switch(Button_pos)
 8003008:	4b0e      	ldr	r3, [pc, #56]	; (8003044 <EXTI0_IRQHandler+0x78>)
 800300a:	781b      	ldrb	r3, [r3, #0]
 800300c:	b2db      	uxtb	r3, r3
 800300e:	2b00      	cmp	r3, #0
 8003010:	d002      	beq.n	8003018 <EXTI0_IRQHandler+0x4c>
 8003012:	2b01      	cmp	r3, #1
 8003014:	d006      	beq.n	8003024 <EXTI0_IRQHandler+0x58>
 8003016:	e00b      	b.n	8003030 <EXTI0_IRQHandler+0x64>
	   {
	   	   case 0:
	   		   q = 0;			// Reset timer
 8003018:	4b0b      	ldr	r3, [pc, #44]	; (8003048 <EXTI0_IRQHandler+0x7c>)
 800301a:	2200      	movs	r2, #0
 800301c:	701a      	strb	r2, [r3, #0]

	   		   microphone();	// go to mic
 800301e:	f000 f817 	bl	8003050 <microphone>
	   		   break;
 8003022:	e005      	b.n	8003030 <EXTI0_IRQHandler+0x64>

	   	   case 1:
	   		   q = 0;			// Reset timer
 8003024:	4b08      	ldr	r3, [pc, #32]	; (8003048 <EXTI0_IRQHandler+0x7c>)
 8003026:	2200      	movs	r2, #0
 8003028:	701a      	strb	r2, [r3, #0]

	   		   metronome();		// go to acceletometer
 800302a:	f000 f82b 	bl	8003084 <metronome>
	   		   break;
 800302e:	bf00      	nop
	   }

	    EXTI->PR = (1 << 0);
 8003030:	4b03      	ldr	r3, [pc, #12]	; (8003040 <EXTI0_IRQHandler+0x74>)
 8003032:	2201      	movs	r2, #1
 8003034:	615a      	str	r2, [r3, #20]
	}
}
 8003036:	bf00      	nop
 8003038:	3708      	adds	r7, #8
 800303a:	46bd      	mov	sp, r7
 800303c:	bd80      	pop	{r7, pc}
 800303e:	bf00      	nop
 8003040:	40013c00 	.word	0x40013c00
 8003044:	20000405 	.word	0x20000405
 8003048:	20000490 	.word	0x20000490
 800304c:	0007a11f 	.word	0x0007a11f

08003050 <microphone>:

///////////////////////////////////////////////////////////////////////////////////

void microphone()
{
 8003050:	b580      	push	{r7, lr}
 8003052:	af00      	add	r7, sp, #0
	flag_mode2 = 0;
 8003054:	4b08      	ldr	r3, [pc, #32]	; (8003078 <microphone+0x28>)
 8003056:	2200      	movs	r2, #0
 8003058:	601a      	str	r2, [r3, #0]
	SPI1->CR1 &= (0 << 6);	// SPI1 disabled(metronome data transfer stops)
 800305a:	4b08      	ldr	r3, [pc, #32]	; (800307c <microphone+0x2c>)
 800305c:	681b      	ldr	r3, [r3, #0]
 800305e:	4b07      	ldr	r3, [pc, #28]	; (800307c <microphone+0x2c>)
 8003060:	2200      	movs	r2, #0
 8003062:	601a      	str	r2, [r3, #0]
	//Initialize I2S2 -- mic
	init_i2s2();
 8003064:	f000 f948 	bl	80032f8 <init_i2s2>

	GPIOD->ODR ^= (uint16_t)(1 << 13);	// orange
 8003068:	4b05      	ldr	r3, [pc, #20]	; (8003080 <microphone+0x30>)
 800306a:	695b      	ldr	r3, [r3, #20]
 800306c:	4a04      	ldr	r2, [pc, #16]	; (8003080 <microphone+0x30>)
 800306e:	f483 5300 	eor.w	r3, r3, #8192	; 0x2000
 8003072:	6153      	str	r3, [r2, #20]

}
 8003074:	bf00      	nop
 8003076:	bd80      	pop	{r7, pc}
 8003078:	2000049c 	.word	0x2000049c
 800307c:	40013000 	.word	0x40013000
 8003080:	40020c00 	.word	0x40020c00

08003084 <metronome>:

///////////////////////////////////////////////////////////////////////////////////

void metronome()
{
 8003084:	b580      	push	{r7, lr}
 8003086:	af00      	add	r7, sp, #0
	SPI2->I2SCFGR &= (0 << 10); // I2S2 disabled(mic disabled and data transfer stops)
 8003088:	4b09      	ldr	r3, [pc, #36]	; (80030b0 <metronome+0x2c>)
 800308a:	69db      	ldr	r3, [r3, #28]
 800308c:	4b08      	ldr	r3, [pc, #32]	; (80030b0 <metronome+0x2c>)
 800308e:	2200      	movs	r2, #0
 8003090:	61da      	str	r2, [r3, #28]
	// initialize SPI1
	init_spi1();
 8003092:	f000 f813 	bl	80030bc <init_spi1>
	// initialize LIS3DSH metronome
	init_LIS3DSH();
 8003096:	f000 fc0d 	bl	80038b4 <init_LIS3DSH>

	GPIOD->ODR ^= (uint16_t)(1 << 13);	// orange
 800309a:	4b06      	ldr	r3, [pc, #24]	; (80030b4 <metronome+0x30>)
 800309c:	695b      	ldr	r3, [r3, #20]
 800309e:	4a05      	ldr	r2, [pc, #20]	; (80030b4 <metronome+0x30>)
 80030a0:	f483 5300 	eor.w	r3, r3, #8192	; 0x2000
 80030a4:	6153      	str	r3, [r2, #20]
	flag_mode2 = 1;
 80030a6:	4b04      	ldr	r3, [pc, #16]	; (80030b8 <metronome+0x34>)
 80030a8:	2201      	movs	r2, #1
 80030aa:	601a      	str	r2, [r3, #0]
}
 80030ac:	bf00      	nop
 80030ae:	bd80      	pop	{r7, pc}
 80030b0:	40003800 	.word	0x40003800
 80030b4:	40020c00 	.word	0x40020c00
 80030b8:	2000049c 	.word	0x2000049c

080030bc <init_spi1>:

///////////////////////////////////////////////////////////////////////////////////

void init_spi1()		// LIS3DSH accelerometer communucation
{
 80030bc:	b480      	push	{r7}
 80030be:	af00      	add	r7, sp, #0
	// enable GPIOE clock, bit 4 on AHB1ENR
	RCC->AHB1ENR |= (1 << 4);
 80030c0:	4b44      	ldr	r3, [pc, #272]	; (80031d4 <init_spi1+0x118>)
 80030c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80030c4:	4a43      	ldr	r2, [pc, #268]	; (80031d4 <init_spi1+0x118>)
 80030c6:	f043 0310 	orr.w	r3, r3, #16
 80030ca:	6313      	str	r3, [r2, #48]	; 0x30
	GPIOE->MODER &= 0xFFFFFF3F; 	// reset bits 6-7
 80030cc:	4b42      	ldr	r3, [pc, #264]	; (80031d8 <init_spi1+0x11c>)
 80030ce:	681b      	ldr	r3, [r3, #0]
 80030d0:	4a41      	ldr	r2, [pc, #260]	; (80031d8 <init_spi1+0x11c>)
 80030d2:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 80030d6:	6013      	str	r3, [r2, #0]
	GPIOE->MODER |= 0x00000040; 	// set bits 6-7 to 0b01 (output)
 80030d8:	4b3f      	ldr	r3, [pc, #252]	; (80031d8 <init_spi1+0x11c>)
 80030da:	681b      	ldr	r3, [r3, #0]
 80030dc:	4a3e      	ldr	r2, [pc, #248]	; (80031d8 <init_spi1+0x11c>)
 80030de:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80030e2:	6013      	str	r3, [r2, #0]
	GPIOE->ODR |= (1 << 3);
 80030e4:	4b3c      	ldr	r3, [pc, #240]	; (80031d8 <init_spi1+0x11c>)
 80030e6:	695b      	ldr	r3, [r3, #20]
 80030e8:	4a3b      	ldr	r2, [pc, #236]	; (80031d8 <init_spi1+0x11c>)
 80030ea:	f043 0308 	orr.w	r3, r3, #8
 80030ee:	6153      	str	r3, [r2, #20]

	// SPI1 data pins setup
	RCC->AHB1ENR |= (1 << 0);		// Enable GPIOA clock
 80030f0:	4b38      	ldr	r3, [pc, #224]	; (80031d4 <init_spi1+0x118>)
 80030f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80030f4:	4a37      	ldr	r2, [pc, #220]	; (80031d4 <init_spi1+0x118>)
 80030f6:	f043 0301 	orr.w	r3, r3, #1
 80030fa:	6313      	str	r3, [r2, #48]	; 0x30
	RCC->APB2ENR |= (1 << 12);		// Enable SPI1
 80030fc:	4b35      	ldr	r3, [pc, #212]	; (80031d4 <init_spi1+0x118>)
 80030fe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003100:	4a34      	ldr	r2, [pc, #208]	; (80031d4 <init_spi1+0x118>)
 8003102:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8003106:	6453      	str	r3, [r2, #68]	; 0x44
	// PA7 MOSI
	GPIOA->MODER  	|= (2 << 14);	// Pin altenate function mode
 8003108:	4b34      	ldr	r3, [pc, #208]	; (80031dc <init_spi1+0x120>)
 800310a:	681b      	ldr	r3, [r3, #0]
 800310c:	4a33      	ldr	r2, [pc, #204]	; (80031dc <init_spi1+0x120>)
 800310e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8003112:	6013      	str	r3, [r2, #0]
	GPIOA->OSPEEDR	|= (3 << 14);	// Pin very high speed mode
 8003114:	4b31      	ldr	r3, [pc, #196]	; (80031dc <init_spi1+0x120>)
 8003116:	689b      	ldr	r3, [r3, #8]
 8003118:	4a30      	ldr	r2, [pc, #192]	; (80031dc <init_spi1+0x120>)
 800311a:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800311e:	6093      	str	r3, [r2, #8]
	GPIOA->AFR[0] 	|= (5 << 28);	// Manage alternate function
 8003120:	4b2e      	ldr	r3, [pc, #184]	; (80031dc <init_spi1+0x120>)
 8003122:	6a1b      	ldr	r3, [r3, #32]
 8003124:	4a2d      	ldr	r2, [pc, #180]	; (80031dc <init_spi1+0x120>)
 8003126:	f043 43a0 	orr.w	r3, r3, #1342177280	; 0x50000000
 800312a:	6213      	str	r3, [r2, #32]
	// PA6 MISO
	GPIOA->MODER	|= (2 << 12);	// Pin altenate function mode
 800312c:	4b2b      	ldr	r3, [pc, #172]	; (80031dc <init_spi1+0x120>)
 800312e:	681b      	ldr	r3, [r3, #0]
 8003130:	4a2a      	ldr	r2, [pc, #168]	; (80031dc <init_spi1+0x120>)
 8003132:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8003136:	6013      	str	r3, [r2, #0]
	GPIOA->OSPEEDR	|= (3 << 12);	// Pin very high speed mode
 8003138:	4b28      	ldr	r3, [pc, #160]	; (80031dc <init_spi1+0x120>)
 800313a:	689b      	ldr	r3, [r3, #8]
 800313c:	4a27      	ldr	r2, [pc, #156]	; (80031dc <init_spi1+0x120>)
 800313e:	f443 5340 	orr.w	r3, r3, #12288	; 0x3000
 8003142:	6093      	str	r3, [r2, #8]
	GPIOA->AFR[0] 	|= (5 << 24);	// Manage alternate function
 8003144:	4b25      	ldr	r3, [pc, #148]	; (80031dc <init_spi1+0x120>)
 8003146:	6a1b      	ldr	r3, [r3, #32]
 8003148:	4a24      	ldr	r2, [pc, #144]	; (80031dc <init_spi1+0x120>)
 800314a:	f043 63a0 	orr.w	r3, r3, #83886080	; 0x5000000
 800314e:	6213      	str	r3, [r2, #32]
	// PA5 SCK
	GPIOA->MODER  	|= (2 << 10);	// Pin altenate function mode
 8003150:	4b22      	ldr	r3, [pc, #136]	; (80031dc <init_spi1+0x120>)
 8003152:	681b      	ldr	r3, [r3, #0]
 8003154:	4a21      	ldr	r2, [pc, #132]	; (80031dc <init_spi1+0x120>)
 8003156:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800315a:	6013      	str	r3, [r2, #0]
	GPIOA->OSPEEDR	|= (3 << 10);	// Pin very high speed mode
 800315c:	4b1f      	ldr	r3, [pc, #124]	; (80031dc <init_spi1+0x120>)
 800315e:	689b      	ldr	r3, [r3, #8]
 8003160:	4a1e      	ldr	r2, [pc, #120]	; (80031dc <init_spi1+0x120>)
 8003162:	f443 6340 	orr.w	r3, r3, #3072	; 0xc00
 8003166:	6093      	str	r3, [r2, #8]
	GPIOA->AFR[0] 	|= (5 << 20);	// Manage alternate function
 8003168:	4b1c      	ldr	r3, [pc, #112]	; (80031dc <init_spi1+0x120>)
 800316a:	6a1b      	ldr	r3, [r3, #32]
 800316c:	4a1b      	ldr	r2, [pc, #108]	; (80031dc <init_spi1+0x120>)
 800316e:	f443 03a0 	orr.w	r3, r3, #5242880	; 0x500000
 8003172:	6213      	str	r3, [r2, #32]

	SPI1->CR1 |= (4 << 3);	// Baud rate control
 8003174:	4b1a      	ldr	r3, [pc, #104]	; (80031e0 <init_spi1+0x124>)
 8003176:	681b      	ldr	r3, [r3, #0]
 8003178:	4a19      	ldr	r2, [pc, #100]	; (80031e0 <init_spi1+0x124>)
 800317a:	f043 0320 	orr.w	r3, r3, #32
 800317e:	6013      	str	r3, [r2, #0]
	SPI1->CR1 |= (0 << 0);	// Clock phase (CPAL)
 8003180:	4b17      	ldr	r3, [pc, #92]	; (80031e0 <init_spi1+0x124>)
 8003182:	4a17      	ldr	r2, [pc, #92]	; (80031e0 <init_spi1+0x124>)
 8003184:	681b      	ldr	r3, [r3, #0]
 8003186:	6013      	str	r3, [r2, #0]
	SPI1->CR1 |= (0 << 1);	// Clock polarity (CPOL); @idle high SCK
 8003188:	4b15      	ldr	r3, [pc, #84]	; (80031e0 <init_spi1+0x124>)
 800318a:	4a15      	ldr	r2, [pc, #84]	; (80031e0 <init_spi1+0x124>)
 800318c:	681b      	ldr	r3, [r3, #0]
 800318e:	6013      	str	r3, [r2, #0]
	SPI1->CR1 |= (1 << 11);	// Data frame length; 0-> 8bit, 1-> 16bit
 8003190:	4b13      	ldr	r3, [pc, #76]	; (80031e0 <init_spi1+0x124>)
 8003192:	681b      	ldr	r3, [r3, #0]
 8003194:	4a12      	ldr	r2, [pc, #72]	; (80031e0 <init_spi1+0x124>)
 8003196:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800319a:	6013      	str	r3, [r2, #0]
//	SPI1->CR1 |= (1 << 7);	// Frame format; 0-> MSB first, 1-> LSB first
	SPI1->CR1 |= (1 << 9);	// SSM; software NSS enabled
 800319c:	4b10      	ldr	r3, [pc, #64]	; (80031e0 <init_spi1+0x124>)
 800319e:	681b      	ldr	r3, [r3, #0]
 80031a0:	4a0f      	ldr	r2, [pc, #60]	; (80031e0 <init_spi1+0x124>)
 80031a2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80031a6:	6013      	str	r3, [r2, #0]
    SPI1->CR1 |= (1 << 8);	// SSI
 80031a8:	4b0d      	ldr	r3, [pc, #52]	; (80031e0 <init_spi1+0x124>)
 80031aa:	681b      	ldr	r3, [r3, #0]
 80031ac:	4a0c      	ldr	r2, [pc, #48]	; (80031e0 <init_spi1+0x124>)
 80031ae:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80031b2:	6013      	str	r3, [r2, #0]
	SPI1->CR1 |= (1 << 2);	// Master config; 0-> slave, 1-> master
 80031b4:	4b0a      	ldr	r3, [pc, #40]	; (80031e0 <init_spi1+0x124>)
 80031b6:	681b      	ldr	r3, [r3, #0]
 80031b8:	4a09      	ldr	r2, [pc, #36]	; (80031e0 <init_spi1+0x124>)
 80031ba:	f043 0304 	orr.w	r3, r3, #4
 80031be:	6013      	str	r3, [r2, #0]

	SPI1->CR1 |= (1 << 6);	// SPI enable
 80031c0:	4b07      	ldr	r3, [pc, #28]	; (80031e0 <init_spi1+0x124>)
 80031c2:	681b      	ldr	r3, [r3, #0]
 80031c4:	4a06      	ldr	r2, [pc, #24]	; (80031e0 <init_spi1+0x124>)
 80031c6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80031ca:	6013      	str	r3, [r2, #0]
}
 80031cc:	bf00      	nop
 80031ce:	46bd      	mov	sp, r7
 80031d0:	bc80      	pop	{r7}
 80031d2:	4770      	bx	lr
 80031d4:	40023800 	.word	0x40023800
 80031d8:	40021000 	.word	0x40021000
 80031dc:	40020000 	.word	0x40020000
 80031e0:	40013000 	.word	0x40013000

080031e4 <init_i2c1>:

///////////////////////////////////////////////////////////////////////////////////

void init_i2c1()			// DAC communucation
{
 80031e4:	b580      	push	{r7, lr}
 80031e6:	af00      	add	r7, sp, #0
    // enable I2C clock
    RCC->APB1ENR |= RCC_APB1ENR_I2C1EN;
 80031e8:	4b39      	ldr	r3, [pc, #228]	; (80032d0 <init_i2c1+0xec>)
 80031ea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80031ec:	4a38      	ldr	r2, [pc, #224]	; (80032d0 <init_i2c1+0xec>)
 80031ee:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80031f2:	6413      	str	r3, [r2, #64]	; 0x40

    // setup I2C pins
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN;
 80031f4:	4b36      	ldr	r3, [pc, #216]	; (80032d0 <init_i2c1+0xec>)
 80031f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80031f8:	4a35      	ldr	r2, [pc, #212]	; (80032d0 <init_i2c1+0xec>)
 80031fa:	f043 0302 	orr.w	r3, r3, #2
 80031fe:	6313      	str	r3, [r2, #48]	; 0x30
    GPIOB->MODER &= ~(3U << 6*2); // PB6
 8003200:	4b34      	ldr	r3, [pc, #208]	; (80032d4 <init_i2c1+0xf0>)
 8003202:	681b      	ldr	r3, [r3, #0]
 8003204:	4a33      	ldr	r2, [pc, #204]	; (80032d4 <init_i2c1+0xf0>)
 8003206:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 800320a:	6013      	str	r3, [r2, #0]
    GPIOB->MODER |=  (2 << 6*2); // AF
 800320c:	4b31      	ldr	r3, [pc, #196]	; (80032d4 <init_i2c1+0xf0>)
 800320e:	681b      	ldr	r3, [r3, #0]
 8003210:	4a30      	ldr	r2, [pc, #192]	; (80032d4 <init_i2c1+0xf0>)
 8003212:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8003216:	6013      	str	r3, [r2, #0]
    GPIOB->OTYPER |= (1 << 6);   // open-drain
 8003218:	4b2e      	ldr	r3, [pc, #184]	; (80032d4 <init_i2c1+0xf0>)
 800321a:	685b      	ldr	r3, [r3, #4]
 800321c:	4a2d      	ldr	r2, [pc, #180]	; (80032d4 <init_i2c1+0xf0>)
 800321e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003222:	6053      	str	r3, [r2, #4]
    GPIOB->MODER &= ~(3U << 9*2); // PB9
 8003224:	4b2b      	ldr	r3, [pc, #172]	; (80032d4 <init_i2c1+0xf0>)
 8003226:	681b      	ldr	r3, [r3, #0]
 8003228:	4a2a      	ldr	r2, [pc, #168]	; (80032d4 <init_i2c1+0xf0>)
 800322a:	f423 2340 	bic.w	r3, r3, #786432	; 0xc0000
 800322e:	6013      	str	r3, [r2, #0]
    GPIOB->MODER |=  (2 << 9*2); // AF
 8003230:	4b28      	ldr	r3, [pc, #160]	; (80032d4 <init_i2c1+0xf0>)
 8003232:	681b      	ldr	r3, [r3, #0]
 8003234:	4a27      	ldr	r2, [pc, #156]	; (80032d4 <init_i2c1+0xf0>)
 8003236:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800323a:	6013      	str	r3, [r2, #0]
    GPIOB->OTYPER |= (1 << 9);   // open-drain
 800323c:	4b25      	ldr	r3, [pc, #148]	; (80032d4 <init_i2c1+0xf0>)
 800323e:	685b      	ldr	r3, [r3, #4]
 8003240:	4a24      	ldr	r2, [pc, #144]	; (80032d4 <init_i2c1+0xf0>)
 8003242:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8003246:	6053      	str	r3, [r2, #4]

    // choose AF4 for I2C1 in Alternate Function registers
    GPIOB->AFR[0] |= (4 << 6*4);     // for pin 6
 8003248:	4b22      	ldr	r3, [pc, #136]	; (80032d4 <init_i2c1+0xf0>)
 800324a:	6a1b      	ldr	r3, [r3, #32]
 800324c:	4a21      	ldr	r2, [pc, #132]	; (80032d4 <init_i2c1+0xf0>)
 800324e:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8003252:	6213      	str	r3, [r2, #32]
    GPIOB->AFR[1] |= (4 << (9-8)*4); // for pin 9
 8003254:	4b1f      	ldr	r3, [pc, #124]	; (80032d4 <init_i2c1+0xf0>)
 8003256:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003258:	4a1e      	ldr	r2, [pc, #120]	; (80032d4 <init_i2c1+0xf0>)
 800325a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800325e:	6253      	str	r3, [r2, #36]	; 0x24

    // reset and clear reg
    I2C1->CR1 = I2C_CR1_SWRST;
 8003260:	4b1d      	ldr	r3, [pc, #116]	; (80032d8 <init_i2c1+0xf4>)
 8003262:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8003266:	601a      	str	r2, [r3, #0]
    I2C1->CR1 = 0;
 8003268:	4b1b      	ldr	r3, [pc, #108]	; (80032d8 <init_i2c1+0xf4>)
 800326a:	2200      	movs	r2, #0
 800326c:	601a      	str	r2, [r3, #0]

    I2C1->CR2 |= (I2C_CR2_ITERREN); // enable error interrupt
 800326e:	4b1a      	ldr	r3, [pc, #104]	; (80032d8 <init_i2c1+0xf4>)
 8003270:	685b      	ldr	r3, [r3, #4]
 8003272:	4a19      	ldr	r2, [pc, #100]	; (80032d8 <init_i2c1+0xf4>)
 8003274:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003278:	6053      	str	r3, [r2, #4]
    // we need 1/100kz = 10us clock speed
    // Thigh and Tlow needs to be 5us each
    // Let's pick fPCLK1 = 10Mhz, TPCLK1 = 1/10Mhz = 100ns
    // Thigh = CCR * TPCLK1 => 5us = CCR * 100ns
    // CCR = 50
    I2C1->CR2 |= (10 << 0); // 10Mhz periph clock
 800327a:	4b17      	ldr	r3, [pc, #92]	; (80032d8 <init_i2c1+0xf4>)
 800327c:	685b      	ldr	r3, [r3, #4]
 800327e:	4a16      	ldr	r2, [pc, #88]	; (80032d8 <init_i2c1+0xf4>)
 8003280:	f043 030a 	orr.w	r3, r3, #10
 8003284:	6053      	str	r3, [r2, #4]
    I2C1->CCR |= (50 << 0);
 8003286:	4b14      	ldr	r3, [pc, #80]	; (80032d8 <init_i2c1+0xf4>)
 8003288:	69db      	ldr	r3, [r3, #28]
 800328a:	4a13      	ldr	r2, [pc, #76]	; (80032d8 <init_i2c1+0xf4>)
 800328c:	f043 0332 	orr.w	r3, r3, #50	; 0x32
 8003290:	61d3      	str	r3, [r2, #28]
    // Maximum rise time.
    // Calculation is (maximum_rise_time / fPCLK1) + 1
    // In SM mode maximum allowed SCL rise time is 1000ns
    // For TPCLK1 = 100ns => (1000ns / 100ns) + 1= 10 + 1 = 11
    I2C1->TRISE |= (11 << 0); // program TRISE to 11 for 100khz
 8003292:	4b11      	ldr	r3, [pc, #68]	; (80032d8 <init_i2c1+0xf4>)
 8003294:	6a1b      	ldr	r3, [r3, #32]
 8003296:	4a10      	ldr	r2, [pc, #64]	; (80032d8 <init_i2c1+0xf4>)
 8003298:	f043 030b 	orr.w	r3, r3, #11
 800329c:	6213      	str	r3, [r2, #32]
    // set own address to 00 - not really used in master mode
    I2C1->OAR1 |= (0x00 << 1);
 800329e:	4b0e      	ldr	r3, [pc, #56]	; (80032d8 <init_i2c1+0xf4>)
 80032a0:	4a0d      	ldr	r2, [pc, #52]	; (80032d8 <init_i2c1+0xf4>)
 80032a2:	689b      	ldr	r3, [r3, #8]
 80032a4:	6093      	str	r3, [r2, #8]
    I2C1->OAR1 |= (1 << 14); // bit 14 should be kept at 1 according to the datasheet
 80032a6:	4b0c      	ldr	r3, [pc, #48]	; (80032d8 <init_i2c1+0xf4>)
 80032a8:	689b      	ldr	r3, [r3, #8]
 80032aa:	4a0b      	ldr	r2, [pc, #44]	; (80032d8 <init_i2c1+0xf4>)
 80032ac:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80032b0:	6093      	str	r3, [r2, #8]

    // enable error interrupt from NVIC
    NVIC_SetPriority(I2C1_ER_IRQn, 1);
 80032b2:	2101      	movs	r1, #1
 80032b4:	2020      	movs	r0, #32
 80032b6:	f7ff fd0f 	bl	8002cd8 <__NVIC_SetPriority>
    NVIC_EnableIRQ(I2C1_ER_IRQn);
 80032ba:	2020      	movs	r0, #32
 80032bc:	f7ff fcf0 	bl	8002ca0 <__NVIC_EnableIRQ>

    I2C1->CR1 |= I2C_CR1_PE; // enable i2c
 80032c0:	4b05      	ldr	r3, [pc, #20]	; (80032d8 <init_i2c1+0xf4>)
 80032c2:	681b      	ldr	r3, [r3, #0]
 80032c4:	4a04      	ldr	r2, [pc, #16]	; (80032d8 <init_i2c1+0xf4>)
 80032c6:	f043 0301 	orr.w	r3, r3, #1
 80032ca:	6013      	str	r3, [r2, #0]
}
 80032cc:	bf00      	nop
 80032ce:	bd80      	pop	{r7, pc}
 80032d0:	40023800 	.word	0x40023800
 80032d4:	40020400 	.word	0x40020400
 80032d8:	40005400 	.word	0x40005400

080032dc <I2C1_ER_IRQHandler>:

///////////////////////////////////////////////////////////////////////////////////

void I2C1_ER_IRQHandler(){		// Interrupt for I2C-1 error
 80032dc:	b480      	push	{r7}
 80032de:	af00      	add	r7, sp, #0
    // error handler
    GPIOD->ODR |= (1 << 15); // blue LED
 80032e0:	4b04      	ldr	r3, [pc, #16]	; (80032f4 <I2C1_ER_IRQHandler+0x18>)
 80032e2:	695b      	ldr	r3, [r3, #20]
 80032e4:	4a03      	ldr	r2, [pc, #12]	; (80032f4 <I2C1_ER_IRQHandler+0x18>)
 80032e6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80032ea:	6153      	str	r3, [r2, #20]
}
 80032ec:	bf00      	nop
 80032ee:	46bd      	mov	sp, r7
 80032f0:	bc80      	pop	{r7}
 80032f2:	4770      	bx	lr
 80032f4:	40020c00 	.word	0x40020c00

080032f8 <init_i2s2>:

///////////////////////////////////////////////////////////////////////////////////

void init_i2s2() {		// Microphone
 80032f8:	b580      	push	{r7, lr}
 80032fa:	af00      	add	r7, sp, #0

    // Setup pins PC6 - MCLK, PB10 - SCK, PC3 - SD, PB12 - WS
    RCC->AHB1ENR |= ((1 << 2) | (1 << 1)); // enable GPIOC and GPIOB clocks
 80032fc:	4b5b      	ldr	r3, [pc, #364]	; (800346c <init_i2s2+0x174>)
 80032fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003300:	4a5a      	ldr	r2, [pc, #360]	; (800346c <init_i2s2+0x174>)
 8003302:	f043 0306 	orr.w	r3, r3, #6
 8003306:	6313      	str	r3, [r2, #48]	; 0x30
    RCC->APB1ENR |= (1 << 14); // enable SPI2 clock
 8003308:	4b58      	ldr	r3, [pc, #352]	; (800346c <init_i2s2+0x174>)
 800330a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800330c:	4a57      	ldr	r2, [pc, #348]	; (800346c <init_i2s2+0x174>)
 800330e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8003312:	6413      	str	r3, [r2, #64]	; 0x40
    // PC6 alternate function mode MCLK
    GPIOC->MODER   |= (2 << 12);	// Pin altenate function mode
 8003314:	4b56      	ldr	r3, [pc, #344]	; (8003470 <init_i2s2+0x178>)
 8003316:	681b      	ldr	r3, [r3, #0]
 8003318:	4a55      	ldr	r2, [pc, #340]	; (8003470 <init_i2s2+0x178>)
 800331a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800331e:	6013      	str	r3, [r2, #0]
    GPIOC->OSPEEDR |= (3 << 12);	// Pin very high speed mode
 8003320:	4b53      	ldr	r3, [pc, #332]	; (8003470 <init_i2s2+0x178>)
 8003322:	689b      	ldr	r3, [r3, #8]
 8003324:	4a52      	ldr	r2, [pc, #328]	; (8003470 <init_i2s2+0x178>)
 8003326:	f443 5340 	orr.w	r3, r3, #12288	; 0x3000
 800332a:	6093      	str	r3, [r2, #8]
    GPIOC->AFR[0]  |= (5 << 24);	// Manage alternate function
 800332c:	4b50      	ldr	r3, [pc, #320]	; (8003470 <init_i2s2+0x178>)
 800332e:	6a1b      	ldr	r3, [r3, #32]
 8003330:	4a4f      	ldr	r2, [pc, #316]	; (8003470 <init_i2s2+0x178>)
 8003332:	f043 63a0 	orr.w	r3, r3, #83886080	; 0x5000000
 8003336:	6213      	str	r3, [r2, #32]
    // PB10 alternate function mode SCL
    GPIOB->MODER   |= (2 << 20);	// Pin altenate function mode
 8003338:	4b4e      	ldr	r3, [pc, #312]	; (8003474 <init_i2s2+0x17c>)
 800333a:	681b      	ldr	r3, [r3, #0]
 800333c:	4a4d      	ldr	r2, [pc, #308]	; (8003474 <init_i2s2+0x17c>)
 800333e:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8003342:	6013      	str	r3, [r2, #0]
    GPIOB->OSPEEDR |= (3 << 20);	// Pin very high speed mode
 8003344:	4b4b      	ldr	r3, [pc, #300]	; (8003474 <init_i2s2+0x17c>)
 8003346:	689b      	ldr	r3, [r3, #8]
 8003348:	4a4a      	ldr	r2, [pc, #296]	; (8003474 <init_i2s2+0x17c>)
 800334a:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 800334e:	6093      	str	r3, [r2, #8]
    GPIOB->AFR[1]  |= (5 << 8);		// Manage alternate function
 8003350:	4b48      	ldr	r3, [pc, #288]	; (8003474 <init_i2s2+0x17c>)
 8003352:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003354:	4a47      	ldr	r2, [pc, #284]	; (8003474 <init_i2s2+0x17c>)
 8003356:	f443 63a0 	orr.w	r3, r3, #1280	; 0x500
 800335a:	6253      	str	r3, [r2, #36]	; 0x24
    // PC3 alternate function mode SD
    GPIOC->MODER   |= (2 << 6);		// Pin altenate function mode
 800335c:	4b44      	ldr	r3, [pc, #272]	; (8003470 <init_i2s2+0x178>)
 800335e:	681b      	ldr	r3, [r3, #0]
 8003360:	4a43      	ldr	r2, [pc, #268]	; (8003470 <init_i2s2+0x178>)
 8003362:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003366:	6013      	str	r3, [r2, #0]
    GPIOC->OSPEEDR |= (3 << 6);		// Pin very high speed mode
 8003368:	4b41      	ldr	r3, [pc, #260]	; (8003470 <init_i2s2+0x178>)
 800336a:	689b      	ldr	r3, [r3, #8]
 800336c:	4a40      	ldr	r2, [pc, #256]	; (8003470 <init_i2s2+0x178>)
 800336e:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8003372:	6093      	str	r3, [r2, #8]
    GPIOC->AFR[0]  |= (5 << 12);	// Manage alternate function
 8003374:	4b3e      	ldr	r3, [pc, #248]	; (8003470 <init_i2s2+0x178>)
 8003376:	6a1b      	ldr	r3, [r3, #32]
 8003378:	4a3d      	ldr	r2, [pc, #244]	; (8003470 <init_i2s2+0x178>)
 800337a:	f443 43a0 	orr.w	r3, r3, #20480	; 0x5000
 800337e:	6213      	str	r3, [r2, #32]
    // PB12 alternate function mode WS
    GPIOB->MODER   |= (2 << 24);	// Pin altenate function mode
 8003380:	4b3c      	ldr	r3, [pc, #240]	; (8003474 <init_i2s2+0x17c>)
 8003382:	681b      	ldr	r3, [r3, #0]
 8003384:	4a3b      	ldr	r2, [pc, #236]	; (8003474 <init_i2s2+0x17c>)
 8003386:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 800338a:	6013      	str	r3, [r2, #0]
    GPIOB->OSPEEDR |= (3 << 24);	// Pin very high speed mode
 800338c:	4b39      	ldr	r3, [pc, #228]	; (8003474 <init_i2s2+0x17c>)
 800338e:	689b      	ldr	r3, [r3, #8]
 8003390:	4a38      	ldr	r2, [pc, #224]	; (8003474 <init_i2s2+0x17c>)
 8003392:	f043 7340 	orr.w	r3, r3, #50331648	; 0x3000000
 8003396:	6093      	str	r3, [r2, #8]
    GPIOB->AFR[1]  |= (5 << 16);	// Manage alternate function
 8003398:	4b36      	ldr	r3, [pc, #216]	; (8003474 <init_i2s2+0x17c>)
 800339a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800339c:	4a35      	ldr	r2, [pc, #212]	; (8003474 <init_i2s2+0x17c>)
 800339e:	f443 23a0 	orr.w	r3, r3, #327680	; 0x50000
 80033a2:	6253      	str	r3, [r2, #36]	; 0x24

    // enable PLL I2S for 48khz Fs (768k bit rate)
    RCC->PLLI2SCFGR |= (258 << 6); // N value = 258
 80033a4:	4b31      	ldr	r3, [pc, #196]	; (800346c <init_i2s2+0x174>)
 80033a6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80033aa:	4a30      	ldr	r2, [pc, #192]	; (800346c <init_i2s2+0x174>)
 80033ac:	f443 4381 	orr.w	r3, r3, #16512	; 0x4080
 80033b0:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    RCC->PLLI2SCFGR |= (3 << 28); // R value = 3
 80033b4:	4b2d      	ldr	r3, [pc, #180]	; (800346c <init_i2s2+0x174>)
 80033b6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80033ba:	4a2c      	ldr	r2, [pc, #176]	; (800346c <init_i2s2+0x174>)
 80033bc:	f043 5340 	orr.w	r3, r3, #805306368	; 0x30000000
 80033c0:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    RCC->CR |= (1 << 26); // enable PLLI2SON
 80033c4:	4b29      	ldr	r3, [pc, #164]	; (800346c <init_i2s2+0x174>)
 80033c6:	681b      	ldr	r3, [r3, #0]
 80033c8:	4a28      	ldr	r2, [pc, #160]	; (800346c <init_i2s2+0x174>)
 80033ca:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 80033ce:	6013      	str	r3, [r2, #0]
    while(!(RCC->CR & (1 << 27))); // wait until PLLI2SRDY
 80033d0:	bf00      	nop
 80033d2:	4b26      	ldr	r3, [pc, #152]	; (800346c <init_i2s2+0x174>)
 80033d4:	681b      	ldr	r3, [r3, #0]
 80033d6:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80033da:	2b00      	cmp	r3, #0
 80033dc:	d0f9      	beq.n	80033d2 <init_i2s2+0xda>

    // Configure I2S
    SPI2->I2SCFGR = 0; // reset registers
 80033de:	4b26      	ldr	r3, [pc, #152]	; (8003478 <init_i2s2+0x180>)
 80033e0:	2200      	movs	r2, #0
 80033e2:	61da      	str	r2, [r3, #28]
    SPI2->I2SPR   = 0; // reset registers
 80033e4:	4b24      	ldr	r3, [pc, #144]	; (8003478 <init_i2s2+0x180>)
 80033e6:	2200      	movs	r2, #0
 80033e8:	621a      	str	r2, [r3, #32]

    SPI2->I2SPR |= (3 << 0); // Linear prescaler (I2SDIV)
 80033ea:	4b23      	ldr	r3, [pc, #140]	; (8003478 <init_i2s2+0x180>)
 80033ec:	6a1b      	ldr	r3, [r3, #32]
 80033ee:	4a22      	ldr	r2, [pc, #136]	; (8003478 <init_i2s2+0x180>)
 80033f0:	f043 0303 	orr.w	r3, r3, #3
 80033f4:	6213      	str	r3, [r2, #32]
    SPI2->I2SPR |= (1 << 8); // Odd factor for the prescaler (I2SODD)
 80033f6:	4b20      	ldr	r3, [pc, #128]	; (8003478 <init_i2s2+0x180>)
 80033f8:	6a1b      	ldr	r3, [r3, #32]
 80033fa:	4a1f      	ldr	r2, [pc, #124]	; (8003478 <init_i2s2+0x180>)
 80033fc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003400:	6213      	str	r3, [r2, #32]
    SPI2->I2SPR |= (1 << 9); // Master clock output enable
 8003402:	4b1d      	ldr	r3, [pc, #116]	; (8003478 <init_i2s2+0x180>)
 8003404:	6a1b      	ldr	r3, [r3, #32]
 8003406:	4a1c      	ldr	r2, [pc, #112]	; (8003478 <init_i2s2+0x180>)
 8003408:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800340c:	6213      	str	r3, [r2, #32]

    SPI2->I2SCFGR |= (1 << 11); // I2S mode is selected
 800340e:	4b1a      	ldr	r3, [pc, #104]	; (8003478 <init_i2s2+0x180>)
 8003410:	69db      	ldr	r3, [r3, #28]
 8003412:	4a19      	ldr	r2, [pc, #100]	; (8003478 <init_i2s2+0x180>)
 8003414:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8003418:	61d3      	str	r3, [r2, #28]
    SPI2->I2SCFGR |= (0 << 4);  // I2S standard select, 00 Philips standard, 11 PCM standard
 800341a:	4b17      	ldr	r3, [pc, #92]	; (8003478 <init_i2s2+0x180>)
 800341c:	4a16      	ldr	r2, [pc, #88]	; (8003478 <init_i2s2+0x180>)
 800341e:	69db      	ldr	r3, [r3, #28]
 8003420:	61d3      	str	r3, [r2, #28]
    SPI2->I2SCFGR |= (0 << 1);	// I2S data length 16bit
 8003422:	4b15      	ldr	r3, [pc, #84]	; (8003478 <init_i2s2+0x180>)
 8003424:	4a14      	ldr	r2, [pc, #80]	; (8003478 <init_i2s2+0x180>)
 8003426:	69db      	ldr	r3, [r3, #28]
 8003428:	61d3      	str	r3, [r2, #28]
    SPI2->I2SCFGR |= (0 << 0);  // Channel length, 0 - 16bit, 1 - 32bit
 800342a:	4b13      	ldr	r3, [pc, #76]	; (8003478 <init_i2s2+0x180>)
 800342c:	4a12      	ldr	r2, [pc, #72]	; (8003478 <init_i2s2+0x180>)
 800342e:	69db      	ldr	r3, [r3, #28]
 8003430:	61d3      	str	r3, [r2, #28]
    SPI2->I2SCFGR |= (3 << 8);  // I2S config mode, 11 - Master receive
 8003432:	4b11      	ldr	r3, [pc, #68]	; (8003478 <init_i2s2+0x180>)
 8003434:	69db      	ldr	r3, [r3, #28]
 8003436:	4a10      	ldr	r2, [pc, #64]	; (8003478 <init_i2s2+0x180>)
 8003438:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 800343c:	61d3      	str	r3, [r2, #28]
    SPI2->I2SCFGR |= (1 << 3);  // Steady state clock polarity, 0 - low, 1 - high
 800343e:	4b0e      	ldr	r3, [pc, #56]	; (8003478 <init_i2s2+0x180>)
 8003440:	69db      	ldr	r3, [r3, #28]
 8003442:	4a0d      	ldr	r2, [pc, #52]	; (8003478 <init_i2s2+0x180>)
 8003444:	f043 0308 	orr.w	r3, r3, #8
 8003448:	61d3      	str	r3, [r2, #28]

    //I2S interrupt enable
    SPI2->CR2 |= (1 << 6);	// Enable interrupt
 800344a:	4b0b      	ldr	r3, [pc, #44]	; (8003478 <init_i2s2+0x180>)
 800344c:	685b      	ldr	r3, [r3, #4]
 800344e:	4a0a      	ldr	r2, [pc, #40]	; (8003478 <init_i2s2+0x180>)
 8003450:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003454:	6053      	str	r3, [r2, #4]
//  SPI2->CR2 |= (1 << 5);	// Enable error interrupt (no error int. handler?)
    NVIC_EnableIRQ(SPI2_IRQn);
 8003456:	2024      	movs	r0, #36	; 0x24
 8003458:	f7ff fc22 	bl	8002ca0 <__NVIC_EnableIRQ>

    SPI2->I2SCFGR |= (1 << 10); // I2S enabled(mic enabled and starts data transfer)
 800345c:	4b06      	ldr	r3, [pc, #24]	; (8003478 <init_i2s2+0x180>)
 800345e:	69db      	ldr	r3, [r3, #28]
 8003460:	4a05      	ldr	r2, [pc, #20]	; (8003478 <init_i2s2+0x180>)
 8003462:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8003466:	61d3      	str	r3, [r2, #28]
}
 8003468:	bf00      	nop
 800346a:	bd80      	pop	{r7, pc}
 800346c:	40023800 	.word	0x40023800
 8003470:	40020800 	.word	0x40020800
 8003474:	40020400 	.word	0x40020400
 8003478:	40003800 	.word	0x40003800

0800347c <SPI2_IRQHandler>:

///////////////////////////////////////////////////////////////////////////////////

void SPI2_IRQHandler(void)		// Interrupt for collecting microphone data
{
 800347c:	b480      	push	{r7}
 800347e:	b083      	sub	sp, #12
 8003480:	af00      	add	r7, sp, #0

		buffer1_i2s2[i] = SPI2->DR;		// Mic data loaded to buffer
 8003482:	4b15      	ldr	r3, [pc, #84]	; (80034d8 <SPI2_IRQHandler+0x5c>)
 8003484:	68da      	ldr	r2, [r3, #12]
 8003486:	4b15      	ldr	r3, [pc, #84]	; (80034dc <SPI2_IRQHandler+0x60>)
 8003488:	681b      	ldr	r3, [r3, #0]
 800348a:	b211      	sxth	r1, r2
 800348c:	4a14      	ldr	r2, [pc, #80]	; (80034e0 <SPI2_IRQHandler+0x64>)
 800348e:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
		i++;
 8003492:	4b12      	ldr	r3, [pc, #72]	; (80034dc <SPI2_IRQHandler+0x60>)
 8003494:	681b      	ldr	r3, [r3, #0]
 8003496:	3301      	adds	r3, #1
 8003498:	4a10      	ldr	r2, [pc, #64]	; (80034dc <SPI2_IRQHandler+0x60>)
 800349a:	6013      	str	r3, [r2, #0]
		if(i == 49){
 800349c:	4b0f      	ldr	r3, [pc, #60]	; (80034dc <SPI2_IRQHandler+0x60>)
 800349e:	681b      	ldr	r3, [r3, #0]
 80034a0:	2b31      	cmp	r3, #49	; 0x31
 80034a2:	d113      	bne.n	80034cc <SPI2_IRQHandler+0x50>
			for(int p=0; p < 49; p++){
 80034a4:	2300      	movs	r3, #0
 80034a6:	607b      	str	r3, [r7, #4]
 80034a8:	e00a      	b.n	80034c0 <SPI2_IRQHandler+0x44>
				buffer2_i2s2[p] = buffer1_i2s2[p];
 80034aa:	4a0d      	ldr	r2, [pc, #52]	; (80034e0 <SPI2_IRQHandler+0x64>)
 80034ac:	687b      	ldr	r3, [r7, #4]
 80034ae:	f932 1013 	ldrsh.w	r1, [r2, r3, lsl #1]
 80034b2:	4a0c      	ldr	r2, [pc, #48]	; (80034e4 <SPI2_IRQHandler+0x68>)
 80034b4:	687b      	ldr	r3, [r7, #4]
 80034b6:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
			for(int p=0; p < 49; p++){
 80034ba:	687b      	ldr	r3, [r7, #4]
 80034bc:	3301      	adds	r3, #1
 80034be:	607b      	str	r3, [r7, #4]
 80034c0:	687b      	ldr	r3, [r7, #4]
 80034c2:	2b30      	cmp	r3, #48	; 0x30
 80034c4:	ddf1      	ble.n	80034aa <SPI2_IRQHandler+0x2e>
			}
			i=0;
 80034c6:	4b05      	ldr	r3, [pc, #20]	; (80034dc <SPI2_IRQHandler+0x60>)
 80034c8:	2200      	movs	r2, #0
 80034ca:	601a      	str	r2, [r3, #0]
//			flag_pdm = 1;				// Activate PDM to PCM function
		}

}
 80034cc:	bf00      	nop
 80034ce:	370c      	adds	r7, #12
 80034d0:	46bd      	mov	sp, r7
 80034d2:	bc80      	pop	{r7}
 80034d4:	4770      	bx	lr
 80034d6:	bf00      	nop
 80034d8:	40003800 	.word	0x40003800
 80034dc:	20000494 	.word	0x20000494
 80034e0:	200004b4 	.word	0x200004b4
 80034e4:	2000051c 	.word	0x2000051c

080034e8 <init_i2s3>:

///////////////////////////////////////////////////////////////////////////////////

void init_i2s3() {		// DAC
 80034e8:	b480      	push	{r7}
 80034ea:	af00      	add	r7, sp, #0

    // Setup pins PC7 - MCLK, PC10 - SCK, PC12 - SD, PA4 - WS
    RCC->AHB1ENR |= (RCC_AHB1ENR_GPIOAEN | RCC_AHB1ENR_GPIOCEN); // enable GPIOA and GPIOC clocks
 80034ec:	4b5b      	ldr	r3, [pc, #364]	; (800365c <init_i2s3+0x174>)
 80034ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80034f0:	4a5a      	ldr	r2, [pc, #360]	; (800365c <init_i2s3+0x174>)
 80034f2:	f043 0305 	orr.w	r3, r3, #5
 80034f6:	6313      	str	r3, [r2, #48]	; 0x30
    RCC->APB1ENR |= RCC_APB1ENR_SPI3EN; // enable SPI3 clock
 80034f8:	4b58      	ldr	r3, [pc, #352]	; (800365c <init_i2s3+0x174>)
 80034fa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80034fc:	4a57      	ldr	r2, [pc, #348]	; (800365c <init_i2s3+0x174>)
 80034fe:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8003502:	6413      	str	r3, [r2, #64]	; 0x40
    // PC7 alternate function mode MCLK
    GPIOC->MODER   &= ~(3U << 7*2);
 8003504:	4b56      	ldr	r3, [pc, #344]	; (8003660 <init_i2s3+0x178>)
 8003506:	681b      	ldr	r3, [r3, #0]
 8003508:	4a55      	ldr	r2, [pc, #340]	; (8003660 <init_i2s3+0x178>)
 800350a:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 800350e:	6013      	str	r3, [r2, #0]
    GPIOC->MODER   |= (2 << 7*2);		// Pin altenate function mode
 8003510:	4b53      	ldr	r3, [pc, #332]	; (8003660 <init_i2s3+0x178>)
 8003512:	681b      	ldr	r3, [r3, #0]
 8003514:	4a52      	ldr	r2, [pc, #328]	; (8003660 <init_i2s3+0x178>)
 8003516:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800351a:	6013      	str	r3, [r2, #0]
    GPIOC->OSPEEDR |= (3 << 7*2);		// Pin very high speed mode
 800351c:	4b50      	ldr	r3, [pc, #320]	; (8003660 <init_i2s3+0x178>)
 800351e:	689b      	ldr	r3, [r3, #8]
 8003520:	4a4f      	ldr	r2, [pc, #316]	; (8003660 <init_i2s3+0x178>)
 8003522:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8003526:	6093      	str	r3, [r2, #8]
    GPIOC->AFR[0]  |= (6 << 7*4);		// Manage alternate function
 8003528:	4b4d      	ldr	r3, [pc, #308]	; (8003660 <init_i2s3+0x178>)
 800352a:	6a1b      	ldr	r3, [r3, #32]
 800352c:	4a4c      	ldr	r2, [pc, #304]	; (8003660 <init_i2s3+0x178>)
 800352e:	f043 43c0 	orr.w	r3, r3, #1610612736	; 0x60000000
 8003532:	6213      	str	r3, [r2, #32]
    // PC10 alternate function mode SCL
    GPIOC->MODER   &= ~(3U << 10*2);
 8003534:	4b4a      	ldr	r3, [pc, #296]	; (8003660 <init_i2s3+0x178>)
 8003536:	681b      	ldr	r3, [r3, #0]
 8003538:	4a49      	ldr	r2, [pc, #292]	; (8003660 <init_i2s3+0x178>)
 800353a:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 800353e:	6013      	str	r3, [r2, #0]
    GPIOC->MODER   |= (2 << 10*2);		// Pin altenate function mode
 8003540:	4b47      	ldr	r3, [pc, #284]	; (8003660 <init_i2s3+0x178>)
 8003542:	681b      	ldr	r3, [r3, #0]
 8003544:	4a46      	ldr	r2, [pc, #280]	; (8003660 <init_i2s3+0x178>)
 8003546:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800354a:	6013      	str	r3, [r2, #0]
    GPIOC->OSPEEDR |= (3 << 10*2);		// Pin very high speed mode
 800354c:	4b44      	ldr	r3, [pc, #272]	; (8003660 <init_i2s3+0x178>)
 800354e:	689b      	ldr	r3, [r3, #8]
 8003550:	4a43      	ldr	r2, [pc, #268]	; (8003660 <init_i2s3+0x178>)
 8003552:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 8003556:	6093      	str	r3, [r2, #8]
    GPIOC->AFR[1]  |= (6 << (10-8)*4);	// Manage alternate function
 8003558:	4b41      	ldr	r3, [pc, #260]	; (8003660 <init_i2s3+0x178>)
 800355a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800355c:	4a40      	ldr	r2, [pc, #256]	; (8003660 <init_i2s3+0x178>)
 800355e:	f443 63c0 	orr.w	r3, r3, #1536	; 0x600
 8003562:	6253      	str	r3, [r2, #36]	; 0x24
    // PC12 alternate function mode SD
    GPIOC->MODER   &= ~(3U << 12*2);
 8003564:	4b3e      	ldr	r3, [pc, #248]	; (8003660 <init_i2s3+0x178>)
 8003566:	681b      	ldr	r3, [r3, #0]
 8003568:	4a3d      	ldr	r2, [pc, #244]	; (8003660 <init_i2s3+0x178>)
 800356a:	f023 7340 	bic.w	r3, r3, #50331648	; 0x3000000
 800356e:	6013      	str	r3, [r2, #0]
    GPIOC->MODER   |= (2 << 12*2);		// Pin altenate function mode
 8003570:	4b3b      	ldr	r3, [pc, #236]	; (8003660 <init_i2s3+0x178>)
 8003572:	681b      	ldr	r3, [r3, #0]
 8003574:	4a3a      	ldr	r2, [pc, #232]	; (8003660 <init_i2s3+0x178>)
 8003576:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 800357a:	6013      	str	r3, [r2, #0]
    GPIOC->OSPEEDR |= (3 << 12*2);		// Pin very high speed mode
 800357c:	4b38      	ldr	r3, [pc, #224]	; (8003660 <init_i2s3+0x178>)
 800357e:	689b      	ldr	r3, [r3, #8]
 8003580:	4a37      	ldr	r2, [pc, #220]	; (8003660 <init_i2s3+0x178>)
 8003582:	f043 7340 	orr.w	r3, r3, #50331648	; 0x3000000
 8003586:	6093      	str	r3, [r2, #8]
    GPIOC->AFR[1]  |= (6 << (12-8)*4);	// Manage alternate function
 8003588:	4b35      	ldr	r3, [pc, #212]	; (8003660 <init_i2s3+0x178>)
 800358a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800358c:	4a34      	ldr	r2, [pc, #208]	; (8003660 <init_i2s3+0x178>)
 800358e:	f443 23c0 	orr.w	r3, r3, #393216	; 0x60000
 8003592:	6253      	str	r3, [r2, #36]	; 0x24
    // PA4 alternate function mode WS
    GPIOA->MODER   &= ~(3U << 4*2);
 8003594:	4b33      	ldr	r3, [pc, #204]	; (8003664 <init_i2s3+0x17c>)
 8003596:	681b      	ldr	r3, [r3, #0]
 8003598:	4a32      	ldr	r2, [pc, #200]	; (8003664 <init_i2s3+0x17c>)
 800359a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800359e:	6013      	str	r3, [r2, #0]
    GPIOA->MODER   |= (2 << 4*2);		// Pin altenate function mode
 80035a0:	4b30      	ldr	r3, [pc, #192]	; (8003664 <init_i2s3+0x17c>)
 80035a2:	681b      	ldr	r3, [r3, #0]
 80035a4:	4a2f      	ldr	r2, [pc, #188]	; (8003664 <init_i2s3+0x17c>)
 80035a6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80035aa:	6013      	str	r3, [r2, #0]
    GPIOA->OSPEEDR |= (3 << 4*2);		// Pin very high speed mode
 80035ac:	4b2d      	ldr	r3, [pc, #180]	; (8003664 <init_i2s3+0x17c>)
 80035ae:	689b      	ldr	r3, [r3, #8]
 80035b0:	4a2c      	ldr	r2, [pc, #176]	; (8003664 <init_i2s3+0x17c>)
 80035b2:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 80035b6:	6093      	str	r3, [r2, #8]
    GPIOA->AFR[0]  |= (6 << 4*4);		// Manage alternate function
 80035b8:	4b2a      	ldr	r3, [pc, #168]	; (8003664 <init_i2s3+0x17c>)
 80035ba:	6a1b      	ldr	r3, [r3, #32]
 80035bc:	4a29      	ldr	r2, [pc, #164]	; (8003664 <init_i2s3+0x17c>)
 80035be:	f443 23c0 	orr.w	r3, r3, #393216	; 0x60000
 80035c2:	6213      	str	r3, [r2, #32]

    // enable PLL I2S for 48khz Fs
    RCC->PLLI2SCFGR |= (258 << 6); // N value = 258
 80035c4:	4b25      	ldr	r3, [pc, #148]	; (800365c <init_i2s3+0x174>)
 80035c6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80035ca:	4a24      	ldr	r2, [pc, #144]	; (800365c <init_i2s3+0x174>)
 80035cc:	f443 4381 	orr.w	r3, r3, #16512	; 0x4080
 80035d0:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    RCC->PLLI2SCFGR |= (3 << 28); // R value = 3
 80035d4:	4b21      	ldr	r3, [pc, #132]	; (800365c <init_i2s3+0x174>)
 80035d6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80035da:	4a20      	ldr	r2, [pc, #128]	; (800365c <init_i2s3+0x174>)
 80035dc:	f043 5340 	orr.w	r3, r3, #805306368	; 0x30000000
 80035e0:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    RCC->CR |= (1 << 26); // enable PLLI2SON
 80035e4:	4b1d      	ldr	r3, [pc, #116]	; (800365c <init_i2s3+0x174>)
 80035e6:	681b      	ldr	r3, [r3, #0]
 80035e8:	4a1c      	ldr	r2, [pc, #112]	; (800365c <init_i2s3+0x174>)
 80035ea:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 80035ee:	6013      	str	r3, [r2, #0]
    while(!(RCC->CR & (1 << 27))); // wait until PLLI2SRDY
 80035f0:	bf00      	nop
 80035f2:	4b1a      	ldr	r3, [pc, #104]	; (800365c <init_i2s3+0x174>)
 80035f4:	681b      	ldr	r3, [r3, #0]
 80035f6:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80035fa:	2b00      	cmp	r3, #0
 80035fc:	d0f9      	beq.n	80035f2 <init_i2s3+0x10a>

    // Configure I2S
    SPI3->I2SCFGR = 0; // reset registers
 80035fe:	4b1a      	ldr	r3, [pc, #104]	; (8003668 <init_i2s3+0x180>)
 8003600:	2200      	movs	r2, #0
 8003602:	61da      	str	r2, [r3, #28]
    SPI3->I2SPR   = 0; // reset registers
 8003604:	4b18      	ldr	r3, [pc, #96]	; (8003668 <init_i2s3+0x180>)
 8003606:	2200      	movs	r2, #0
 8003608:	621a      	str	r2, [r3, #32]

    SPI3->I2SCFGR |= (1 << 11); // I2S mode is selected
 800360a:	4b17      	ldr	r3, [pc, #92]	; (8003668 <init_i2s3+0x180>)
 800360c:	69db      	ldr	r3, [r3, #28]
 800360e:	4a16      	ldr	r2, [pc, #88]	; (8003668 <init_i2s3+0x180>)
 8003610:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8003614:	61d3      	str	r3, [r2, #28]
    SPI3->I2SCFGR |= (3 << 8);  // I2S config mode, 11 - Master Transmit
 8003616:	4b14      	ldr	r3, [pc, #80]	; (8003668 <init_i2s3+0x180>)
 8003618:	69db      	ldr	r3, [r3, #28]
 800361a:	4a13      	ldr	r2, [pc, #76]	; (8003668 <init_i2s3+0x180>)
 800361c:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 8003620:	61d3      	str	r3, [r2, #28]
    //SPI2->I2SCFGR |= (0x0 << 7);  // PCM frame sync, 0 - short frame
    //SPI2->I2SCFGR |= (0x0 << 4);  // I2S standard select, 00 Philips standard, 11 PCM standard
    //SPI3->I2SCFGR |= (1 << 3);  // Steady state clock polarity, 0 - low, 1 - high
    //SPI2->I2SCFGR |= (0x0 << 0);  // Channel length, 0 - 16bit, 1 - 32bit

    SPI3->I2SPR |= (1 << 9); // Master clock output enable
 8003622:	4b11      	ldr	r3, [pc, #68]	; (8003668 <init_i2s3+0x180>)
 8003624:	6a1b      	ldr	r3, [r3, #32]
 8003626:	4a10      	ldr	r2, [pc, #64]	; (8003668 <init_i2s3+0x180>)
 8003628:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800362c:	6213      	str	r3, [r2, #32]
    // 48 Khz
    SPI3->I2SPR |= (1 << 8); // Odd factor for the prescaler (I2SODD)
 800362e:	4b0e      	ldr	r3, [pc, #56]	; (8003668 <init_i2s3+0x180>)
 8003630:	6a1b      	ldr	r3, [r3, #32]
 8003632:	4a0d      	ldr	r2, [pc, #52]	; (8003668 <init_i2s3+0x180>)
 8003634:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003638:	6213      	str	r3, [r2, #32]
    SPI3->I2SPR |= (3 << 0); // Linear prescaler (I2SDIV)
 800363a:	4b0b      	ldr	r3, [pc, #44]	; (8003668 <init_i2s3+0x180>)
 800363c:	6a1b      	ldr	r3, [r3, #32]
 800363e:	4a0a      	ldr	r2, [pc, #40]	; (8003668 <init_i2s3+0x180>)
 8003640:	f043 0303 	orr.w	r3, r3, #3
 8003644:	6213      	str	r3, [r2, #32]

    SPI3->I2SCFGR |= (1 << 10); // I2S enabled
 8003646:	4b08      	ldr	r3, [pc, #32]	; (8003668 <init_i2s3+0x180>)
 8003648:	69db      	ldr	r3, [r3, #28]
 800364a:	4a07      	ldr	r2, [pc, #28]	; (8003668 <init_i2s3+0x180>)
 800364c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8003650:	61d3      	str	r3, [r2, #28]
}
 8003652:	bf00      	nop
 8003654:	46bd      	mov	sp, r7
 8003656:	bc80      	pop	{r7}
 8003658:	4770      	bx	lr
 800365a:	bf00      	nop
 800365c:	40023800 	.word	0x40023800
 8003660:	40020800 	.word	0x40020800
 8003664:	40020000 	.word	0x40020000
 8003668:	40003c00 	.word	0x40003c00

0800366c <init_TIM>:

///////////////////////////////////////////////////////////////////////////////////

void init_TIM()
{
 800366c:	b580      	push	{r7, lr}
 800366e:	af00      	add	r7, sp, #0
	RCC->APB1ENR |= (1 << 0);	// TIM2 clock enable
 8003670:	4b12      	ldr	r3, [pc, #72]	; (80036bc <init_TIM+0x50>)
 8003672:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003674:	4a11      	ldr	r2, [pc, #68]	; (80036bc <init_TIM+0x50>)
 8003676:	f043 0301 	orr.w	r3, r3, #1
 800367a:	6413      	str	r3, [r2, #64]	; 0x40
	//   thus 168M/4 * 2 = 84Mhz
	// set prescaler to 83999
	//   it will increment counter every prescalar cycles
	// fCK_PSC / (PSC[15:0] + 1)
	// 84 Mhz / 8399 + 1 = 10 khz timer clock speed
	TIM2->PSC = 8399;
 800367c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003680:	f242 02cf 	movw	r2, #8399	; 0x20cf
 8003684:	629a      	str	r2, [r3, #40]	; 0x28
	// Set the auto-reload value to 10000
	//   which should give 1 second timer interrupts
	TIM2->ARR = 60000; // 6s
 8003686:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800368a:	f64e 2260 	movw	r2, #60000	; 0xea60
 800368e:	62da      	str	r2, [r3, #44]	; 0x2c
	// Update Interrupt Enable
	TIM2->DIER |= (1 << 0);
 8003690:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003694:	68db      	ldr	r3, [r3, #12]
 8003696:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800369a:	f043 0301 	orr.w	r3, r3, #1
 800369e:	60d3      	str	r3, [r2, #12]
	// enable TIM2 IRQ from NVIC
	NVIC_EnableIRQ(TIM2_IRQn);
 80036a0:	201c      	movs	r0, #28
 80036a2:	f7ff fafd 	bl	8002ca0 <__NVIC_EnableIRQ>
	// Enable Timer 2 module (CEN, bit0)
	TIM2->CR1 |= (1 << 0);
 80036a6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80036aa:	681b      	ldr	r3, [r3, #0]
 80036ac:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80036b0:	f043 0301 	orr.w	r3, r3, #1
 80036b4:	6013      	str	r3, [r2, #0]
}
 80036b6:	bf00      	nop
 80036b8:	bd80      	pop	{r7, pc}
 80036ba:	bf00      	nop
 80036bc:	40023800 	.word	0x40023800

080036c0 <TIM2_IRQHandler>:

///////////////////////////////////////////////////////////////////////////////////

void TIM2_IRQHandler(void)		//6sec between interrupts
{
 80036c0:	b580      	push	{r7, lr}
 80036c2:	af00      	add	r7, sp, #0
    TIM2->SR = (uint16_t)(~(1 << 0));
 80036c4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80036c8:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80036cc:	611a      	str	r2, [r3, #16]

    if((Button_pos == 0) & (q == 10)){				// 1min
 80036ce:	4b2b      	ldr	r3, [pc, #172]	; (800377c <TIM2_IRQHandler+0xbc>)
 80036d0:	781b      	ldrb	r3, [r3, #0]
 80036d2:	b2db      	uxtb	r3, r3
 80036d4:	2b00      	cmp	r3, #0
 80036d6:	bf0c      	ite	eq
 80036d8:	2301      	moveq	r3, #1
 80036da:	2300      	movne	r3, #0
 80036dc:	b2da      	uxtb	r2, r3
 80036de:	4b28      	ldr	r3, [pc, #160]	; (8003780 <TIM2_IRQHandler+0xc0>)
 80036e0:	781b      	ldrb	r3, [r3, #0]
 80036e2:	b2db      	uxtb	r3, r3
 80036e4:	2b0a      	cmp	r3, #10
 80036e6:	bf0c      	ite	eq
 80036e8:	2301      	moveq	r3, #1
 80036ea:	2300      	movne	r3, #0
 80036ec:	b2db      	uxtb	r3, r3
 80036ee:	4013      	ands	r3, r2
 80036f0:	b2db      	uxtb	r3, r3
 80036f2:	2b00      	cmp	r3, #0
 80036f4:	d00b      	beq.n	800370e <TIM2_IRQHandler+0x4e>
    	q = 0;
 80036f6:	4b22      	ldr	r3, [pc, #136]	; (8003780 <TIM2_IRQHandler+0xc0>)
 80036f8:	2200      	movs	r2, #0
 80036fa:	701a      	strb	r2, [r3, #0]
    	flag_pdm = 0;								// deactivate PDM to PCM filter
 80036fc:	4b21      	ldr	r3, [pc, #132]	; (8003784 <TIM2_IRQHandler+0xc4>)
 80036fe:	2200      	movs	r2, #0
 8003700:	601a      	str	r2, [r3, #0]
    	SPI2->I2SCFGR &= (0 << 10); 				// I2S2 disabled(mic disabled and data transfer stops)
 8003702:	4b21      	ldr	r3, [pc, #132]	; (8003788 <TIM2_IRQHandler+0xc8>)
 8003704:	69db      	ldr	r3, [r3, #28]
 8003706:	4b20      	ldr	r3, [pc, #128]	; (8003788 <TIM2_IRQHandler+0xc8>)
 8003708:	2200      	movs	r2, #0
 800370a:	61da      	str	r2, [r3, #28]
    }

    else{
    	q++;
    }
}
 800370c:	e033      	b.n	8003776 <TIM2_IRQHandler+0xb6>
    else if((Button_pos == 1) & (q == 100) & (flag_tilt == 0)){		//10min
 800370e:	4b1b      	ldr	r3, [pc, #108]	; (800377c <TIM2_IRQHandler+0xbc>)
 8003710:	781b      	ldrb	r3, [r3, #0]
 8003712:	b2db      	uxtb	r3, r3
 8003714:	2b01      	cmp	r3, #1
 8003716:	bf0c      	ite	eq
 8003718:	2301      	moveq	r3, #1
 800371a:	2300      	movne	r3, #0
 800371c:	b2da      	uxtb	r2, r3
 800371e:	4b18      	ldr	r3, [pc, #96]	; (8003780 <TIM2_IRQHandler+0xc0>)
 8003720:	781b      	ldrb	r3, [r3, #0]
 8003722:	b2db      	uxtb	r3, r3
 8003724:	2b64      	cmp	r3, #100	; 0x64
 8003726:	bf0c      	ite	eq
 8003728:	2301      	moveq	r3, #1
 800372a:	2300      	movne	r3, #0
 800372c:	b2db      	uxtb	r3, r3
 800372e:	4013      	ands	r3, r2
 8003730:	b2db      	uxtb	r3, r3
 8003732:	461a      	mov	r2, r3
 8003734:	4b15      	ldr	r3, [pc, #84]	; (800378c <TIM2_IRQHandler+0xcc>)
 8003736:	681b      	ldr	r3, [r3, #0]
 8003738:	2b00      	cmp	r3, #0
 800373a:	bf0c      	ite	eq
 800373c:	2301      	moveq	r3, #1
 800373e:	2300      	movne	r3, #0
 8003740:	b2db      	uxtb	r3, r3
 8003742:	4013      	ands	r3, r2
 8003744:	2b00      	cmp	r3, #0
 8003746:	d00f      	beq.n	8003768 <TIM2_IRQHandler+0xa8>
    	q = 0;
 8003748:	4b0d      	ldr	r3, [pc, #52]	; (8003780 <TIM2_IRQHandler+0xc0>)
 800374a:	2200      	movs	r2, #0
 800374c:	701a      	strb	r2, [r3, #0]
    	flag_mode2 = 0;								// deactivate gyroscope function
 800374e:	4b10      	ldr	r3, [pc, #64]	; (8003790 <TIM2_IRQHandler+0xd0>)
 8003750:	2200      	movs	r2, #0
 8003752:	601a      	str	r2, [r3, #0]
    	i2c_write(CS43L22_REG_BEEP_TONE_CFG, 0x00); // turn off the beep(silence)
 8003754:	2100      	movs	r1, #0
 8003756:	201e      	movs	r0, #30
 8003758:	f7ff fb8e 	bl	8002e78 <i2c_write>
    	SPI1->CR1 &= (0 << 6);						// SPI1 disabled(Accelerometer data transfer stops)
 800375c:	4b0d      	ldr	r3, [pc, #52]	; (8003794 <TIM2_IRQHandler+0xd4>)
 800375e:	681b      	ldr	r3, [r3, #0]
 8003760:	4b0c      	ldr	r3, [pc, #48]	; (8003794 <TIM2_IRQHandler+0xd4>)
 8003762:	2200      	movs	r2, #0
 8003764:	601a      	str	r2, [r3, #0]
}
 8003766:	e006      	b.n	8003776 <TIM2_IRQHandler+0xb6>
    	q++;
 8003768:	4b05      	ldr	r3, [pc, #20]	; (8003780 <TIM2_IRQHandler+0xc0>)
 800376a:	781b      	ldrb	r3, [r3, #0]
 800376c:	b2db      	uxtb	r3, r3
 800376e:	3301      	adds	r3, #1
 8003770:	b2da      	uxtb	r2, r3
 8003772:	4b03      	ldr	r3, [pc, #12]	; (8003780 <TIM2_IRQHandler+0xc0>)
 8003774:	701a      	strb	r2, [r3, #0]
}
 8003776:	bf00      	nop
 8003778:	bd80      	pop	{r7, pc}
 800377a:	bf00      	nop
 800377c:	20000405 	.word	0x20000405
 8003780:	20000490 	.word	0x20000490
 8003784:	20000498 	.word	0x20000498
 8003788:	40003800 	.word	0x40003800
 800378c:	200004a4 	.word	0x200004a4
 8003790:	2000049c 	.word	0x2000049c
 8003794:	40013000 	.word	0x40013000

08003798 <init_cs43l22>:

///////////////////////////////////////////////////////////////////////////////////

void init_cs43l22()			// DAC initialization -- i2c
{
 8003798:	b580      	push	{r7, lr}
 800379a:	b082      	sub	sp, #8
 800379c:	af00      	add	r7, sp, #0
	//*******************************
	// setup reset pin for CS43L22 - GPIOD 4
	//*******************************
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIODEN;
 800379e:	4b42      	ldr	r3, [pc, #264]	; (80038a8 <init_cs43l22+0x110>)
 80037a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80037a2:	4a41      	ldr	r2, [pc, #260]	; (80038a8 <init_cs43l22+0x110>)
 80037a4:	f043 0308 	orr.w	r3, r3, #8
 80037a8:	6313      	str	r3, [r2, #48]	; 0x30
	GPIOD->MODER &= ~(3U << 4*2);
 80037aa:	4b40      	ldr	r3, [pc, #256]	; (80038ac <init_cs43l22+0x114>)
 80037ac:	681b      	ldr	r3, [r3, #0]
 80037ae:	4a3f      	ldr	r2, [pc, #252]	; (80038ac <init_cs43l22+0x114>)
 80037b0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80037b4:	6013      	str	r3, [r2, #0]
	GPIOD->MODER |=  (1 << 4*2);
 80037b6:	4b3d      	ldr	r3, [pc, #244]	; (80038ac <init_cs43l22+0x114>)
 80037b8:	681b      	ldr	r3, [r3, #0]
 80037ba:	4a3c      	ldr	r2, [pc, #240]	; (80038ac <init_cs43l22+0x114>)
 80037bc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80037c0:	6013      	str	r3, [r2, #0]
	// activate CS43L22
	GPIOD->ODR   |=  (1 << 4);
 80037c2:	4b3a      	ldr	r3, [pc, #232]	; (80038ac <init_cs43l22+0x114>)
 80037c4:	695b      	ldr	r3, [r3, #20]
 80037c6:	4a39      	ldr	r2, [pc, #228]	; (80038ac <init_cs43l22+0x114>)
 80037c8:	f043 0310 	orr.w	r3, r3, #16
 80037cc:	6153      	str	r3, [r2, #20]

	// read Chip ID - first 5 bits of CHIP_ID_ADDR
	uint8_t ret = i2c_read(CS43L22_REG_ID);
 80037ce:	2001      	movs	r0, #1
 80037d0:	f7ff fb88 	bl	8002ee4 <i2c_read>
 80037d4:	4603      	mov	r3, r0
 80037d6:	71fb      	strb	r3, [r7, #7]

	if ((ret >> 3) != CS43L22_CHIP_ID) {
 80037d8:	79fb      	ldrb	r3, [r7, #7]
 80037da:	08db      	lsrs	r3, r3, #3
 80037dc:	b2db      	uxtb	r3, r3
 80037de:	2b1c      	cmp	r3, #28
 80037e0:	d005      	beq.n	80037ee <init_cs43l22+0x56>
	    GPIOD->ODR |= (1 << 13); // orange led on error
 80037e2:	4b32      	ldr	r3, [pc, #200]	; (80038ac <init_cs43l22+0x114>)
 80037e4:	695b      	ldr	r3, [r3, #20]
 80037e6:	4a31      	ldr	r2, [pc, #196]	; (80038ac <init_cs43l22+0x114>)
 80037e8:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80037ec:	6153      	str	r3, [r2, #20]
	}

    // power off
    i2c_write(CS43L22_REG_POWER_CTL1, CS43L22_PWR_CTRL1_POWER_DOWN);
 80037ee:	2101      	movs	r1, #1
 80037f0:	2002      	movs	r0, #2
 80037f2:	f7ff fb41 	bl	8002e78 <i2c_write>
    // headphones on, speakers off
    i2c_write(CS43L22_REG_POWER_CTL2, 0xAF);
 80037f6:	21af      	movs	r1, #175	; 0xaf
 80037f8:	2004      	movs	r0, #4
 80037fa:	f7ff fb3d 	bl	8002e78 <i2c_write>
    // auto detect speed MCLK/2
    i2c_write(CS43L22_REG_CLOCKING_CTL, 0x81);
 80037fe:	2181      	movs	r1, #129	; 0x81
 8003800:	2005      	movs	r0, #5
 8003802:	f7ff fb39 	bl	8002e78 <i2c_write>
    // slave mode, I2S data format
    i2c_write(CS43L22_REG_INTERFACE_CTL1, 0x04);
 8003806:	2104      	movs	r1, #4
 8003808:	2006      	movs	r0, #6
 800380a:	f7ff fb35 	bl	8002e78 <i2c_write>

    // set volume levels to 50. magic functions from st
    uint8_t convertedvol = VOLUME_CONVERT(50);
 800380e:	237f      	movs	r3, #127	; 0x7f
 8003810:	71bb      	strb	r3, [r7, #6]
    if(convertedvol > 0xE6)
 8003812:	79bb      	ldrb	r3, [r7, #6]
 8003814:	2be6      	cmp	r3, #230	; 0xe6
 8003816:	d90e      	bls.n	8003836 <init_cs43l22+0x9e>
    {
        i2c_write(CS43L22_REG_MASTER_A_VOL, (uint8_t)(convertedvol - 0xE7));
 8003818:	79bb      	ldrb	r3, [r7, #6]
 800381a:	3319      	adds	r3, #25
 800381c:	b2db      	uxtb	r3, r3
 800381e:	4619      	mov	r1, r3
 8003820:	2020      	movs	r0, #32
 8003822:	f7ff fb29 	bl	8002e78 <i2c_write>
        i2c_write(CS43L22_REG_MASTER_B_VOL, (uint8_t)(convertedvol - 0xE7));
 8003826:	79bb      	ldrb	r3, [r7, #6]
 8003828:	3319      	adds	r3, #25
 800382a:	b2db      	uxtb	r3, r3
 800382c:	4619      	mov	r1, r3
 800382e:	2021      	movs	r0, #33	; 0x21
 8003830:	f7ff fb22 	bl	8002e78 <i2c_write>
 8003834:	e00d      	b.n	8003852 <init_cs43l22+0xba>
    }
    else
    {
        i2c_write(CS43L22_REG_MASTER_A_VOL, (uint8_t)(convertedvol + 0x19));
 8003836:	79bb      	ldrb	r3, [r7, #6]
 8003838:	3319      	adds	r3, #25
 800383a:	b2db      	uxtb	r3, r3
 800383c:	4619      	mov	r1, r3
 800383e:	2020      	movs	r0, #32
 8003840:	f7ff fb1a 	bl	8002e78 <i2c_write>
        i2c_write(CS43L22_REG_MASTER_B_VOL, (uint8_t)(convertedvol + 0x19));
 8003844:	79bb      	ldrb	r3, [r7, #6]
 8003846:	3319      	adds	r3, #25
 8003848:	b2db      	uxtb	r3, r3
 800384a:	4619      	mov	r1, r3
 800384c:	2021      	movs	r0, #33	; 0x21
 800384e:	f7ff fb13 	bl	8002e78 <i2c_write>
    }

    // disable the analog soft ramp
    i2c_write(CS43L22_REG_ANALOG_ZC_SR_SET, 0);
 8003852:	2100      	movs	r1, #0
 8003854:	200a      	movs	r0, #10
 8003856:	f7ff fb0f 	bl	8002e78 <i2c_write>
    // disable the digital soft ramp
    i2c_write(CS43L22_REG_MISC_CTL, 0x04);
 800385a:	2104      	movs	r1, #4
 800385c:	200e      	movs	r0, #14
 800385e:	f7ff fb0b 	bl	8002e78 <i2c_write>
    // disable the limiter attack level
    i2c_write(CS43L22_REG_LIMIT_CTL1, 0);
 8003862:	2100      	movs	r1, #0
 8003864:	2027      	movs	r0, #39	; 0x27
 8003866:	f7ff fb07 	bl	8002e78 <i2c_write>
    // bass and treble levels
    i2c_write(CS43L22_REG_TONE_CTL, 0x0F);
 800386a:	210f      	movs	r1, #15
 800386c:	201f      	movs	r0, #31
 800386e:	f7ff fb03 	bl	8002e78 <i2c_write>
    // pcm volume
    i2c_write(CS43L22_REG_PCMA_VOL, 0x0A);
 8003872:	210a      	movs	r1, #10
 8003874:	201a      	movs	r0, #26
 8003876:	f7ff faff 	bl	8002e78 <i2c_write>
    i2c_write(CS43L22_REG_PCMB_VOL, 0x0A);
 800387a:	210a      	movs	r1, #10
 800387c:	201b      	movs	r0, #27
 800387e:	f7ff fafb 	bl	8002e78 <i2c_write>

    // power on
    i2c_write(CS43L22_REG_POWER_CTL1, CS43L22_PWR_CTRL1_POWER_UP);
 8003882:	219e      	movs	r1, #158	; 0x9e
 8003884:	2002      	movs	r0, #2
 8003886:	f7ff faf7 	bl	8002e78 <i2c_write>
    // wait little bit
    for (volatile int i=0; i<500000; i++);
 800388a:	2300      	movs	r3, #0
 800388c:	603b      	str	r3, [r7, #0]
 800388e:	e002      	b.n	8003896 <init_cs43l22+0xfe>
 8003890:	683b      	ldr	r3, [r7, #0]
 8003892:	3301      	adds	r3, #1
 8003894:	603b      	str	r3, [r7, #0]
 8003896:	683b      	ldr	r3, [r7, #0]
 8003898:	4a05      	ldr	r2, [pc, #20]	; (80038b0 <init_cs43l22+0x118>)
 800389a:	4293      	cmp	r3, r2
 800389c:	ddf8      	ble.n	8003890 <init_cs43l22+0xf8>
}
 800389e:	bf00      	nop
 80038a0:	3708      	adds	r7, #8
 80038a2:	46bd      	mov	sp, r7
 80038a4:	bd80      	pop	{r7, pc}
 80038a6:	bf00      	nop
 80038a8:	40023800 	.word	0x40023800
 80038ac:	40020c00 	.word	0x40020c00
 80038b0:	0007a11f 	.word	0x0007a11f

080038b4 <init_LIS3DSH>:

///////////////////////////////////////////////////////////////////////////////////

void init_LIS3DSH()		// Accelerometer
{
 80038b4:	b580      	push	{r7, lr}
 80038b6:	b082      	sub	sp, #8
 80038b8:	af00      	add	r7, sp, #0
	// reboot memory
	spi_write(LIS302_REG_CTRL_REG2, 0x40);
 80038ba:	2140      	movs	r1, #64	; 0x40
 80038bc:	2021      	movs	r0, #33	; 0x21
 80038be:	f7ff fa61 	bl	8002d84 <spi_write>
	// active mode, +/-2g
	spi_write(LIS302_REG_CTRL_REG1, 0x47);
 80038c2:	2147      	movs	r1, #71	; 0x47
 80038c4:	2020      	movs	r0, #32
 80038c6:	f7ff fa5d 	bl	8002d84 <spi_write>
	// wait
	for(int i=0; i<10000000; i++);
 80038ca:	2300      	movs	r3, #0
 80038cc:	607b      	str	r3, [r7, #4]
 80038ce:	e002      	b.n	80038d6 <init_LIS3DSH+0x22>
 80038d0:	687b      	ldr	r3, [r7, #4]
 80038d2:	3301      	adds	r3, #1
 80038d4:	607b      	str	r3, [r7, #4]
 80038d6:	687b      	ldr	r3, [r7, #4]
 80038d8:	4a07      	ldr	r2, [pc, #28]	; (80038f8 <init_LIS3DSH+0x44>)
 80038da:	4293      	cmp	r3, r2
 80038dc:	ddf8      	ble.n	80038d0 <init_LIS3DSH+0x1c>
	// read who am i
	rbuf = (int8_t)spi_read(LIS302_REG_WHO_AM_I);
 80038de:	200f      	movs	r0, #15
 80038e0:	f7ff fa8c 	bl	8002dfc <spi_read>
 80038e4:	4603      	mov	r3, r0
 80038e6:	b25b      	sxtb	r3, r3
 80038e8:	b21a      	sxth	r2, r3
 80038ea:	4b04      	ldr	r3, [pc, #16]	; (80038fc <init_LIS3DSH+0x48>)
 80038ec:	801a      	strh	r2, [r3, #0]
}
 80038ee:	bf00      	nop
 80038f0:	3708      	adds	r7, #8
 80038f2:	46bd      	mov	sp, r7
 80038f4:	bd80      	pop	{r7, pc}
 80038f6:	bf00      	nop
 80038f8:	0098967f 	.word	0x0098967f
 80038fc:	200004b0 	.word	0x200004b0

08003900 <main>:

/*************************************************
* main code starts from here
*************************************************/
int main(void)
{
 8003900:	b590      	push	{r4, r7, lr}
 8003902:	b09f      	sub	sp, #124	; 0x7c
 8003904:	af00      	add	r7, sp, #0
    /* set system clock to 168 Mhz */
	set_sysclk_to_168();
 8003906:	f000 f9e3 	bl	8003cd0 <set_sysclk_to_168>

    //*******************************
    // setup LEDs - GPIOD 12,13,14,15
    //*******************************
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIODEN;
 800390a:	4bb3      	ldr	r3, [pc, #716]	; (8003bd8 <main+0x2d8>)
 800390c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800390e:	4ab2      	ldr	r2, [pc, #712]	; (8003bd8 <main+0x2d8>)
 8003910:	f043 0308 	orr.w	r3, r3, #8
 8003914:	6313      	str	r3, [r2, #48]	; 0x30
    GPIOD->MODER &= ~(0xFFU << 24);
 8003916:	4bb1      	ldr	r3, [pc, #708]	; (8003bdc <main+0x2dc>)
 8003918:	681b      	ldr	r3, [r3, #0]
 800391a:	4ab0      	ldr	r2, [pc, #704]	; (8003bdc <main+0x2dc>)
 800391c:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8003920:	6013      	str	r3, [r2, #0]
    GPIOD->MODER |= (0x55 << 24);
 8003922:	4bae      	ldr	r3, [pc, #696]	; (8003bdc <main+0x2dc>)
 8003924:	681b      	ldr	r3, [r3, #0]
 8003926:	4aad      	ldr	r2, [pc, #692]	; (8003bdc <main+0x2dc>)
 8003928:	f043 43aa 	orr.w	r3, r3, #1426063360	; 0x55000000
 800392c:	6013      	str	r3, [r2, #0]
    GPIOD->ODR    = 0x0000;
 800392e:	4bab      	ldr	r3, [pc, #684]	; (8003bdc <main+0x2dc>)
 8003930:	2200      	movs	r2, #0
 8003932:	615a      	str	r2, [r3, #20]

    //Initialize TIMER
    init_TIM();
 8003934:	f7ff fe9a 	bl	800366c <init_TIM>
    // Initialize external interrupt ( Button )
    init_EXT_int();
 8003938:	f7ff fb1e 	bl	8002f78 <init_EXT_int>

    // Initialize I2S3 -- audio output
    init_i2s3();
 800393c:	f7ff fdd4 	bl	80034e8 <init_i2s3>
    // Initialize I2C -- dac
    init_i2c1();
 8003940:	f7ff fc50 	bl	80031e4 <init_i2c1>
    // Initialize cs43l22 -- mic
    init_cs43l22();
 8003944:	f7ff ff28 	bl	8003798 <init_cs43l22>

    // beep setup
    i2c_write(CS43L22_REG_BEEP_VOL_OFF_TIME, 0x06);		// set beep volume
 8003948:	2106      	movs	r1, #6
 800394a:	201d      	movs	r0, #29
 800394c:	f7ff fa94 	bl	8002e78 <i2c_write>
    uint8_t beep = {0x01};								// beep frequency
 8003950:	2301      	movs	r3, #1
 8003952:	f887 3077 	strb.w	r3, [r7, #119]	; 0x77


    while(1)
    {

    	if(flag_pdm == 1)				// PDM to PCM converter
 8003956:	4ba2      	ldr	r3, [pc, #648]	; (8003be0 <main+0x2e0>)
 8003958:	681b      	ldr	r3, [r3, #0]
 800395a:	2b01      	cmp	r3, #1
 800395c:	d138      	bne.n	80039d0 <main+0xd0>
    	{
    		flag_pdm = 0;
 800395e:	4ba0      	ldr	r3, [pc, #640]	; (8003be0 <main+0x2e0>)
 8003960:	2200      	movs	r2, #0
 8003962:	601a      	str	r2, [r3, #0]
    		GPIOD->ODR |= (1 << 15); 	// blue led
 8003964:	4b9d      	ldr	r3, [pc, #628]	; (8003bdc <main+0x2dc>)
 8003966:	695b      	ldr	r3, [r3, #20]
 8003968:	4a9c      	ldr	r2, [pc, #624]	; (8003bdc <main+0x2dc>)
 800396a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800396e:	6153      	str	r3, [r2, #20]

    		//Initialize Pdm to Pcm library
			RCC->APB1ENR |= (1 << 12);	// Enabled CRC
 8003970:	4b99      	ldr	r3, [pc, #612]	; (8003bd8 <main+0x2d8>)
 8003972:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003974:	4a98      	ldr	r2, [pc, #608]	; (8003bd8 <main+0x2d8>)
 8003976:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800397a:	6413      	str	r3, [r2, #64]	; 0x40
    		CRC->CR |= (1 << 0);		// CRC reset
 800397c:	4b99      	ldr	r3, [pc, #612]	; (8003be4 <main+0x2e4>)
 800397e:	689b      	ldr	r3, [r3, #8]
 8003980:	4a98      	ldr	r2, [pc, #608]	; (8003be4 <main+0x2e4>)
 8003982:	f043 0301 	orr.w	r3, r3, #1
 8003986:	6093      	str	r3, [r2, #8]

   			PDM_Filter_Handler_t PDM1_filter_handler;
   			PDM_Filter_Config_t PDM1_filter_config;

   			PDM1_filter_handler.bit_order = PDM_FILTER_BIT_ORDER_LSB;
 8003988:	2300      	movs	r3, #0
 800398a:	803b      	strh	r3, [r7, #0]
   			PDM1_filter_handler.endianness = PDM_FILTER_ENDIANNESS_BE;
 800398c:	2301      	movs	r3, #1
 800398e:	807b      	strh	r3, [r7, #2]
   			PDM1_filter_handler.high_pass_tap = 2122358088;
 8003990:	4b95      	ldr	r3, [pc, #596]	; (8003be8 <main+0x2e8>)
 8003992:	607b      	str	r3, [r7, #4]
   			PDM1_filter_handler.out_ptr_channels = 1;
 8003994:	2301      	movs	r3, #1
 8003996:	817b      	strh	r3, [r7, #10]
   			PDM1_filter_handler.in_ptr_channels = 1;
 8003998:	2301      	movs	r3, #1
 800399a:	813b      	strh	r3, [r7, #8]
   			PDM_Filter_Init((PDM_Filter_Handler_t *)(&PDM1_filter_handler));
 800399c:	463b      	mov	r3, r7
 800399e:	4618      	mov	r0, r3
 80039a0:	f7fc fc22 	bl	80001e8 <PDM_Filter_Init>

   			PDM1_filter_config.output_samples_number = 16;
 80039a4:	2310      	movs	r3, #16
 80039a6:	f8a7 3066 	strh.w	r3, [r7, #102]	; 0x66
   			PDM1_filter_config.mic_gain = 0;
 80039aa:	2300      	movs	r3, #0
 80039ac:	f8a7 3068 	strh.w	r3, [r7, #104]	; 0x68
   			PDM1_filter_config.decimation_factor = PDM_FILTER_DEC_FACTOR_48;
 80039b0:	2301      	movs	r3, #1
 80039b2:	f8a7 3064 	strh.w	r3, [r7, #100]	; 0x64
   			PDM_Filter_setConfig((PDM_Filter_Handler_t *)&PDM1_filter_handler, &PDM1_filter_config);
 80039b6:	f107 0264 	add.w	r2, r7, #100	; 0x64
 80039ba:	463b      	mov	r3, r7
 80039bc:	4611      	mov	r1, r2
 80039be:	4618      	mov	r0, r3
 80039c0:	f7fc fce6 	bl	8000390 <PDM_Filter_setConfig>

   			// Convert Pdm data to Pcm data
   			PDM_Filter(&buffer2_i2s2, &pcm_buffer, &PDM1_filter_handler);
 80039c4:	463b      	mov	r3, r7
 80039c6:	461a      	mov	r2, r3
 80039c8:	4988      	ldr	r1, [pc, #544]	; (8003bec <main+0x2ec>)
 80039ca:	4889      	ldr	r0, [pc, #548]	; (8003bf0 <main+0x2f0>)
 80039cc:	f7fc fde4 	bl	8000598 <PDM_Filter>
    	}

    	if(flag_mode2 == 1)					// Read gyroscope data & manage beeping
 80039d0:	4b88      	ldr	r3, [pc, #544]	; (8003bf4 <main+0x2f4>)
 80039d2:	681b      	ldr	r3, [r3, #0]
 80039d4:	2b01      	cmp	r3, #1
 80039d6:	d1be      	bne.n	8003956 <main+0x56>
    	{
    		// Accelerometer data transferred to r buffer
    		rbuf = (int8_t)spi_read(LIS302_REG_OUT_X);
 80039d8:	2029      	movs	r0, #41	; 0x29
 80039da:	f7ff fa0f 	bl	8002dfc <spi_read>
 80039de:	4603      	mov	r3, r0
 80039e0:	b25b      	sxtb	r3, r3
 80039e2:	b21a      	sxth	r2, r3
 80039e4:	4b84      	ldr	r3, [pc, #528]	; (8003bf8 <main+0x2f8>)
 80039e6:	801a      	strh	r2, [r3, #0]

    		if(rbuf > 8) {					// decrease bpm - right tilt
 80039e8:	4b83      	ldr	r3, [pc, #524]	; (8003bf8 <main+0x2f8>)
 80039ea:	881b      	ldrh	r3, [r3, #0]
 80039ec:	b21b      	sxth	r3, r3
 80039ee:	2b08      	cmp	r3, #8
 80039f0:	dd5d      	ble.n	8003aae <main+0x1ae>
    	        GPIOD->ODR &= (uint16_t)~0x1000;
 80039f2:	4b7a      	ldr	r3, [pc, #488]	; (8003bdc <main+0x2dc>)
 80039f4:	695a      	ldr	r2, [r3, #20]
 80039f6:	4979      	ldr	r1, [pc, #484]	; (8003bdc <main+0x2dc>)
 80039f8:	f64e 73ff 	movw	r3, #61439	; 0xefff
 80039fc:	4013      	ands	r3, r2
 80039fe:	614b      	str	r3, [r1, #20]
    	        GPIOD->ODR ^= 0x4000;		// toggle red led
 8003a00:	4b76      	ldr	r3, [pc, #472]	; (8003bdc <main+0x2dc>)
 8003a02:	695b      	ldr	r3, [r3, #20]
 8003a04:	4a75      	ldr	r2, [pc, #468]	; (8003bdc <main+0x2dc>)
 8003a06:	f483 4380 	eor.w	r3, r3, #16384	; 0x4000
 8003a0a:	6153      	str	r3, [r2, #20]

    	        // Transfer Accelerometer data to s from buffer
    	        s = rbuf;
 8003a0c:	4b7a      	ldr	r3, [pc, #488]	; (8003bf8 <main+0x2f8>)
 8003a0e:	881b      	ldrh	r3, [r3, #0]
 8003a10:	b21a      	sxth	r2, r3
 8003a12:	4b7a      	ldr	r3, [pc, #488]	; (8003bfc <main+0x2fc>)
 8003a14:	801a      	strh	r2, [r3, #0]

    	        //decreasing waiting time/increasing bpm
    	        // This function calculates bpm according to tilt
    	        int k = ((-(s)*(96428.57142857143))+(6771428.571428572));
 8003a16:	4b79      	ldr	r3, [pc, #484]	; (8003bfc <main+0x2fc>)
 8003a18:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003a1c:	425b      	negs	r3, r3
 8003a1e:	4618      	mov	r0, r3
 8003a20:	f7fe fb60 	bl	80020e4 <__aeabi_i2d>
 8003a24:	a364      	add	r3, pc, #400	; (adr r3, 8003bb8 <main+0x2b8>)
 8003a26:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003a2a:	f7fe fbc5 	bl	80021b8 <__aeabi_dmul>
 8003a2e:	4603      	mov	r3, r0
 8003a30:	460c      	mov	r4, r1
 8003a32:	4618      	mov	r0, r3
 8003a34:	4621      	mov	r1, r4
 8003a36:	a362      	add	r3, pc, #392	; (adr r3, 8003bc0 <main+0x2c0>)
 8003a38:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003a3c:	f7fe fa06 	bl	8001e4c <__adddf3>
 8003a40:	4603      	mov	r3, r0
 8003a42:	460c      	mov	r4, r1
 8003a44:	4618      	mov	r0, r3
 8003a46:	4621      	mov	r1, r4
 8003a48:	f7fe fdc8 	bl	80025dc <__aeabi_d2iz>
 8003a4c:	4603      	mov	r3, r0
 8003a4e:	66fb      	str	r3, [r7, #108]	; 0x6c

    	        // continuous beep mode
    	        i2c_write(CS43L22_REG_BEEP_TONE_CFG, 0xC0);
 8003a50:	21c0      	movs	r1, #192	; 0xc0
 8003a52:	201e      	movs	r0, #30
 8003a54:	f7ff fa10 	bl	8002e78 <i2c_write>

    	        // generate beep
    	        i2c_write(CS43L22_REG_BEEP_FREQ_ON_TIME, beep);
 8003a58:	f897 3077 	ldrb.w	r3, [r7, #119]	; 0x77
 8003a5c:	4619      	mov	r1, r3
 8003a5e:	201c      	movs	r0, #28
 8003a60:	f7ff fa0a 	bl	8002e78 <i2c_write>
    	        for (volatile int j=0; j<k; j++);	// 1sn = 2*6.000.000
 8003a64:	2300      	movs	r3, #0
 8003a66:	663b      	str	r3, [r7, #96]	; 0x60
 8003a68:	e002      	b.n	8003a70 <main+0x170>
 8003a6a:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8003a6c:	3301      	adds	r3, #1
 8003a6e:	663b      	str	r3, [r7, #96]	; 0x60
 8003a70:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8003a72:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8003a74:	429a      	cmp	r2, r3
 8003a76:	dcf8      	bgt.n	8003a6a <main+0x16a>

    	        GPIOD->ODR ^= 0x4000;		// toggle green led
 8003a78:	4b58      	ldr	r3, [pc, #352]	; (8003bdc <main+0x2dc>)
 8003a7a:	695b      	ldr	r3, [r3, #20]
 8003a7c:	4a57      	ldr	r2, [pc, #348]	; (8003bdc <main+0x2dc>)
 8003a7e:	f483 4380 	eor.w	r3, r3, #16384	; 0x4000
 8003a82:	6153      	str	r3, [r2, #20]

    	        // turn offthe beep(silence)
    	        i2c_write(CS43L22_REG_BEEP_TONE_CFG, 0x00);
 8003a84:	2100      	movs	r1, #0
 8003a86:	201e      	movs	r0, #30
 8003a88:	f7ff f9f6 	bl	8002e78 <i2c_write>
    	        for (volatile int j=0; j<k; j++);	// 1sn = 2*6.000.000
 8003a8c:	2300      	movs	r3, #0
 8003a8e:	65fb      	str	r3, [r7, #92]	; 0x5c
 8003a90:	e002      	b.n	8003a98 <main+0x198>
 8003a92:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8003a94:	3301      	adds	r3, #1
 8003a96:	65fb      	str	r3, [r7, #92]	; 0x5c
 8003a98:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8003a9a:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8003a9c:	429a      	cmp	r2, r3
 8003a9e:	dcf8      	bgt.n	8003a92 <main+0x192>

    	        flag_tilt = 1;				// Shows that system is used/tilted or not
 8003aa0:	4b57      	ldr	r3, [pc, #348]	; (8003c00 <main+0x300>)
 8003aa2:	2201      	movs	r2, #1
 8003aa4:	601a      	str	r2, [r3, #0]
    	        q = 0;						// Resets timer
 8003aa6:	4b57      	ldr	r3, [pc, #348]	; (8003c04 <main+0x304>)
 8003aa8:	2200      	movs	r2, #0
 8003aaa:	701a      	strb	r2, [r3, #0]
 8003aac:	e753      	b.n	8003956 <main+0x56>
    		}
    		else if (rbuf < -8 ) {			//increase bpm - left tilt
 8003aae:	4b52      	ldr	r3, [pc, #328]	; (8003bf8 <main+0x2f8>)
 8003ab0:	881b      	ldrh	r3, [r3, #0]
 8003ab2:	b21b      	sxth	r3, r3
 8003ab4:	f113 0f08 	cmn.w	r3, #8
 8003ab8:	da5d      	bge.n	8003b76 <main+0x276>
    	        GPIOD->ODR &= (uint16_t)~0x4000;
 8003aba:	4b48      	ldr	r3, [pc, #288]	; (8003bdc <main+0x2dc>)
 8003abc:	695a      	ldr	r2, [r3, #20]
 8003abe:	4947      	ldr	r1, [pc, #284]	; (8003bdc <main+0x2dc>)
 8003ac0:	f64b 73ff 	movw	r3, #49151	; 0xbfff
 8003ac4:	4013      	ands	r3, r2
 8003ac6:	614b      	str	r3, [r1, #20]
    	        GPIOD->ODR ^= 0x1000;		// toggle red led
 8003ac8:	4b44      	ldr	r3, [pc, #272]	; (8003bdc <main+0x2dc>)
 8003aca:	695b      	ldr	r3, [r3, #20]
 8003acc:	4a43      	ldr	r2, [pc, #268]	; (8003bdc <main+0x2dc>)
 8003ace:	f483 5380 	eor.w	r3, r3, #4096	; 0x1000
 8003ad2:	6153      	str	r3, [r2, #20]

    	        // Transfer Accelerometer data to s from buffer
    	        s = rbuf;
 8003ad4:	4b48      	ldr	r3, [pc, #288]	; (8003bf8 <main+0x2f8>)
 8003ad6:	881b      	ldrh	r3, [r3, #0]
 8003ad8:	b21a      	sxth	r2, r3
 8003ada:	4b48      	ldr	r3, [pc, #288]	; (8003bfc <main+0x2fc>)
 8003adc:	801a      	strh	r2, [r3, #0]

    	        //decreasing waiting time/increasing bpm
    	        // This function calculates bpm according to tilt
    	        int k = ((-(s)*(107142.85714285714))+(5142857.142857143));
 8003ade:	4b47      	ldr	r3, [pc, #284]	; (8003bfc <main+0x2fc>)
 8003ae0:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003ae4:	425b      	negs	r3, r3
 8003ae6:	4618      	mov	r0, r3
 8003ae8:	f7fe fafc 	bl	80020e4 <__aeabi_i2d>
 8003aec:	a336      	add	r3, pc, #216	; (adr r3, 8003bc8 <main+0x2c8>)
 8003aee:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003af2:	f7fe fb61 	bl	80021b8 <__aeabi_dmul>
 8003af6:	4603      	mov	r3, r0
 8003af8:	460c      	mov	r4, r1
 8003afa:	4618      	mov	r0, r3
 8003afc:	4621      	mov	r1, r4
 8003afe:	a334      	add	r3, pc, #208	; (adr r3, 8003bd0 <main+0x2d0>)
 8003b00:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003b04:	f7fe f9a2 	bl	8001e4c <__adddf3>
 8003b08:	4603      	mov	r3, r0
 8003b0a:	460c      	mov	r4, r1
 8003b0c:	4618      	mov	r0, r3
 8003b0e:	4621      	mov	r1, r4
 8003b10:	f7fe fd64 	bl	80025dc <__aeabi_d2iz>
 8003b14:	4603      	mov	r3, r0
 8003b16:	673b      	str	r3, [r7, #112]	; 0x70

    	        // continuous beep mode
    	        i2c_write(CS43L22_REG_BEEP_TONE_CFG, 0xC0);
 8003b18:	21c0      	movs	r1, #192	; 0xc0
 8003b1a:	201e      	movs	r0, #30
 8003b1c:	f7ff f9ac 	bl	8002e78 <i2c_write>

    	        // generate beep
    	        i2c_write(CS43L22_REG_BEEP_FREQ_ON_TIME, beep);
 8003b20:	f897 3077 	ldrb.w	r3, [r7, #119]	; 0x77
 8003b24:	4619      	mov	r1, r3
 8003b26:	201c      	movs	r0, #28
 8003b28:	f7ff f9a6 	bl	8002e78 <i2c_write>
    	        for (volatile int j=0; j<k; j++);	// 1sn = 2*6.000.000
 8003b2c:	2300      	movs	r3, #0
 8003b2e:	65bb      	str	r3, [r7, #88]	; 0x58
 8003b30:	e002      	b.n	8003b38 <main+0x238>
 8003b32:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8003b34:	3301      	adds	r3, #1
 8003b36:	65bb      	str	r3, [r7, #88]	; 0x58
 8003b38:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8003b3a:	6f3a      	ldr	r2, [r7, #112]	; 0x70
 8003b3c:	429a      	cmp	r2, r3
 8003b3e:	dcf8      	bgt.n	8003b32 <main+0x232>

    	        GPIOD->ODR ^= 0x1000;		// toggle red led
 8003b40:	4b26      	ldr	r3, [pc, #152]	; (8003bdc <main+0x2dc>)
 8003b42:	695b      	ldr	r3, [r3, #20]
 8003b44:	4a25      	ldr	r2, [pc, #148]	; (8003bdc <main+0x2dc>)
 8003b46:	f483 5380 	eor.w	r3, r3, #4096	; 0x1000
 8003b4a:	6153      	str	r3, [r2, #20]

    	        // generate beep
    	        i2c_write(CS43L22_REG_BEEP_TONE_CFG, 0x00);
 8003b4c:	2100      	movs	r1, #0
 8003b4e:	201e      	movs	r0, #30
 8003b50:	f7ff f992 	bl	8002e78 <i2c_write>
    	        for (volatile int j=0; j<k; j++);	// 1sn = 2*6.000.000
 8003b54:	2300      	movs	r3, #0
 8003b56:	657b      	str	r3, [r7, #84]	; 0x54
 8003b58:	e002      	b.n	8003b60 <main+0x260>
 8003b5a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8003b5c:	3301      	adds	r3, #1
 8003b5e:	657b      	str	r3, [r7, #84]	; 0x54
 8003b60:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8003b62:	6f3a      	ldr	r2, [r7, #112]	; 0x70
 8003b64:	429a      	cmp	r2, r3
 8003b66:	dcf8      	bgt.n	8003b5a <main+0x25a>

    	        flag_tilt = 1;				// Shows that system is used/tilted or not
 8003b68:	4b25      	ldr	r3, [pc, #148]	; (8003c00 <main+0x300>)
 8003b6a:	2201      	movs	r2, #1
 8003b6c:	601a      	str	r2, [r3, #0]
    	        q = 0;						// Resets timer
 8003b6e:	4b25      	ldr	r3, [pc, #148]	; (8003c04 <main+0x304>)
 8003b70:	2200      	movs	r2, #0
 8003b72:	701a      	strb	r2, [r3, #0]
 8003b74:	e6ef      	b.n	8003956 <main+0x56>
    		}
    		else {
    			GPIOD->ODR &= (uint16_t)~0x0000;
 8003b76:	4b19      	ldr	r3, [pc, #100]	; (8003bdc <main+0x2dc>)
 8003b78:	695b      	ldr	r3, [r3, #20]
 8003b7a:	4a18      	ldr	r2, [pc, #96]	; (8003bdc <main+0x2dc>)
 8003b7c:	b29b      	uxth	r3, r3
 8003b7e:	6153      	str	r3, [r2, #20]

    			// continuous beep mode
    			i2c_write(CS43L22_REG_BEEP_TONE_CFG, 0xC0);
 8003b80:	21c0      	movs	r1, #192	; 0xc0
 8003b82:	201e      	movs	r0, #30
 8003b84:	f7ff f978 	bl	8002e78 <i2c_write>

    			// generate beep
    			i2c_write(CS43L22_REG_BEEP_FREQ_ON_TIME, beep);
 8003b88:	f897 3077 	ldrb.w	r3, [r7, #119]	; 0x77
 8003b8c:	4619      	mov	r1, r3
 8003b8e:	201c      	movs	r0, #28
 8003b90:	f7ff f972 	bl	8002e78 <i2c_write>
    			for (volatile int j=0; j<6000000; j++);		// 1sn = 2*6.000.000
 8003b94:	2300      	movs	r3, #0
 8003b96:	653b      	str	r3, [r7, #80]	; 0x50
 8003b98:	e002      	b.n	8003ba0 <main+0x2a0>
 8003b9a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003b9c:	3301      	adds	r3, #1
 8003b9e:	653b      	str	r3, [r7, #80]	; 0x50
 8003ba0:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003ba2:	4a19      	ldr	r2, [pc, #100]	; (8003c08 <main+0x308>)
 8003ba4:	4293      	cmp	r3, r2
 8003ba6:	ddf8      	ble.n	8003b9a <main+0x29a>

    			// turn offthe beep(silence)
    			i2c_write(CS43L22_REG_BEEP_TONE_CFG, 0x00);
 8003ba8:	2100      	movs	r1, #0
 8003baa:	201e      	movs	r0, #30
 8003bac:	f7ff f964 	bl	8002e78 <i2c_write>
    			for (volatile int j=0; j<6000000; j++);		// 1sn = 2*6.000.000
 8003bb0:	2300      	movs	r3, #0
 8003bb2:	64fb      	str	r3, [r7, #76]	; 0x4c
 8003bb4:	e02d      	b.n	8003c12 <main+0x312>
 8003bb6:	bf00      	nop
 8003bb8:	24924925 	.word	0x24924925
 8003bbc:	40f78ac9 	.word	0x40f78ac9
 8003bc0:	24924925 	.word	0x24924925
 8003bc4:	4159d4b9 	.word	0x4159d4b9
 8003bc8:	b6db6db7 	.word	0xb6db6db7
 8003bcc:	40fa286d 	.word	0x40fa286d
 8003bd0:	49249249 	.word	0x49249249
 8003bd4:	41539e52 	.word	0x41539e52
 8003bd8:	40023800 	.word	0x40023800
 8003bdc:	40020c00 	.word	0x40020c00
 8003be0:	20000498 	.word	0x20000498
 8003be4:	40023000 	.word	0x40023000
 8003be8:	7e809d48 	.word	0x7e809d48
 8003bec:	20000518 	.word	0x20000518
 8003bf0:	2000051c 	.word	0x2000051c
 8003bf4:	2000049c 	.word	0x2000049c
 8003bf8:	200004b0 	.word	0x200004b0
 8003bfc:	200004a0 	.word	0x200004a0
 8003c00:	200004a4 	.word	0x200004a4
 8003c04:	20000490 	.word	0x20000490
 8003c08:	005b8d7f 	.word	0x005b8d7f
 8003c0c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8003c0e:	3301      	adds	r3, #1
 8003c10:	64fb      	str	r3, [r7, #76]	; 0x4c
 8003c12:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8003c14:	4a03      	ldr	r2, [pc, #12]	; (8003c24 <main+0x324>)
 8003c16:	4293      	cmp	r3, r2
 8003c18:	ddf8      	ble.n	8003c0c <main+0x30c>

    			flag_tilt = 0;				// Shows that system is used/tilted or not
 8003c1a:	4b03      	ldr	r3, [pc, #12]	; (8003c28 <main+0x328>)
 8003c1c:	2200      	movs	r2, #0
 8003c1e:	601a      	str	r2, [r3, #0]
    	if(flag_pdm == 1)				// PDM to PCM converter
 8003c20:	e699      	b.n	8003956 <main+0x56>
 8003c22:	bf00      	nop
 8003c24:	005b8d7f 	.word	0x005b8d7f
 8003c28:	200004a4 	.word	0x200004a4

08003c2c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8003c2c:	480d      	ldr	r0, [pc, #52]	; (8003c64 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8003c2e:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8003c30:	480d      	ldr	r0, [pc, #52]	; (8003c68 <LoopForever+0x6>)
  ldr r1, =_edata
 8003c32:	490e      	ldr	r1, [pc, #56]	; (8003c6c <LoopForever+0xa>)
  ldr r2, =_sidata
 8003c34:	4a0e      	ldr	r2, [pc, #56]	; (8003c70 <LoopForever+0xe>)
  movs r3, #0
 8003c36:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8003c38:	e002      	b.n	8003c40 <LoopCopyDataInit>

08003c3a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8003c3a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8003c3c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8003c3e:	3304      	adds	r3, #4

08003c40 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8003c40:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8003c42:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8003c44:	d3f9      	bcc.n	8003c3a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8003c46:	4a0b      	ldr	r2, [pc, #44]	; (8003c74 <LoopForever+0x12>)
  ldr r4, =_ebss
 8003c48:	4c0b      	ldr	r4, [pc, #44]	; (8003c78 <LoopForever+0x16>)
  movs r3, #0
 8003c4a:	2300      	movs	r3, #0
  b LoopFillZerobss
 8003c4c:	e001      	b.n	8003c52 <LoopFillZerobss>

08003c4e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8003c4e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8003c50:	3204      	adds	r2, #4

08003c52 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8003c52:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8003c54:	d3fb      	bcc.n	8003c4e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8003c56:	f000 f813 	bl	8003c80 <SystemInit>
/* Call static constructors */
  bl __libc_init_array
 8003c5a:	f000 f8a7 	bl	8003dac <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8003c5e:	f7ff fe4f 	bl	8003900 <main>

08003c62 <LoopForever>:

LoopForever:
    b LoopForever
 8003c62:	e7fe      	b.n	8003c62 <LoopForever>
  ldr   r0, =_estack
 8003c64:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8003c68:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8003c6c:	20000474 	.word	0x20000474
  ldr r2, =_sidata
 8003c70:	08004a00 	.word	0x08004a00
  ldr r2, =_sbss
 8003c74:	20000474 	.word	0x20000474
  ldr r4, =_ebss
 8003c78:	2000057c 	.word	0x2000057c

08003c7c <ADC_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8003c7c:	e7fe      	b.n	8003c7c <ADC_IRQHandler>
	...

08003c80 <SystemInit>:

/*************************************************
* reset clock to HSI
*************************************************/
void SystemInit(void)
{
 8003c80:	b480      	push	{r7}
 8003c82:	af00      	add	r7, sp, #0
	SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
	#endif

	/* Reset the RCC clock configuration to the default reset state */
	/* Set HSION bit */
	RCC->CR |= (1U << 0);
 8003c84:	4b10      	ldr	r3, [pc, #64]	; (8003cc8 <SystemInit+0x48>)
 8003c86:	681b      	ldr	r3, [r3, #0]
 8003c88:	4a0f      	ldr	r2, [pc, #60]	; (8003cc8 <SystemInit+0x48>)
 8003c8a:	f043 0301 	orr.w	r3, r3, #1
 8003c8e:	6013      	str	r3, [r2, #0]

	/* Reset CFGR register */
	RCC->CFGR = 0x00000000;
 8003c90:	4b0d      	ldr	r3, [pc, #52]	; (8003cc8 <SystemInit+0x48>)
 8003c92:	2200      	movs	r2, #0
 8003c94:	609a      	str	r2, [r3, #8]

	/* Reset HSEON (16), CSSON (19) and PLLON (24) bits */
	RCC->CR &= ~((1U << 16) | (1U << 19) | (1U << 24));
 8003c96:	4b0c      	ldr	r3, [pc, #48]	; (8003cc8 <SystemInit+0x48>)
 8003c98:	681b      	ldr	r3, [r3, #0]
 8003c9a:	4a0b      	ldr	r2, [pc, #44]	; (8003cc8 <SystemInit+0x48>)
 8003c9c:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8003ca0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8003ca4:	6013      	str	r3, [r2, #0]

	/* Reset PLLCFGR register to reset value */
	RCC->PLLCFGR = 0x24003010UL;
 8003ca6:	4b08      	ldr	r3, [pc, #32]	; (8003cc8 <SystemInit+0x48>)
 8003ca8:	4a08      	ldr	r2, [pc, #32]	; (8003ccc <SystemInit+0x4c>)
 8003caa:	605a      	str	r2, [r3, #4]

	/* Reset HSEBYP bit */
	RCC->CR &= ~(1U << 18);
 8003cac:	4b06      	ldr	r3, [pc, #24]	; (8003cc8 <SystemInit+0x48>)
 8003cae:	681b      	ldr	r3, [r3, #0]
 8003cb0:	4a05      	ldr	r2, [pc, #20]	; (8003cc8 <SystemInit+0x48>)
 8003cb2:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8003cb6:	6013      	str	r3, [r2, #0]

	/* Disable all clock interrupts */
	RCC->CIR = 0x00000000UL;
 8003cb8:	4b03      	ldr	r3, [pc, #12]	; (8003cc8 <SystemInit+0x48>)
 8003cba:	2200      	movs	r2, #0
 8003cbc:	60da      	str	r2, [r3, #12]
}
 8003cbe:	bf00      	nop
 8003cc0:	46bd      	mov	sp, r7
 8003cc2:	bc80      	pop	{r7}
 8003cc4:	4770      	bx	lr
 8003cc6:	bf00      	nop
 8003cc8:	40023800 	.word	0x40023800
 8003ccc:	24003010 	.word	0x24003010

08003cd0 <set_sysclk_to_168>:
/*************************************************
* configure system clock to 168 Mhz
* this is only tested on stm32f4 discovery board
*************************************************/
void set_sysclk_to_168(void)
{
 8003cd0:	b480      	push	{r7}
 8003cd2:	af00      	add	r7, sp, #0
	/* Enable HSE (CR: bit 16) */
	RCC->CR |= (1U << 16);
 8003cd4:	4b2b      	ldr	r3, [pc, #172]	; (8003d84 <set_sysclk_to_168+0xb4>)
 8003cd6:	681b      	ldr	r3, [r3, #0]
 8003cd8:	4a2a      	ldr	r2, [pc, #168]	; (8003d84 <set_sysclk_to_168+0xb4>)
 8003cda:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8003cde:	6013      	str	r3, [r2, #0]
	/* Wait till HSE is ready (CR: bit 17) */
	while(!(RCC->CR & (1 << 17)));
 8003ce0:	bf00      	nop
 8003ce2:	4b28      	ldr	r3, [pc, #160]	; (8003d84 <set_sysclk_to_168+0xb4>)
 8003ce4:	681b      	ldr	r3, [r3, #0]
 8003ce6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003cea:	2b00      	cmp	r3, #0
 8003cec:	d0f9      	beq.n	8003ce2 <set_sysclk_to_168+0x12>

	/* Enable power interface clock (APB1ENR:bit 28) */
	RCC->APB1ENR |= (1 << 28);
 8003cee:	4b25      	ldr	r3, [pc, #148]	; (8003d84 <set_sysclk_to_168+0xb4>)
 8003cf0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003cf2:	4a24      	ldr	r2, [pc, #144]	; (8003d84 <set_sysclk_to_168+0xb4>)
 8003cf4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8003cf8:	6413      	str	r3, [r2, #64]	; 0x40

	/* set voltage scale to 1 for max frequency (PWR_CR:bit 14)
	 * (0b0) scale 2 for fCLK <= 144 Mhz
	 * (0b1) scale 1 for 144 Mhz < fCLK <= 168 Mhz
	 */
	PWR->CR |= (1 << 14);
 8003cfa:	4b23      	ldr	r3, [pc, #140]	; (8003d88 <set_sysclk_to_168+0xb8>)
 8003cfc:	681b      	ldr	r3, [r3, #0]
 8003cfe:	4a22      	ldr	r2, [pc, #136]	; (8003d88 <set_sysclk_to_168+0xb8>)
 8003d00:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8003d04:	6013      	str	r3, [r2, #0]

	/* set AHB prescaler to /1 (CFGR:bits 7:4) */
	RCC->CFGR |= (0 << 4);
 8003d06:	4b1f      	ldr	r3, [pc, #124]	; (8003d84 <set_sysclk_to_168+0xb4>)
 8003d08:	4a1e      	ldr	r2, [pc, #120]	; (8003d84 <set_sysclk_to_168+0xb4>)
 8003d0a:	689b      	ldr	r3, [r3, #8]
 8003d0c:	6093      	str	r3, [r2, #8]
	/* set APB low speed prescaler to /4 (APB1) (CFGR:bits 12:10) */
	RCC->CFGR |= (5 << 10);
 8003d0e:	4b1d      	ldr	r3, [pc, #116]	; (8003d84 <set_sysclk_to_168+0xb4>)
 8003d10:	689b      	ldr	r3, [r3, #8]
 8003d12:	4a1c      	ldr	r2, [pc, #112]	; (8003d84 <set_sysclk_to_168+0xb4>)
 8003d14:	f443 53a0 	orr.w	r3, r3, #5120	; 0x1400
 8003d18:	6093      	str	r3, [r2, #8]
	/* set APB high speed prescaler to /2 (APB2) (CFGR:bits 15:13) */
	RCC->CFGR |= (4 << 13);
 8003d1a:	4b1a      	ldr	r3, [pc, #104]	; (8003d84 <set_sysclk_to_168+0xb4>)
 8003d1c:	689b      	ldr	r3, [r3, #8]
 8003d1e:	4a19      	ldr	r2, [pc, #100]	; (8003d84 <set_sysclk_to_168+0xb4>)
 8003d20:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8003d24:	6093      	str	r3, [r2, #8]

	/* Set M, N, P and Q PLL dividers
	 * PLLCFGR: bits 5:0 (M), 14:6 (N), 17:16 (P), 27:24 (Q)
	 * Set PLL source to HSE, PLLCFGR: bit 22, 1:HSE, 0:HSI
	 */
	RCC->PLLCFGR = PLL_M | (PLL_N << 6) | (((PLL_P >> 1) -1) << 16) |
 8003d26:	4b17      	ldr	r3, [pc, #92]	; (8003d84 <set_sysclk_to_168+0xb4>)
 8003d28:	4a18      	ldr	r2, [pc, #96]	; (8003d8c <set_sysclk_to_168+0xbc>)
 8003d2a:	605a      	str	r2, [r3, #4]
	               (PLL_Q << 24) | (1 << 22);
	/* Enable the main PLL (CR: bit 24) */
	RCC->CR |= (1 << 24);
 8003d2c:	4b15      	ldr	r3, [pc, #84]	; (8003d84 <set_sysclk_to_168+0xb4>)
 8003d2e:	681b      	ldr	r3, [r3, #0]
 8003d30:	4a14      	ldr	r2, [pc, #80]	; (8003d84 <set_sysclk_to_168+0xb4>)
 8003d32:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8003d36:	6013      	str	r3, [r2, #0]
	/* Wait till the main PLL is ready (CR: bit 25) */
	while(!(RCC->CR & (1 << 25)));
 8003d38:	bf00      	nop
 8003d3a:	4b12      	ldr	r3, [pc, #72]	; (8003d84 <set_sysclk_to_168+0xb4>)
 8003d3c:	681b      	ldr	r3, [r3, #0]
 8003d3e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003d42:	2b00      	cmp	r3, #0
 8003d44:	d0f9      	beq.n	8003d3a <set_sysclk_to_168+0x6a>
	 * instruction cache enable (ACR:bit 9)
	 * data cache enable (ACR:bit 10)
	 * set latency to 5 wait states (ARC:bits 2:0)
	 *   see Table 10 on page 80 in RM0090
	 */
	FLASH->ACR = (1 << 8) | (1 << 9) | (1 << 10 ) | (5 << 0);
 8003d46:	4b12      	ldr	r3, [pc, #72]	; (8003d90 <set_sysclk_to_168+0xc0>)
 8003d48:	f240 7205 	movw	r2, #1797	; 0x705
 8003d4c:	601a      	str	r2, [r3, #0]
	/* Select the main PLL as system clock source, (CFGR:bits 1:0)
	 * 0b00 - HSI
	 * 0b01 - HSE
	 * 0b10 - PLL
	 */
	RCC->CFGR &= ~(3U << 0);
 8003d4e:	4b0d      	ldr	r3, [pc, #52]	; (8003d84 <set_sysclk_to_168+0xb4>)
 8003d50:	689b      	ldr	r3, [r3, #8]
 8003d52:	4a0c      	ldr	r2, [pc, #48]	; (8003d84 <set_sysclk_to_168+0xb4>)
 8003d54:	f023 0303 	bic.w	r3, r3, #3
 8003d58:	6093      	str	r3, [r2, #8]
	RCC->CFGR |= (2 << 0);
 8003d5a:	4b0a      	ldr	r3, [pc, #40]	; (8003d84 <set_sysclk_to_168+0xb4>)
 8003d5c:	689b      	ldr	r3, [r3, #8]
 8003d5e:	4a09      	ldr	r2, [pc, #36]	; (8003d84 <set_sysclk_to_168+0xb4>)
 8003d60:	f043 0302 	orr.w	r3, r3, #2
 8003d64:	6093      	str	r3, [r2, #8]
	/* Wait till the main PLL is used as system clock source (CFGR:bits 3:2) */
	while (!(RCC->CFGR & (2U << 2)));
 8003d66:	bf00      	nop
 8003d68:	4b06      	ldr	r3, [pc, #24]	; (8003d84 <set_sysclk_to_168+0xb4>)
 8003d6a:	689b      	ldr	r3, [r3, #8]
 8003d6c:	f003 0308 	and.w	r3, r3, #8
 8003d70:	2b00      	cmp	r3, #0
 8003d72:	d0f9      	beq.n	8003d68 <set_sysclk_to_168+0x98>

	// update SystemCoreClock variable
	SystemCoreClock = 168000000;
 8003d74:	4b07      	ldr	r3, [pc, #28]	; (8003d94 <set_sysclk_to_168+0xc4>)
 8003d76:	4a08      	ldr	r2, [pc, #32]	; (8003d98 <set_sysclk_to_168+0xc8>)
 8003d78:	601a      	str	r2, [r3, #0]
}
 8003d7a:	bf00      	nop
 8003d7c:	46bd      	mov	sp, r7
 8003d7e:	bc80      	pop	{r7}
 8003d80:	4770      	bx	lr
 8003d82:	bf00      	nop
 8003d84:	40023800 	.word	0x40023800
 8003d88:	40007000 	.word	0x40007000
 8003d8c:	07405408 	.word	0x07405408
 8003d90:	40023c00 	.word	0x40023c00
 8003d94:	20000408 	.word	0x20000408
 8003d98:	0a037a00 	.word	0x0a037a00

08003d9c <__aeabi_memclr>:
 8003d9c:	2200      	movs	r2, #0
 8003d9e:	f000 b800 	b.w	8003da2 <__aeabi_memset>

08003da2 <__aeabi_memset>:
 8003da2:	4613      	mov	r3, r2
 8003da4:	460a      	mov	r2, r1
 8003da6:	4619      	mov	r1, r3
 8003da8:	f000 b824 	b.w	8003df4 <memset>

08003dac <__libc_init_array>:
 8003dac:	b570      	push	{r4, r5, r6, lr}
 8003dae:	4e0d      	ldr	r6, [pc, #52]	; (8003de4 <__libc_init_array+0x38>)
 8003db0:	4c0d      	ldr	r4, [pc, #52]	; (8003de8 <__libc_init_array+0x3c>)
 8003db2:	1ba4      	subs	r4, r4, r6
 8003db4:	10a4      	asrs	r4, r4, #2
 8003db6:	2500      	movs	r5, #0
 8003db8:	42a5      	cmp	r5, r4
 8003dba:	d109      	bne.n	8003dd0 <__libc_init_array+0x24>
 8003dbc:	4e0b      	ldr	r6, [pc, #44]	; (8003dec <__libc_init_array+0x40>)
 8003dbe:	4c0c      	ldr	r4, [pc, #48]	; (8003df0 <__libc_init_array+0x44>)
 8003dc0:	f000 fdfa 	bl	80049b8 <_init>
 8003dc4:	1ba4      	subs	r4, r4, r6
 8003dc6:	10a4      	asrs	r4, r4, #2
 8003dc8:	2500      	movs	r5, #0
 8003dca:	42a5      	cmp	r5, r4
 8003dcc:	d105      	bne.n	8003dda <__libc_init_array+0x2e>
 8003dce:	bd70      	pop	{r4, r5, r6, pc}
 8003dd0:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8003dd4:	4798      	blx	r3
 8003dd6:	3501      	adds	r5, #1
 8003dd8:	e7ee      	b.n	8003db8 <__libc_init_array+0xc>
 8003dda:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8003dde:	4798      	blx	r3
 8003de0:	3501      	adds	r5, #1
 8003de2:	e7f2      	b.n	8003dca <__libc_init_array+0x1e>
 8003de4:	080049f8 	.word	0x080049f8
 8003de8:	080049f8 	.word	0x080049f8
 8003dec:	080049f8 	.word	0x080049f8
 8003df0:	080049fc 	.word	0x080049fc

08003df4 <memset>:
 8003df4:	4402      	add	r2, r0
 8003df6:	4603      	mov	r3, r0
 8003df8:	4293      	cmp	r3, r2
 8003dfa:	d100      	bne.n	8003dfe <memset+0xa>
 8003dfc:	4770      	bx	lr
 8003dfe:	f803 1b01 	strb.w	r1, [r3], #1
 8003e02:	e7f9      	b.n	8003df8 <memset+0x4>

08003e04 <roundf>:
 8003e04:	f3c0 53c7 	ubfx	r3, r0, #23, #8
 8003e08:	3b7f      	subs	r3, #127	; 0x7f
 8003e0a:	2b16      	cmp	r3, #22
 8003e0c:	b510      	push	{r4, lr}
 8003e0e:	4601      	mov	r1, r0
 8003e10:	dc14      	bgt.n	8003e3c <roundf+0x38>
 8003e12:	2b00      	cmp	r3, #0
 8003e14:	da07      	bge.n	8003e26 <roundf+0x22>
 8003e16:	3301      	adds	r3, #1
 8003e18:	f000 4100 	and.w	r1, r0, #2147483648	; 0x80000000
 8003e1c:	d101      	bne.n	8003e22 <roundf+0x1e>
 8003e1e:	f041 517e 	orr.w	r1, r1, #1065353216	; 0x3f800000
 8003e22:	4608      	mov	r0, r1
 8003e24:	bd10      	pop	{r4, pc}
 8003e26:	4a08      	ldr	r2, [pc, #32]	; (8003e48 <roundf+0x44>)
 8003e28:	411a      	asrs	r2, r3
 8003e2a:	4210      	tst	r0, r2
 8003e2c:	d0f9      	beq.n	8003e22 <roundf+0x1e>
 8003e2e:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8003e32:	4119      	asrs	r1, r3
 8003e34:	4401      	add	r1, r0
 8003e36:	ea21 0102 	bic.w	r1, r1, r2
 8003e3a:	e7f2      	b.n	8003e22 <roundf+0x1e>
 8003e3c:	2b80      	cmp	r3, #128	; 0x80
 8003e3e:	d1f0      	bne.n	8003e22 <roundf+0x1e>
 8003e40:	f7fe fc4a 	bl	80026d8 <__addsf3>
 8003e44:	4601      	mov	r1, r0
 8003e46:	e7ec      	b.n	8003e22 <roundf+0x1e>
 8003e48:	007fffff 	.word	0x007fffff

08003e4c <powf>:
 8003e4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003e50:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 8004108 <powf+0x2bc>
 8003e54:	b08d      	sub	sp, #52	; 0x34
 8003e56:	4605      	mov	r5, r0
 8003e58:	460c      	mov	r4, r1
 8003e5a:	f000 f957 	bl	800410c <__ieee754_powf>
 8003e5e:	f998 9000 	ldrsb.w	r9, [r8]
 8003e62:	f1b9 3fff 	cmp.w	r9, #4294967295
 8003e66:	4606      	mov	r6, r0
 8003e68:	4647      	mov	r7, r8
 8003e6a:	d060      	beq.n	8003f2e <powf+0xe2>
 8003e6c:	4621      	mov	r1, r4
 8003e6e:	4620      	mov	r0, r4
 8003e70:	f7fe ff00 	bl	8002c74 <__aeabi_fcmpun>
 8003e74:	4683      	mov	fp, r0
 8003e76:	2800      	cmp	r0, #0
 8003e78:	d159      	bne.n	8003f2e <powf+0xe2>
 8003e7a:	4629      	mov	r1, r5
 8003e7c:	4628      	mov	r0, r5
 8003e7e:	f7fe fef9 	bl	8002c74 <__aeabi_fcmpun>
 8003e82:	2100      	movs	r1, #0
 8003e84:	4682      	mov	sl, r0
 8003e86:	b300      	cbz	r0, 8003eca <powf+0x7e>
 8003e88:	4620      	mov	r0, r4
 8003e8a:	f7fe fec1 	bl	8002c10 <__aeabi_fcmpeq>
 8003e8e:	2800      	cmp	r0, #0
 8003e90:	d04d      	beq.n	8003f2e <powf+0xe2>
 8003e92:	2301      	movs	r3, #1
 8003e94:	9302      	str	r3, [sp, #8]
 8003e96:	4628      	mov	r0, r5
 8003e98:	4b95      	ldr	r3, [pc, #596]	; (80040f0 <powf+0x2a4>)
 8003e9a:	9303      	str	r3, [sp, #12]
 8003e9c:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8003ea0:	f7fe f932 	bl	8002108 <__aeabi_f2d>
 8003ea4:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8003ea8:	4620      	mov	r0, r4
 8003eaa:	f7fe f92d 	bl	8002108 <__aeabi_f2d>
 8003eae:	4b91      	ldr	r3, [pc, #580]	; (80040f4 <powf+0x2a8>)
 8003eb0:	2200      	movs	r2, #0
 8003eb2:	f1b9 0f02 	cmp.w	r9, #2
 8003eb6:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8003eba:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8003ebe:	d031      	beq.n	8003f24 <powf+0xd8>
 8003ec0:	a802      	add	r0, sp, #8
 8003ec2:	f000 fcbf 	bl	8004844 <matherr>
 8003ec6:	bb38      	cbnz	r0, 8003f18 <powf+0xcc>
 8003ec8:	e05d      	b.n	8003f86 <powf+0x13a>
 8003eca:	4628      	mov	r0, r5
 8003ecc:	f7fe fea0 	bl	8002c10 <__aeabi_fcmpeq>
 8003ed0:	2800      	cmp	r0, #0
 8003ed2:	d05d      	beq.n	8003f90 <powf+0x144>
 8003ed4:	2100      	movs	r1, #0
 8003ed6:	4620      	mov	r0, r4
 8003ed8:	f7fe fe9a 	bl	8002c10 <__aeabi_fcmpeq>
 8003edc:	4607      	mov	r7, r0
 8003ede:	2800      	cmp	r0, #0
 8003ee0:	d029      	beq.n	8003f36 <powf+0xea>
 8003ee2:	2301      	movs	r3, #1
 8003ee4:	9302      	str	r3, [sp, #8]
 8003ee6:	4628      	mov	r0, r5
 8003ee8:	4b81      	ldr	r3, [pc, #516]	; (80040f0 <powf+0x2a4>)
 8003eea:	9303      	str	r3, [sp, #12]
 8003eec:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8003ef0:	f7fe f90a 	bl	8002108 <__aeabi_f2d>
 8003ef4:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8003ef8:	4620      	mov	r0, r4
 8003efa:	f7fe f905 	bl	8002108 <__aeabi_f2d>
 8003efe:	2200      	movs	r2, #0
 8003f00:	2300      	movs	r3, #0
 8003f02:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8003f06:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8003f0a:	f1b9 0f00 	cmp.w	r9, #0
 8003f0e:	d0d7      	beq.n	8003ec0 <powf+0x74>
 8003f10:	4b78      	ldr	r3, [pc, #480]	; (80040f4 <powf+0x2a8>)
 8003f12:	2200      	movs	r2, #0
 8003f14:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8003f18:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003f1a:	b11b      	cbz	r3, 8003f24 <powf+0xd8>
 8003f1c:	f000 fd46 	bl	80049ac <__errno>
 8003f20:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003f22:	6003      	str	r3, [r0, #0]
 8003f24:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8003f28:	f7fe fb80 	bl	800262c <__aeabi_d2f>
 8003f2c:	4606      	mov	r6, r0
 8003f2e:	4630      	mov	r0, r6
 8003f30:	b00d      	add	sp, #52	; 0x34
 8003f32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003f36:	4620      	mov	r0, r4
 8003f38:	f000 fc89 	bl	800484e <finitef>
 8003f3c:	2800      	cmp	r0, #0
 8003f3e:	d0f6      	beq.n	8003f2e <powf+0xe2>
 8003f40:	2100      	movs	r1, #0
 8003f42:	4620      	mov	r0, r4
 8003f44:	f7fe fe6e 	bl	8002c24 <__aeabi_fcmplt>
 8003f48:	2800      	cmp	r0, #0
 8003f4a:	d0f0      	beq.n	8003f2e <powf+0xe2>
 8003f4c:	2301      	movs	r3, #1
 8003f4e:	9302      	str	r3, [sp, #8]
 8003f50:	4628      	mov	r0, r5
 8003f52:	4b67      	ldr	r3, [pc, #412]	; (80040f0 <powf+0x2a4>)
 8003f54:	9303      	str	r3, [sp, #12]
 8003f56:	970a      	str	r7, [sp, #40]	; 0x28
 8003f58:	f7fe f8d6 	bl	8002108 <__aeabi_f2d>
 8003f5c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8003f60:	4620      	mov	r0, r4
 8003f62:	f7fe f8d1 	bl	8002108 <__aeabi_f2d>
 8003f66:	f998 3000 	ldrsb.w	r3, [r8]
 8003f6a:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8003f6e:	b923      	cbnz	r3, 8003f7a <powf+0x12e>
 8003f70:	2200      	movs	r2, #0
 8003f72:	2300      	movs	r3, #0
 8003f74:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8003f78:	e7a2      	b.n	8003ec0 <powf+0x74>
 8003f7a:	495f      	ldr	r1, [pc, #380]	; (80040f8 <powf+0x2ac>)
 8003f7c:	2000      	movs	r0, #0
 8003f7e:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8003f82:	2b02      	cmp	r3, #2
 8003f84:	d19c      	bne.n	8003ec0 <powf+0x74>
 8003f86:	f000 fd11 	bl	80049ac <__errno>
 8003f8a:	2321      	movs	r3, #33	; 0x21
 8003f8c:	6003      	str	r3, [r0, #0]
 8003f8e:	e7c3      	b.n	8003f18 <powf+0xcc>
 8003f90:	4630      	mov	r0, r6
 8003f92:	f000 fc5c 	bl	800484e <finitef>
 8003f96:	4681      	mov	r9, r0
 8003f98:	2800      	cmp	r0, #0
 8003f9a:	d17b      	bne.n	8004094 <powf+0x248>
 8003f9c:	4628      	mov	r0, r5
 8003f9e:	f000 fc56 	bl	800484e <finitef>
 8003fa2:	2800      	cmp	r0, #0
 8003fa4:	d076      	beq.n	8004094 <powf+0x248>
 8003fa6:	4620      	mov	r0, r4
 8003fa8:	f000 fc51 	bl	800484e <finitef>
 8003fac:	2800      	cmp	r0, #0
 8003fae:	d071      	beq.n	8004094 <powf+0x248>
 8003fb0:	4628      	mov	r0, r5
 8003fb2:	f7fe f8a9 	bl	8002108 <__aeabi_f2d>
 8003fb6:	4682      	mov	sl, r0
 8003fb8:	4620      	mov	r0, r4
 8003fba:	468b      	mov	fp, r1
 8003fbc:	f7fe f8a4 	bl	8002108 <__aeabi_f2d>
 8003fc0:	4602      	mov	r2, r0
 8003fc2:	460b      	mov	r3, r1
 8003fc4:	4630      	mov	r0, r6
 8003fc6:	4631      	mov	r1, r6
 8003fc8:	e9cd 2300 	strd	r2, r3, [sp]
 8003fcc:	f7fe fe52 	bl	8002c74 <__aeabi_fcmpun>
 8003fd0:	f998 8000 	ldrsb.w	r8, [r8]
 8003fd4:	4946      	ldr	r1, [pc, #280]	; (80040f0 <powf+0x2a4>)
 8003fd6:	e9dd 2300 	ldrd	r2, r3, [sp]
 8003fda:	b1b0      	cbz	r0, 800400a <powf+0x1be>
 8003fdc:	2001      	movs	r0, #1
 8003fde:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003fe2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8003fe6:	e9cd ab04 	strd	sl, fp, [sp, #16]
 8003fea:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8003fee:	f1b8 0f00 	cmp.w	r8, #0
 8003ff2:	d0bd      	beq.n	8003f70 <powf+0x124>
 8003ff4:	2100      	movs	r1, #0
 8003ff6:	4608      	mov	r0, r1
 8003ff8:	f7fe fd2a 	bl	8002a50 <__aeabi_fdiv>
 8003ffc:	f7fe f884 	bl	8002108 <__aeabi_f2d>
 8004000:	f1b8 0f02 	cmp.w	r8, #2
 8004004:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8004008:	e7bc      	b.n	8003f84 <powf+0x138>
 800400a:	2603      	movs	r6, #3
 800400c:	e9cd 6102 	strd	r6, r1, [sp, #8]
 8004010:	900a      	str	r0, [sp, #40]	; 0x28
 8004012:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
 8004016:	4620      	mov	r0, r4
 8004018:	e9cd ab04 	strd	sl, fp, [sp, #16]
 800401c:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8004020:	f7fe fc62 	bl	80028e8 <__aeabi_fmul>
 8004024:	4604      	mov	r4, r0
 8004026:	f1b8 0f00 	cmp.w	r8, #0
 800402a:	d11e      	bne.n	800406a <powf+0x21e>
 800402c:	4b33      	ldr	r3, [pc, #204]	; (80040fc <powf+0x2b0>)
 800402e:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 8004032:	2100      	movs	r1, #0
 8004034:	4628      	mov	r0, r5
 8004036:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800403a:	f7fe fdf3 	bl	8002c24 <__aeabi_fcmplt>
 800403e:	2800      	cmp	r0, #0
 8004040:	d04e      	beq.n	80040e0 <powf+0x294>
 8004042:	4620      	mov	r0, r4
 8004044:	f000 fc10 	bl	8004868 <rintf>
 8004048:	4621      	mov	r1, r4
 800404a:	f7fe fde1 	bl	8002c10 <__aeabi_fcmpeq>
 800404e:	b920      	cbnz	r0, 800405a <powf+0x20e>
 8004050:	4b2b      	ldr	r3, [pc, #172]	; (8004100 <powf+0x2b4>)
 8004052:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 8004056:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800405a:	f997 3000 	ldrsb.w	r3, [r7]
 800405e:	2b02      	cmp	r3, #2
 8004060:	d13e      	bne.n	80040e0 <powf+0x294>
 8004062:	f000 fca3 	bl	80049ac <__errno>
 8004066:	2322      	movs	r3, #34	; 0x22
 8004068:	e790      	b.n	8003f8c <powf+0x140>
 800406a:	4b26      	ldr	r3, [pc, #152]	; (8004104 <powf+0x2b8>)
 800406c:	2200      	movs	r2, #0
 800406e:	2100      	movs	r1, #0
 8004070:	4628      	mov	r0, r5
 8004072:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8004076:	f7fe fdd5 	bl	8002c24 <__aeabi_fcmplt>
 800407a:	2800      	cmp	r0, #0
 800407c:	d0ed      	beq.n	800405a <powf+0x20e>
 800407e:	4620      	mov	r0, r4
 8004080:	f000 fbf2 	bl	8004868 <rintf>
 8004084:	4621      	mov	r1, r4
 8004086:	f7fe fdc3 	bl	8002c10 <__aeabi_fcmpeq>
 800408a:	2800      	cmp	r0, #0
 800408c:	d1e5      	bne.n	800405a <powf+0x20e>
 800408e:	2200      	movs	r2, #0
 8004090:	4b19      	ldr	r3, [pc, #100]	; (80040f8 <powf+0x2ac>)
 8004092:	e7e0      	b.n	8004056 <powf+0x20a>
 8004094:	2100      	movs	r1, #0
 8004096:	4630      	mov	r0, r6
 8004098:	f7fe fdba 	bl	8002c10 <__aeabi_fcmpeq>
 800409c:	2800      	cmp	r0, #0
 800409e:	f43f af46 	beq.w	8003f2e <powf+0xe2>
 80040a2:	4628      	mov	r0, r5
 80040a4:	f000 fbd3 	bl	800484e <finitef>
 80040a8:	2800      	cmp	r0, #0
 80040aa:	f43f af40 	beq.w	8003f2e <powf+0xe2>
 80040ae:	4620      	mov	r0, r4
 80040b0:	f000 fbcd 	bl	800484e <finitef>
 80040b4:	2800      	cmp	r0, #0
 80040b6:	f43f af3a 	beq.w	8003f2e <powf+0xe2>
 80040ba:	2304      	movs	r3, #4
 80040bc:	9302      	str	r3, [sp, #8]
 80040be:	4b0c      	ldr	r3, [pc, #48]	; (80040f0 <powf+0x2a4>)
 80040c0:	9303      	str	r3, [sp, #12]
 80040c2:	4628      	mov	r0, r5
 80040c4:	2300      	movs	r3, #0
 80040c6:	930a      	str	r3, [sp, #40]	; 0x28
 80040c8:	f7fe f81e 	bl	8002108 <__aeabi_f2d>
 80040cc:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80040d0:	4620      	mov	r0, r4
 80040d2:	f7fe f819 	bl	8002108 <__aeabi_f2d>
 80040d6:	2200      	movs	r2, #0
 80040d8:	e9cd 0106 	strd	r0, r1, [sp, #24]
 80040dc:	2300      	movs	r3, #0
 80040de:	e7ba      	b.n	8004056 <powf+0x20a>
 80040e0:	a802      	add	r0, sp, #8
 80040e2:	f000 fbaf 	bl	8004844 <matherr>
 80040e6:	2800      	cmp	r0, #0
 80040e8:	f47f af16 	bne.w	8003f18 <powf+0xcc>
 80040ec:	e7b9      	b.n	8004062 <powf+0x216>
 80040ee:	bf00      	nop
 80040f0:	080049d0 	.word	0x080049d0
 80040f4:	3ff00000 	.word	0x3ff00000
 80040f8:	fff00000 	.word	0xfff00000
 80040fc:	47efffff 	.word	0x47efffff
 8004100:	c7efffff 	.word	0xc7efffff
 8004104:	7ff00000 	.word	0x7ff00000
 8004108:	20000470 	.word	0x20000470

0800410c <__ieee754_powf>:
 800410c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004110:	b087      	sub	sp, #28
 8004112:	4681      	mov	r9, r0
 8004114:	9101      	str	r1, [sp, #4]
 8004116:	9c01      	ldr	r4, [sp, #4]
 8004118:	f034 4700 	bics.w	r7, r4, #2147483648	; 0x80000000
 800411c:	f000 8324 	beq.w	8004768 <__ieee754_powf+0x65c>
 8004120:	f020 4600 	bic.w	r6, r0, #2147483648	; 0x80000000
 8004124:	f1b6 4fff 	cmp.w	r6, #2139095040	; 0x7f800000
 8004128:	4680      	mov	r8, r0
 800412a:	dc06      	bgt.n	800413a <__ieee754_powf+0x2e>
 800412c:	f1b7 4fff 	cmp.w	r7, #2139095040	; 0x7f800000
 8004130:	dd09      	ble.n	8004146 <__ieee754_powf+0x3a>
 8004132:	f1b6 5f7e 	cmp.w	r6, #1065353216	; 0x3f800000
 8004136:	f000 8317 	beq.w	8004768 <__ieee754_powf+0x65c>
 800413a:	4885      	ldr	r0, [pc, #532]	; (8004350 <__ieee754_powf+0x244>)
 800413c:	b007      	add	sp, #28
 800413e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004142:	f000 bb8d 	b.w	8004860 <nanf>
 8004146:	2800      	cmp	r0, #0
 8004148:	da1d      	bge.n	8004186 <__ieee754_powf+0x7a>
 800414a:	f1b7 4f97 	cmp.w	r7, #1266679808	; 0x4b800000
 800414e:	da2b      	bge.n	80041a8 <__ieee754_powf+0x9c>
 8004150:	f1b7 5f7e 	cmp.w	r7, #1065353216	; 0x3f800000
 8004154:	db30      	blt.n	80041b8 <__ieee754_powf+0xac>
 8004156:	15fb      	asrs	r3, r7, #23
 8004158:	f1c3 0396 	rsb	r3, r3, #150	; 0x96
 800415c:	fa47 f503 	asr.w	r5, r7, r3
 8004160:	fa05 f303 	lsl.w	r3, r5, r3
 8004164:	42bb      	cmp	r3, r7
 8004166:	d127      	bne.n	80041b8 <__ieee754_powf+0xac>
 8004168:	f005 0501 	and.w	r5, r5, #1
 800416c:	f1c5 0502 	rsb	r5, r5, #2
 8004170:	f1b7 5f7e 	cmp.w	r7, #1065353216	; 0x3f800000
 8004174:	d122      	bne.n	80041bc <__ieee754_powf+0xb0>
 8004176:	2c00      	cmp	r4, #0
 8004178:	4649      	mov	r1, r9
 800417a:	da11      	bge.n	80041a0 <__ieee754_powf+0x94>
 800417c:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 8004180:	f7fe fc66 	bl	8002a50 <__aeabi_fdiv>
 8004184:	e021      	b.n	80041ca <__ieee754_powf+0xbe>
 8004186:	2500      	movs	r5, #0
 8004188:	f1b7 4fff 	cmp.w	r7, #2139095040	; 0x7f800000
 800418c:	d1f0      	bne.n	8004170 <__ieee754_powf+0x64>
 800418e:	f1b6 5f7e 	cmp.w	r6, #1065353216	; 0x3f800000
 8004192:	f000 82e9 	beq.w	8004768 <__ieee754_powf+0x65c>
 8004196:	dd09      	ble.n	80041ac <__ieee754_powf+0xa0>
 8004198:	2c00      	cmp	r4, #0
 800419a:	f280 82e8 	bge.w	800476e <__ieee754_powf+0x662>
 800419e:	2100      	movs	r1, #0
 80041a0:	4608      	mov	r0, r1
 80041a2:	b007      	add	sp, #28
 80041a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80041a8:	2502      	movs	r5, #2
 80041aa:	e7ed      	b.n	8004188 <__ieee754_powf+0x7c>
 80041ac:	2c00      	cmp	r4, #0
 80041ae:	daf6      	bge.n	800419e <__ieee754_powf+0x92>
 80041b0:	9b01      	ldr	r3, [sp, #4]
 80041b2:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 80041b6:	e7f3      	b.n	80041a0 <__ieee754_powf+0x94>
 80041b8:	2500      	movs	r5, #0
 80041ba:	e7d9      	b.n	8004170 <__ieee754_powf+0x64>
 80041bc:	f1b4 4f80 	cmp.w	r4, #1073741824	; 0x40000000
 80041c0:	d105      	bne.n	80041ce <__ieee754_powf+0xc2>
 80041c2:	4649      	mov	r1, r9
 80041c4:	4608      	mov	r0, r1
 80041c6:	f7fe fb8f 	bl	80028e8 <__aeabi_fmul>
 80041ca:	4601      	mov	r1, r0
 80041cc:	e7e8      	b.n	80041a0 <__ieee754_powf+0x94>
 80041ce:	f1b4 5f7c 	cmp.w	r4, #1056964608	; 0x3f000000
 80041d2:	4648      	mov	r0, r9
 80041d4:	d107      	bne.n	80041e6 <__ieee754_powf+0xda>
 80041d6:	f1b8 0f00 	cmp.w	r8, #0
 80041da:	db04      	blt.n	80041e6 <__ieee754_powf+0xda>
 80041dc:	b007      	add	sp, #28
 80041de:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80041e2:	f000 badf 	b.w	80047a4 <__ieee754_sqrtf>
 80041e6:	f000 fb2f 	bl	8004848 <fabsf>
 80041ea:	4601      	mov	r1, r0
 80041ec:	b126      	cbz	r6, 80041f8 <__ieee754_powf+0xec>
 80041ee:	f028 4340 	bic.w	r3, r8, #3221225472	; 0xc0000000
 80041f2:	f1b3 5f7e 	cmp.w	r3, #1065353216	; 0x3f800000
 80041f6:	d118      	bne.n	800422a <__ieee754_powf+0x11e>
 80041f8:	2c00      	cmp	r4, #0
 80041fa:	da04      	bge.n	8004206 <__ieee754_powf+0xfa>
 80041fc:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 8004200:	f7fe fc26 	bl	8002a50 <__aeabi_fdiv>
 8004204:	4601      	mov	r1, r0
 8004206:	f1b8 0f00 	cmp.w	r8, #0
 800420a:	dac9      	bge.n	80041a0 <__ieee754_powf+0x94>
 800420c:	f1a6 507e 	sub.w	r0, r6, #1065353216	; 0x3f800000
 8004210:	ea50 0305 	orrs.w	r3, r0, r5
 8004214:	d104      	bne.n	8004220 <__ieee754_powf+0x114>
 8004216:	4608      	mov	r0, r1
 8004218:	f7fe fa5c 	bl	80026d4 <__aeabi_fsub>
 800421c:	4601      	mov	r1, r0
 800421e:	e7af      	b.n	8004180 <__ieee754_powf+0x74>
 8004220:	2d01      	cmp	r5, #1
 8004222:	d1bd      	bne.n	80041a0 <__ieee754_powf+0x94>
 8004224:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8004228:	e7ba      	b.n	80041a0 <__ieee754_powf+0x94>
 800422a:	ea4f 78d8 	mov.w	r8, r8, lsr #31
 800422e:	f108 33ff 	add.w	r3, r8, #4294967295
 8004232:	9303      	str	r3, [sp, #12]
 8004234:	432b      	orrs	r3, r5
 8004236:	d101      	bne.n	800423c <__ieee754_powf+0x130>
 8004238:	4649      	mov	r1, r9
 800423a:	e7ec      	b.n	8004216 <__ieee754_powf+0x10a>
 800423c:	f1b7 4f9a 	cmp.w	r7, #1291845632	; 0x4d000000
 8004240:	f340 8098 	ble.w	8004374 <__ieee754_powf+0x268>
 8004244:	4b43      	ldr	r3, [pc, #268]	; (8004354 <__ieee754_powf+0x248>)
 8004246:	429e      	cmp	r6, r3
 8004248:	dc03      	bgt.n	8004252 <__ieee754_powf+0x146>
 800424a:	2c00      	cmp	r4, #0
 800424c:	daa7      	bge.n	800419e <__ieee754_powf+0x92>
 800424e:	4942      	ldr	r1, [pc, #264]	; (8004358 <__ieee754_powf+0x24c>)
 8004250:	e7b8      	b.n	80041c4 <__ieee754_powf+0xb8>
 8004252:	4b42      	ldr	r3, [pc, #264]	; (800435c <__ieee754_powf+0x250>)
 8004254:	429e      	cmp	r6, r3
 8004256:	dd02      	ble.n	800425e <__ieee754_powf+0x152>
 8004258:	2c00      	cmp	r4, #0
 800425a:	dcf8      	bgt.n	800424e <__ieee754_powf+0x142>
 800425c:	e79f      	b.n	800419e <__ieee754_powf+0x92>
 800425e:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 8004262:	f7fe fa37 	bl	80026d4 <__aeabi_fsub>
 8004266:	493e      	ldr	r1, [pc, #248]	; (8004360 <__ieee754_powf+0x254>)
 8004268:	4606      	mov	r6, r0
 800426a:	f7fe fb3d 	bl	80028e8 <__aeabi_fmul>
 800426e:	493d      	ldr	r1, [pc, #244]	; (8004364 <__ieee754_powf+0x258>)
 8004270:	4607      	mov	r7, r0
 8004272:	4630      	mov	r0, r6
 8004274:	f7fe fb38 	bl	80028e8 <__aeabi_fmul>
 8004278:	f04f 517a 	mov.w	r1, #1048576000	; 0x3e800000
 800427c:	4680      	mov	r8, r0
 800427e:	4630      	mov	r0, r6
 8004280:	f7fe fb32 	bl	80028e8 <__aeabi_fmul>
 8004284:	4601      	mov	r1, r0
 8004286:	4838      	ldr	r0, [pc, #224]	; (8004368 <__ieee754_powf+0x25c>)
 8004288:	f7fe fa24 	bl	80026d4 <__aeabi_fsub>
 800428c:	4631      	mov	r1, r6
 800428e:	f7fe fb2b 	bl	80028e8 <__aeabi_fmul>
 8004292:	4601      	mov	r1, r0
 8004294:	f04f 507c 	mov.w	r0, #1056964608	; 0x3f000000
 8004298:	f7fe fa1c 	bl	80026d4 <__aeabi_fsub>
 800429c:	4631      	mov	r1, r6
 800429e:	4681      	mov	r9, r0
 80042a0:	4630      	mov	r0, r6
 80042a2:	f7fe fb21 	bl	80028e8 <__aeabi_fmul>
 80042a6:	4601      	mov	r1, r0
 80042a8:	4648      	mov	r0, r9
 80042aa:	f7fe fb1d 	bl	80028e8 <__aeabi_fmul>
 80042ae:	492f      	ldr	r1, [pc, #188]	; (800436c <__ieee754_powf+0x260>)
 80042b0:	f7fe fb1a 	bl	80028e8 <__aeabi_fmul>
 80042b4:	4601      	mov	r1, r0
 80042b6:	4640      	mov	r0, r8
 80042b8:	f7fe fa0c 	bl	80026d4 <__aeabi_fsub>
 80042bc:	4601      	mov	r1, r0
 80042be:	4606      	mov	r6, r0
 80042c0:	4638      	mov	r0, r7
 80042c2:	f7fe fa09 	bl	80026d8 <__addsf3>
 80042c6:	f420 6a7f 	bic.w	sl, r0, #4080	; 0xff0
 80042ca:	f02a 0a0f 	bic.w	sl, sl, #15
 80042ce:	4639      	mov	r1, r7
 80042d0:	4650      	mov	r0, sl
 80042d2:	f7fe f9ff 	bl	80026d4 <__aeabi_fsub>
 80042d6:	4601      	mov	r1, r0
 80042d8:	4630      	mov	r0, r6
 80042da:	f7fe f9fb 	bl	80026d4 <__aeabi_fsub>
 80042de:	f424 647f 	bic.w	r4, r4, #4080	; 0xff0
 80042e2:	9b03      	ldr	r3, [sp, #12]
 80042e4:	3d01      	subs	r5, #1
 80042e6:	f024 040f 	bic.w	r4, r4, #15
 80042ea:	432b      	orrs	r3, r5
 80042ec:	4606      	mov	r6, r0
 80042ee:	4621      	mov	r1, r4
 80042f0:	9801      	ldr	r0, [sp, #4]
 80042f2:	bf0c      	ite	eq
 80042f4:	4d1e      	ldreq	r5, [pc, #120]	; (8004370 <__ieee754_powf+0x264>)
 80042f6:	f04f 557e 	movne.w	r5, #1065353216	; 0x3f800000
 80042fa:	f7fe f9eb 	bl	80026d4 <__aeabi_fsub>
 80042fe:	4651      	mov	r1, sl
 8004300:	f7fe faf2 	bl	80028e8 <__aeabi_fmul>
 8004304:	9901      	ldr	r1, [sp, #4]
 8004306:	4607      	mov	r7, r0
 8004308:	4630      	mov	r0, r6
 800430a:	f7fe faed 	bl	80028e8 <__aeabi_fmul>
 800430e:	4601      	mov	r1, r0
 8004310:	4638      	mov	r0, r7
 8004312:	f7fe f9e1 	bl	80026d8 <__addsf3>
 8004316:	4621      	mov	r1, r4
 8004318:	4606      	mov	r6, r0
 800431a:	4650      	mov	r0, sl
 800431c:	f7fe fae4 	bl	80028e8 <__aeabi_fmul>
 8004320:	4601      	mov	r1, r0
 8004322:	4607      	mov	r7, r0
 8004324:	4681      	mov	r9, r0
 8004326:	4630      	mov	r0, r6
 8004328:	f7fe f9d6 	bl	80026d8 <__addsf3>
 800432c:	2800      	cmp	r0, #0
 800432e:	4682      	mov	sl, r0
 8004330:	4680      	mov	r8, r0
 8004332:	f020 4400 	bic.w	r4, r0, #2147483648	; 0x80000000
 8004336:	f340 81fb 	ble.w	8004730 <__ieee754_powf+0x624>
 800433a:	f1b4 4f86 	cmp.w	r4, #1124073472	; 0x43000000
 800433e:	f340 8149 	ble.w	80045d4 <__ieee754_powf+0x4c8>
 8004342:	4905      	ldr	r1, [pc, #20]	; (8004358 <__ieee754_powf+0x24c>)
 8004344:	4628      	mov	r0, r5
 8004346:	f7fe facf 	bl	80028e8 <__aeabi_fmul>
 800434a:	4903      	ldr	r1, [pc, #12]	; (8004358 <__ieee754_powf+0x24c>)
 800434c:	e73b      	b.n	80041c6 <__ieee754_powf+0xba>
 800434e:	bf00      	nop
 8004350:	080049d4 	.word	0x080049d4
 8004354:	3f7ffff7 	.word	0x3f7ffff7
 8004358:	7149f2ca 	.word	0x7149f2ca
 800435c:	3f800007 	.word	0x3f800007
 8004360:	3fb8aa00 	.word	0x3fb8aa00
 8004364:	36eca570 	.word	0x36eca570
 8004368:	3eaaaaab 	.word	0x3eaaaaab
 800436c:	3fb8aa3b 	.word	0x3fb8aa3b
 8004370:	bf800000 	.word	0xbf800000
 8004374:	f5b6 0f00 	cmp.w	r6, #8388608	; 0x800000
 8004378:	f280 810a 	bge.w	8004590 <__ieee754_powf+0x484>
 800437c:	f04f 4197 	mov.w	r1, #1266679808	; 0x4b800000
 8004380:	f7fe fab2 	bl	80028e8 <__aeabi_fmul>
 8004384:	f06f 0217 	mvn.w	r2, #23
 8004388:	4606      	mov	r6, r0
 800438a:	15f3      	asrs	r3, r6, #23
 800438c:	3b7f      	subs	r3, #127	; 0x7f
 800438e:	441a      	add	r2, r3
 8004390:	4b81      	ldr	r3, [pc, #516]	; (8004598 <__ieee754_powf+0x48c>)
 8004392:	f3c6 0016 	ubfx	r0, r6, #0, #23
 8004396:	4298      	cmp	r0, r3
 8004398:	f040 567e 	orr.w	r6, r0, #1065353216	; 0x3f800000
 800439c:	dd06      	ble.n	80043ac <__ieee754_powf+0x2a0>
 800439e:	4b7f      	ldr	r3, [pc, #508]	; (800459c <__ieee754_powf+0x490>)
 80043a0:	4298      	cmp	r0, r3
 80043a2:	f340 80f7 	ble.w	8004594 <__ieee754_powf+0x488>
 80043a6:	3201      	adds	r2, #1
 80043a8:	f5a6 0600 	sub.w	r6, r6, #8388608	; 0x800000
 80043ac:	2700      	movs	r7, #0
 80043ae:	4b7c      	ldr	r3, [pc, #496]	; (80045a0 <__ieee754_powf+0x494>)
 80043b0:	9205      	str	r2, [sp, #20]
 80043b2:	f853 3027 	ldr.w	r3, [r3, r7, lsl #2]
 80043b6:	9302      	str	r3, [sp, #8]
 80043b8:	4619      	mov	r1, r3
 80043ba:	4630      	mov	r0, r6
 80043bc:	f7fe f98a 	bl	80026d4 <__aeabi_fsub>
 80043c0:	4631      	mov	r1, r6
 80043c2:	4683      	mov	fp, r0
 80043c4:	9802      	ldr	r0, [sp, #8]
 80043c6:	f7fe f987 	bl	80026d8 <__addsf3>
 80043ca:	4601      	mov	r1, r0
 80043cc:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 80043d0:	f7fe fb3e 	bl	8002a50 <__aeabi_fdiv>
 80043d4:	4601      	mov	r1, r0
 80043d6:	9004      	str	r0, [sp, #16]
 80043d8:	4658      	mov	r0, fp
 80043da:	f7fe fa85 	bl	80028e8 <__aeabi_fmul>
 80043de:	46b2      	mov	sl, r6
 80043e0:	1076      	asrs	r6, r6, #1
 80043e2:	f046 5600 	orr.w	r6, r6, #536870912	; 0x20000000
 80043e6:	f420 687f 	bic.w	r8, r0, #4080	; 0xff0
 80043ea:	f506 2680 	add.w	r6, r6, #262144	; 0x40000
 80043ee:	f028 080f 	bic.w	r8, r8, #15
 80043f2:	eb06 5647 	add.w	r6, r6, r7, lsl #21
 80043f6:	4681      	mov	r9, r0
 80043f8:	4631      	mov	r1, r6
 80043fa:	4640      	mov	r0, r8
 80043fc:	f7fe fa74 	bl	80028e8 <__aeabi_fmul>
 8004400:	4601      	mov	r1, r0
 8004402:	4658      	mov	r0, fp
 8004404:	f7fe f966 	bl	80026d4 <__aeabi_fsub>
 8004408:	9902      	ldr	r1, [sp, #8]
 800440a:	4683      	mov	fp, r0
 800440c:	4630      	mov	r0, r6
 800440e:	f7fe f961 	bl	80026d4 <__aeabi_fsub>
 8004412:	4601      	mov	r1, r0
 8004414:	4650      	mov	r0, sl
 8004416:	f7fe f95d 	bl	80026d4 <__aeabi_fsub>
 800441a:	4641      	mov	r1, r8
 800441c:	f7fe fa64 	bl	80028e8 <__aeabi_fmul>
 8004420:	4601      	mov	r1, r0
 8004422:	4658      	mov	r0, fp
 8004424:	f7fe f956 	bl	80026d4 <__aeabi_fsub>
 8004428:	9b04      	ldr	r3, [sp, #16]
 800442a:	4619      	mov	r1, r3
 800442c:	f7fe fa5c 	bl	80028e8 <__aeabi_fmul>
 8004430:	4649      	mov	r1, r9
 8004432:	4683      	mov	fp, r0
 8004434:	4648      	mov	r0, r9
 8004436:	f7fe fa57 	bl	80028e8 <__aeabi_fmul>
 800443a:	495a      	ldr	r1, [pc, #360]	; (80045a4 <__ieee754_powf+0x498>)
 800443c:	4606      	mov	r6, r0
 800443e:	f7fe fa53 	bl	80028e8 <__aeabi_fmul>
 8004442:	4959      	ldr	r1, [pc, #356]	; (80045a8 <__ieee754_powf+0x49c>)
 8004444:	f7fe f948 	bl	80026d8 <__addsf3>
 8004448:	4631      	mov	r1, r6
 800444a:	f7fe fa4d 	bl	80028e8 <__aeabi_fmul>
 800444e:	4957      	ldr	r1, [pc, #348]	; (80045ac <__ieee754_powf+0x4a0>)
 8004450:	f7fe f942 	bl	80026d8 <__addsf3>
 8004454:	4631      	mov	r1, r6
 8004456:	f7fe fa47 	bl	80028e8 <__aeabi_fmul>
 800445a:	4955      	ldr	r1, [pc, #340]	; (80045b0 <__ieee754_powf+0x4a4>)
 800445c:	f7fe f93c 	bl	80026d8 <__addsf3>
 8004460:	4631      	mov	r1, r6
 8004462:	f7fe fa41 	bl	80028e8 <__aeabi_fmul>
 8004466:	4953      	ldr	r1, [pc, #332]	; (80045b4 <__ieee754_powf+0x4a8>)
 8004468:	f7fe f936 	bl	80026d8 <__addsf3>
 800446c:	4631      	mov	r1, r6
 800446e:	f7fe fa3b 	bl	80028e8 <__aeabi_fmul>
 8004472:	4951      	ldr	r1, [pc, #324]	; (80045b8 <__ieee754_powf+0x4ac>)
 8004474:	f7fe f930 	bl	80026d8 <__addsf3>
 8004478:	4631      	mov	r1, r6
 800447a:	4682      	mov	sl, r0
 800447c:	4630      	mov	r0, r6
 800447e:	f7fe fa33 	bl	80028e8 <__aeabi_fmul>
 8004482:	4601      	mov	r1, r0
 8004484:	4650      	mov	r0, sl
 8004486:	f7fe fa2f 	bl	80028e8 <__aeabi_fmul>
 800448a:	4649      	mov	r1, r9
 800448c:	4606      	mov	r6, r0
 800448e:	4640      	mov	r0, r8
 8004490:	f7fe f922 	bl	80026d8 <__addsf3>
 8004494:	4659      	mov	r1, fp
 8004496:	f7fe fa27 	bl	80028e8 <__aeabi_fmul>
 800449a:	4631      	mov	r1, r6
 800449c:	f7fe f91c 	bl	80026d8 <__addsf3>
 80044a0:	4641      	mov	r1, r8
 80044a2:	4682      	mov	sl, r0
 80044a4:	4640      	mov	r0, r8
 80044a6:	f7fe fa1f 	bl	80028e8 <__aeabi_fmul>
 80044aa:	4944      	ldr	r1, [pc, #272]	; (80045bc <__ieee754_powf+0x4b0>)
 80044ac:	9002      	str	r0, [sp, #8]
 80044ae:	f7fe f913 	bl	80026d8 <__addsf3>
 80044b2:	4651      	mov	r1, sl
 80044b4:	f7fe f910 	bl	80026d8 <__addsf3>
 80044b8:	f420 667f 	bic.w	r6, r0, #4080	; 0xff0
 80044bc:	f026 060f 	bic.w	r6, r6, #15
 80044c0:	4631      	mov	r1, r6
 80044c2:	4640      	mov	r0, r8
 80044c4:	f7fe fa10 	bl	80028e8 <__aeabi_fmul>
 80044c8:	493c      	ldr	r1, [pc, #240]	; (80045bc <__ieee754_powf+0x4b0>)
 80044ca:	4680      	mov	r8, r0
 80044cc:	4630      	mov	r0, r6
 80044ce:	f7fe f901 	bl	80026d4 <__aeabi_fsub>
 80044d2:	9b02      	ldr	r3, [sp, #8]
 80044d4:	4619      	mov	r1, r3
 80044d6:	f7fe f8fd 	bl	80026d4 <__aeabi_fsub>
 80044da:	4601      	mov	r1, r0
 80044dc:	4650      	mov	r0, sl
 80044de:	f7fe f8f9 	bl	80026d4 <__aeabi_fsub>
 80044e2:	4649      	mov	r1, r9
 80044e4:	f7fe fa00 	bl	80028e8 <__aeabi_fmul>
 80044e8:	4659      	mov	r1, fp
 80044ea:	4681      	mov	r9, r0
 80044ec:	4630      	mov	r0, r6
 80044ee:	f7fe f9fb 	bl	80028e8 <__aeabi_fmul>
 80044f2:	4601      	mov	r1, r0
 80044f4:	4648      	mov	r0, r9
 80044f6:	f7fe f8ef 	bl	80026d8 <__addsf3>
 80044fa:	4682      	mov	sl, r0
 80044fc:	4601      	mov	r1, r0
 80044fe:	4640      	mov	r0, r8
 8004500:	f7fe f8ea 	bl	80026d8 <__addsf3>
 8004504:	f420 697f 	bic.w	r9, r0, #4080	; 0xff0
 8004508:	f029 090f 	bic.w	r9, r9, #15
 800450c:	492c      	ldr	r1, [pc, #176]	; (80045c0 <__ieee754_powf+0x4b4>)
 800450e:	4648      	mov	r0, r9
 8004510:	f7fe f9ea 	bl	80028e8 <__aeabi_fmul>
 8004514:	4641      	mov	r1, r8
 8004516:	4606      	mov	r6, r0
 8004518:	4648      	mov	r0, r9
 800451a:	f7fe f8db 	bl	80026d4 <__aeabi_fsub>
 800451e:	4601      	mov	r1, r0
 8004520:	4650      	mov	r0, sl
 8004522:	f7fe f8d7 	bl	80026d4 <__aeabi_fsub>
 8004526:	4927      	ldr	r1, [pc, #156]	; (80045c4 <__ieee754_powf+0x4b8>)
 8004528:	f7fe f9de 	bl	80028e8 <__aeabi_fmul>
 800452c:	4926      	ldr	r1, [pc, #152]	; (80045c8 <__ieee754_powf+0x4bc>)
 800452e:	4680      	mov	r8, r0
 8004530:	4648      	mov	r0, r9
 8004532:	f7fe f9d9 	bl	80028e8 <__aeabi_fmul>
 8004536:	4601      	mov	r1, r0
 8004538:	4640      	mov	r0, r8
 800453a:	f7fe f8cd 	bl	80026d8 <__addsf3>
 800453e:	4b23      	ldr	r3, [pc, #140]	; (80045cc <__ieee754_powf+0x4c0>)
 8004540:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
 8004544:	f7fe f8c8 	bl	80026d8 <__addsf3>
 8004548:	9a05      	ldr	r2, [sp, #20]
 800454a:	4680      	mov	r8, r0
 800454c:	4610      	mov	r0, r2
 800454e:	f7fe f977 	bl	8002840 <__aeabi_i2f>
 8004552:	4b1f      	ldr	r3, [pc, #124]	; (80045d0 <__ieee754_powf+0x4c4>)
 8004554:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8004558:	4681      	mov	r9, r0
 800455a:	4641      	mov	r1, r8
 800455c:	4630      	mov	r0, r6
 800455e:	f7fe f8bb 	bl	80026d8 <__addsf3>
 8004562:	4639      	mov	r1, r7
 8004564:	f7fe f8b8 	bl	80026d8 <__addsf3>
 8004568:	4649      	mov	r1, r9
 800456a:	f7fe f8b5 	bl	80026d8 <__addsf3>
 800456e:	f420 6a7f 	bic.w	sl, r0, #4080	; 0xff0
 8004572:	f02a 0a0f 	bic.w	sl, sl, #15
 8004576:	4649      	mov	r1, r9
 8004578:	4650      	mov	r0, sl
 800457a:	f7fe f8ab 	bl	80026d4 <__aeabi_fsub>
 800457e:	4639      	mov	r1, r7
 8004580:	f7fe f8a8 	bl	80026d4 <__aeabi_fsub>
 8004584:	4631      	mov	r1, r6
 8004586:	f7fe f8a5 	bl	80026d4 <__aeabi_fsub>
 800458a:	4601      	mov	r1, r0
 800458c:	4640      	mov	r0, r8
 800458e:	e6a4      	b.n	80042da <__ieee754_powf+0x1ce>
 8004590:	2200      	movs	r2, #0
 8004592:	e6fa      	b.n	800438a <__ieee754_powf+0x27e>
 8004594:	2701      	movs	r7, #1
 8004596:	e70a      	b.n	80043ae <__ieee754_powf+0x2a2>
 8004598:	001cc471 	.word	0x001cc471
 800459c:	005db3d6 	.word	0x005db3d6
 80045a0:	080049d8 	.word	0x080049d8
 80045a4:	3e53f142 	.word	0x3e53f142
 80045a8:	3e6c3255 	.word	0x3e6c3255
 80045ac:	3e8ba305 	.word	0x3e8ba305
 80045b0:	3eaaaaab 	.word	0x3eaaaaab
 80045b4:	3edb6db7 	.word	0x3edb6db7
 80045b8:	3f19999a 	.word	0x3f19999a
 80045bc:	40400000 	.word	0x40400000
 80045c0:	3f763800 	.word	0x3f763800
 80045c4:	3f76384f 	.word	0x3f76384f
 80045c8:	369dc3a0 	.word	0x369dc3a0
 80045cc:	080049e8 	.word	0x080049e8
 80045d0:	080049e0 	.word	0x080049e0
 80045d4:	f040 80c0 	bne.w	8004758 <__ieee754_powf+0x64c>
 80045d8:	4966      	ldr	r1, [pc, #408]	; (8004774 <__ieee754_powf+0x668>)
 80045da:	4630      	mov	r0, r6
 80045dc:	f7fe f87c 	bl	80026d8 <__addsf3>
 80045e0:	4639      	mov	r1, r7
 80045e2:	4681      	mov	r9, r0
 80045e4:	4650      	mov	r0, sl
 80045e6:	f7fe f875 	bl	80026d4 <__aeabi_fsub>
 80045ea:	4601      	mov	r1, r0
 80045ec:	4648      	mov	r0, r9
 80045ee:	f7fe fb37 	bl	8002c60 <__aeabi_fcmpgt>
 80045f2:	2800      	cmp	r0, #0
 80045f4:	f47f aea5 	bne.w	8004342 <__ieee754_powf+0x236>
 80045f8:	15e4      	asrs	r4, r4, #23
 80045fa:	3c7e      	subs	r4, #126	; 0x7e
 80045fc:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 8004600:	4123      	asrs	r3, r4
 8004602:	4443      	add	r3, r8
 8004604:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8004608:	495b      	ldr	r1, [pc, #364]	; (8004778 <__ieee754_powf+0x66c>)
 800460a:	3a7f      	subs	r2, #127	; 0x7f
 800460c:	f3c3 0416 	ubfx	r4, r3, #0, #23
 8004610:	4111      	asrs	r1, r2
 8004612:	f444 0400 	orr.w	r4, r4, #8388608	; 0x800000
 8004616:	f1c2 0217 	rsb	r2, r2, #23
 800461a:	4114      	asrs	r4, r2
 800461c:	f1b8 0f00 	cmp.w	r8, #0
 8004620:	ea23 0101 	bic.w	r1, r3, r1
 8004624:	4638      	mov	r0, r7
 8004626:	bfb8      	it	lt
 8004628:	4264      	neglt	r4, r4
 800462a:	f7fe f853 	bl	80026d4 <__aeabi_fsub>
 800462e:	4681      	mov	r9, r0
 8004630:	4631      	mov	r1, r6
 8004632:	4648      	mov	r0, r9
 8004634:	f7fe f850 	bl	80026d8 <__addsf3>
 8004638:	f420 677f 	bic.w	r7, r0, #4080	; 0xff0
 800463c:	f027 070f 	bic.w	r7, r7, #15
 8004640:	494e      	ldr	r1, [pc, #312]	; (800477c <__ieee754_powf+0x670>)
 8004642:	4638      	mov	r0, r7
 8004644:	f7fe f950 	bl	80028e8 <__aeabi_fmul>
 8004648:	4649      	mov	r1, r9
 800464a:	4680      	mov	r8, r0
 800464c:	4638      	mov	r0, r7
 800464e:	f7fe f841 	bl	80026d4 <__aeabi_fsub>
 8004652:	4601      	mov	r1, r0
 8004654:	4630      	mov	r0, r6
 8004656:	f7fe f83d 	bl	80026d4 <__aeabi_fsub>
 800465a:	4949      	ldr	r1, [pc, #292]	; (8004780 <__ieee754_powf+0x674>)
 800465c:	f7fe f944 	bl	80028e8 <__aeabi_fmul>
 8004660:	4948      	ldr	r1, [pc, #288]	; (8004784 <__ieee754_powf+0x678>)
 8004662:	4606      	mov	r6, r0
 8004664:	4638      	mov	r0, r7
 8004666:	f7fe f93f 	bl	80028e8 <__aeabi_fmul>
 800466a:	4601      	mov	r1, r0
 800466c:	4630      	mov	r0, r6
 800466e:	f7fe f833 	bl	80026d8 <__addsf3>
 8004672:	4607      	mov	r7, r0
 8004674:	4601      	mov	r1, r0
 8004676:	4640      	mov	r0, r8
 8004678:	f7fe f82e 	bl	80026d8 <__addsf3>
 800467c:	4641      	mov	r1, r8
 800467e:	4606      	mov	r6, r0
 8004680:	f7fe f828 	bl	80026d4 <__aeabi_fsub>
 8004684:	4601      	mov	r1, r0
 8004686:	4638      	mov	r0, r7
 8004688:	f7fe f824 	bl	80026d4 <__aeabi_fsub>
 800468c:	4631      	mov	r1, r6
 800468e:	4680      	mov	r8, r0
 8004690:	4630      	mov	r0, r6
 8004692:	f7fe f929 	bl	80028e8 <__aeabi_fmul>
 8004696:	493c      	ldr	r1, [pc, #240]	; (8004788 <__ieee754_powf+0x67c>)
 8004698:	4607      	mov	r7, r0
 800469a:	f7fe f925 	bl	80028e8 <__aeabi_fmul>
 800469e:	493b      	ldr	r1, [pc, #236]	; (800478c <__ieee754_powf+0x680>)
 80046a0:	f7fe f818 	bl	80026d4 <__aeabi_fsub>
 80046a4:	4639      	mov	r1, r7
 80046a6:	f7fe f91f 	bl	80028e8 <__aeabi_fmul>
 80046aa:	4939      	ldr	r1, [pc, #228]	; (8004790 <__ieee754_powf+0x684>)
 80046ac:	f7fe f814 	bl	80026d8 <__addsf3>
 80046b0:	4639      	mov	r1, r7
 80046b2:	f7fe f919 	bl	80028e8 <__aeabi_fmul>
 80046b6:	4937      	ldr	r1, [pc, #220]	; (8004794 <__ieee754_powf+0x688>)
 80046b8:	f7fe f80c 	bl	80026d4 <__aeabi_fsub>
 80046bc:	4639      	mov	r1, r7
 80046be:	f7fe f913 	bl	80028e8 <__aeabi_fmul>
 80046c2:	4935      	ldr	r1, [pc, #212]	; (8004798 <__ieee754_powf+0x68c>)
 80046c4:	f7fe f808 	bl	80026d8 <__addsf3>
 80046c8:	4639      	mov	r1, r7
 80046ca:	f7fe f90d 	bl	80028e8 <__aeabi_fmul>
 80046ce:	4601      	mov	r1, r0
 80046d0:	4630      	mov	r0, r6
 80046d2:	f7fd ffff 	bl	80026d4 <__aeabi_fsub>
 80046d6:	4607      	mov	r7, r0
 80046d8:	4601      	mov	r1, r0
 80046da:	4630      	mov	r0, r6
 80046dc:	f7fe f904 	bl	80028e8 <__aeabi_fmul>
 80046e0:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 80046e4:	4681      	mov	r9, r0
 80046e6:	4638      	mov	r0, r7
 80046e8:	f7fd fff4 	bl	80026d4 <__aeabi_fsub>
 80046ec:	4601      	mov	r1, r0
 80046ee:	4648      	mov	r0, r9
 80046f0:	f7fe f9ae 	bl	8002a50 <__aeabi_fdiv>
 80046f4:	4641      	mov	r1, r8
 80046f6:	4607      	mov	r7, r0
 80046f8:	4630      	mov	r0, r6
 80046fa:	f7fe f8f5 	bl	80028e8 <__aeabi_fmul>
 80046fe:	4641      	mov	r1, r8
 8004700:	f7fd ffea 	bl	80026d8 <__addsf3>
 8004704:	4601      	mov	r1, r0
 8004706:	4638      	mov	r0, r7
 8004708:	f7fd ffe4 	bl	80026d4 <__aeabi_fsub>
 800470c:	4631      	mov	r1, r6
 800470e:	f7fd ffe1 	bl	80026d4 <__aeabi_fsub>
 8004712:	4601      	mov	r1, r0
 8004714:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 8004718:	f7fd ffdc 	bl	80026d4 <__aeabi_fsub>
 800471c:	eb00 53c4 	add.w	r3, r0, r4, lsl #23
 8004720:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8004724:	da1e      	bge.n	8004764 <__ieee754_powf+0x658>
 8004726:	4621      	mov	r1, r4
 8004728:	f000 f8ee 	bl	8004908 <scalbnf>
 800472c:	4629      	mov	r1, r5
 800472e:	e54a      	b.n	80041c6 <__ieee754_powf+0xba>
 8004730:	4b1a      	ldr	r3, [pc, #104]	; (800479c <__ieee754_powf+0x690>)
 8004732:	429c      	cmp	r4, r3
 8004734:	dd05      	ble.n	8004742 <__ieee754_powf+0x636>
 8004736:	491a      	ldr	r1, [pc, #104]	; (80047a0 <__ieee754_powf+0x694>)
 8004738:	4628      	mov	r0, r5
 800473a:	f7fe f8d5 	bl	80028e8 <__aeabi_fmul>
 800473e:	4918      	ldr	r1, [pc, #96]	; (80047a0 <__ieee754_powf+0x694>)
 8004740:	e541      	b.n	80041c6 <__ieee754_powf+0xba>
 8004742:	d109      	bne.n	8004758 <__ieee754_powf+0x64c>
 8004744:	4639      	mov	r1, r7
 8004746:	f7fd ffc5 	bl	80026d4 <__aeabi_fsub>
 800474a:	4631      	mov	r1, r6
 800474c:	f7fe fa7e 	bl	8002c4c <__aeabi_fcmpge>
 8004750:	2800      	cmp	r0, #0
 8004752:	f43f af51 	beq.w	80045f8 <__ieee754_powf+0x4ec>
 8004756:	e7ee      	b.n	8004736 <__ieee754_powf+0x62a>
 8004758:	f1b4 5f7c 	cmp.w	r4, #1056964608	; 0x3f000000
 800475c:	f73f af4c 	bgt.w	80045f8 <__ieee754_powf+0x4ec>
 8004760:	2400      	movs	r4, #0
 8004762:	e765      	b.n	8004630 <__ieee754_powf+0x524>
 8004764:	4618      	mov	r0, r3
 8004766:	e7e1      	b.n	800472c <__ieee754_powf+0x620>
 8004768:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 800476c:	e518      	b.n	80041a0 <__ieee754_powf+0x94>
 800476e:	9901      	ldr	r1, [sp, #4]
 8004770:	e516      	b.n	80041a0 <__ieee754_powf+0x94>
 8004772:	bf00      	nop
 8004774:	3338aa3c 	.word	0x3338aa3c
 8004778:	007fffff 	.word	0x007fffff
 800477c:	3f317200 	.word	0x3f317200
 8004780:	3f317218 	.word	0x3f317218
 8004784:	35bfbe8c 	.word	0x35bfbe8c
 8004788:	3331bb4c 	.word	0x3331bb4c
 800478c:	35ddea0e 	.word	0x35ddea0e
 8004790:	388ab355 	.word	0x388ab355
 8004794:	3b360b61 	.word	0x3b360b61
 8004798:	3e2aaaab 	.word	0x3e2aaaab
 800479c:	43160000 	.word	0x43160000
 80047a0:	0da24260 	.word	0x0da24260

080047a4 <__ieee754_sqrtf>:
 80047a4:	f020 4200 	bic.w	r2, r0, #2147483648	; 0x80000000
 80047a8:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 80047ac:	b570      	push	{r4, r5, r6, lr}
 80047ae:	4603      	mov	r3, r0
 80047b0:	4604      	mov	r4, r0
 80047b2:	d309      	bcc.n	80047c8 <__ieee754_sqrtf+0x24>
 80047b4:	4601      	mov	r1, r0
 80047b6:	f7fe f897 	bl	80028e8 <__aeabi_fmul>
 80047ba:	4601      	mov	r1, r0
 80047bc:	4620      	mov	r0, r4
 80047be:	f7fd ff8b 	bl	80026d8 <__addsf3>
 80047c2:	4604      	mov	r4, r0
 80047c4:	4620      	mov	r0, r4
 80047c6:	bd70      	pop	{r4, r5, r6, pc}
 80047c8:	2a00      	cmp	r2, #0
 80047ca:	d0fb      	beq.n	80047c4 <__ieee754_sqrtf+0x20>
 80047cc:	2800      	cmp	r0, #0
 80047ce:	da06      	bge.n	80047de <__ieee754_sqrtf+0x3a>
 80047d0:	4601      	mov	r1, r0
 80047d2:	f7fd ff7f 	bl	80026d4 <__aeabi_fsub>
 80047d6:	4601      	mov	r1, r0
 80047d8:	f7fe f93a 	bl	8002a50 <__aeabi_fdiv>
 80047dc:	e7f1      	b.n	80047c2 <__ieee754_sqrtf+0x1e>
 80047de:	f5b2 0f00 	cmp.w	r2, #8388608	; 0x800000
 80047e2:	ea4f 54e0 	mov.w	r4, r0, asr #23
 80047e6:	d32b      	bcc.n	8004840 <__ieee754_sqrtf+0x9c>
 80047e8:	3c7f      	subs	r4, #127	; 0x7f
 80047ea:	f3c3 0316 	ubfx	r3, r3, #0, #23
 80047ee:	07e2      	lsls	r2, r4, #31
 80047f0:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80047f4:	bf48      	it	mi
 80047f6:	005b      	lslmi	r3, r3, #1
 80047f8:	2200      	movs	r2, #0
 80047fa:	1061      	asrs	r1, r4, #1
 80047fc:	005b      	lsls	r3, r3, #1
 80047fe:	2419      	movs	r4, #25
 8004800:	4616      	mov	r6, r2
 8004802:	f04f 7080 	mov.w	r0, #16777216	; 0x1000000
 8004806:	1835      	adds	r5, r6, r0
 8004808:	429d      	cmp	r5, r3
 800480a:	bfde      	ittt	le
 800480c:	182e      	addle	r6, r5, r0
 800480e:	1b5b      	suble	r3, r3, r5
 8004810:	1812      	addle	r2, r2, r0
 8004812:	3c01      	subs	r4, #1
 8004814:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8004818:	ea4f 0050 	mov.w	r0, r0, lsr #1
 800481c:	d1f3      	bne.n	8004806 <__ieee754_sqrtf+0x62>
 800481e:	b113      	cbz	r3, 8004826 <__ieee754_sqrtf+0x82>
 8004820:	3201      	adds	r2, #1
 8004822:	f022 0201 	bic.w	r2, r2, #1
 8004826:	1054      	asrs	r4, r2, #1
 8004828:	f104 547c 	add.w	r4, r4, #1056964608	; 0x3f000000
 800482c:	eb04 54c1 	add.w	r4, r4, r1, lsl #23
 8004830:	e7c8      	b.n	80047c4 <__ieee754_sqrtf+0x20>
 8004832:	005b      	lsls	r3, r3, #1
 8004834:	3201      	adds	r2, #1
 8004836:	0219      	lsls	r1, r3, #8
 8004838:	d5fb      	bpl.n	8004832 <__ieee754_sqrtf+0x8e>
 800483a:	3a01      	subs	r2, #1
 800483c:	1aa4      	subs	r4, r4, r2
 800483e:	e7d3      	b.n	80047e8 <__ieee754_sqrtf+0x44>
 8004840:	2200      	movs	r2, #0
 8004842:	e7f8      	b.n	8004836 <__ieee754_sqrtf+0x92>

08004844 <matherr>:
 8004844:	2000      	movs	r0, #0
 8004846:	4770      	bx	lr

08004848 <fabsf>:
 8004848:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 800484c:	4770      	bx	lr

0800484e <finitef>:
 800484e:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 8004852:	f1b0 4fff 	cmp.w	r0, #2139095040	; 0x7f800000
 8004856:	bfac      	ite	ge
 8004858:	2000      	movge	r0, #0
 800485a:	2001      	movlt	r0, #1
 800485c:	4770      	bx	lr
	...

08004860 <nanf>:
 8004860:	4800      	ldr	r0, [pc, #0]	; (8004864 <nanf+0x4>)
 8004862:	4770      	bx	lr
 8004864:	7fc00000 	.word	0x7fc00000

08004868 <rintf>:
 8004868:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800486a:	f020 4200 	bic.w	r2, r0, #2147483648	; 0x80000000
 800486e:	0dd5      	lsrs	r5, r2, #23
 8004870:	3d7f      	subs	r5, #127	; 0x7f
 8004872:	2d16      	cmp	r5, #22
 8004874:	4601      	mov	r1, r0
 8004876:	dc3b      	bgt.n	80048f0 <rintf+0x88>
 8004878:	b1e2      	cbz	r2, 80048b4 <rintf+0x4c>
 800487a:	2d00      	cmp	r5, #0
 800487c:	4602      	mov	r2, r0
 800487e:	ea4f 74d0 	mov.w	r4, r0, lsr #31
 8004882:	da1a      	bge.n	80048ba <rintf+0x52>
 8004884:	4a1e      	ldr	r2, [pc, #120]	; (8004900 <rintf+0x98>)
 8004886:	f3c0 0116 	ubfx	r1, r0, #0, #23
 800488a:	4249      	negs	r1, r1
 800488c:	f852 5024 	ldr.w	r5, [r2, r4, lsl #2]
 8004890:	0d03      	lsrs	r3, r0, #20
 8004892:	0a49      	lsrs	r1, r1, #9
 8004894:	051b      	lsls	r3, r3, #20
 8004896:	f401 0180 	and.w	r1, r1, #4194304	; 0x400000
 800489a:	4319      	orrs	r1, r3
 800489c:	4628      	mov	r0, r5
 800489e:	f7fd ff1b 	bl	80026d8 <__addsf3>
 80048a2:	9001      	str	r0, [sp, #4]
 80048a4:	4629      	mov	r1, r5
 80048a6:	9801      	ldr	r0, [sp, #4]
 80048a8:	f7fd ff14 	bl	80026d4 <__aeabi_fsub>
 80048ac:	f020 4100 	bic.w	r1, r0, #2147483648	; 0x80000000
 80048b0:	ea41 71c4 	orr.w	r1, r1, r4, lsl #31
 80048b4:	4608      	mov	r0, r1
 80048b6:	b003      	add	sp, #12
 80048b8:	bd30      	pop	{r4, r5, pc}
 80048ba:	4b12      	ldr	r3, [pc, #72]	; (8004904 <rintf+0x9c>)
 80048bc:	412b      	asrs	r3, r5
 80048be:	4218      	tst	r0, r3
 80048c0:	d0f8      	beq.n	80048b4 <rintf+0x4c>
 80048c2:	0859      	lsrs	r1, r3, #1
 80048c4:	4208      	tst	r0, r1
 80048c6:	d006      	beq.n	80048d6 <rintf+0x6e>
 80048c8:	ea20 0201 	bic.w	r2, r0, r1
 80048cc:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 80048d0:	fa41 f505 	asr.w	r5, r1, r5
 80048d4:	432a      	orrs	r2, r5
 80048d6:	4b0a      	ldr	r3, [pc, #40]	; (8004900 <rintf+0x98>)
 80048d8:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 80048dc:	4611      	mov	r1, r2
 80048de:	4620      	mov	r0, r4
 80048e0:	f7fd fefa 	bl	80026d8 <__addsf3>
 80048e4:	9001      	str	r0, [sp, #4]
 80048e6:	9801      	ldr	r0, [sp, #4]
 80048e8:	4621      	mov	r1, r4
 80048ea:	f7fd fef3 	bl	80026d4 <__aeabi_fsub>
 80048ee:	e004      	b.n	80048fa <rintf+0x92>
 80048f0:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 80048f4:	d3de      	bcc.n	80048b4 <rintf+0x4c>
 80048f6:	f7fd feef 	bl	80026d8 <__addsf3>
 80048fa:	4601      	mov	r1, r0
 80048fc:	e7da      	b.n	80048b4 <rintf+0x4c>
 80048fe:	bf00      	nop
 8004900:	080049f0 	.word	0x080049f0
 8004904:	007fffff 	.word	0x007fffff

08004908 <scalbnf>:
 8004908:	f030 4300 	bics.w	r3, r0, #2147483648	; 0x80000000
 800490c:	b510      	push	{r4, lr}
 800490e:	4602      	mov	r2, r0
 8004910:	460c      	mov	r4, r1
 8004912:	4601      	mov	r1, r0
 8004914:	d027      	beq.n	8004966 <scalbnf+0x5e>
 8004916:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 800491a:	d303      	bcc.n	8004924 <scalbnf+0x1c>
 800491c:	f7fd fedc 	bl	80026d8 <__addsf3>
 8004920:	4602      	mov	r2, r0
 8004922:	e020      	b.n	8004966 <scalbnf+0x5e>
 8004924:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8004928:	d215      	bcs.n	8004956 <scalbnf+0x4e>
 800492a:	f04f 4198 	mov.w	r1, #1275068416	; 0x4c000000
 800492e:	f7fd ffdb 	bl	80028e8 <__aeabi_fmul>
 8004932:	4b18      	ldr	r3, [pc, #96]	; (8004994 <scalbnf+0x8c>)
 8004934:	429c      	cmp	r4, r3
 8004936:	4602      	mov	r2, r0
 8004938:	db22      	blt.n	8004980 <scalbnf+0x78>
 800493a:	f3c0 53c7 	ubfx	r3, r0, #23, #8
 800493e:	3b19      	subs	r3, #25
 8004940:	4423      	add	r3, r4
 8004942:	2bfe      	cmp	r3, #254	; 0xfe
 8004944:	dd09      	ble.n	800495a <scalbnf+0x52>
 8004946:	4611      	mov	r1, r2
 8004948:	4813      	ldr	r0, [pc, #76]	; (8004998 <scalbnf+0x90>)
 800494a:	f000 f829 	bl	80049a0 <copysignf>
 800494e:	4912      	ldr	r1, [pc, #72]	; (8004998 <scalbnf+0x90>)
 8004950:	f7fd ffca 	bl	80028e8 <__aeabi_fmul>
 8004954:	e7e4      	b.n	8004920 <scalbnf+0x18>
 8004956:	0ddb      	lsrs	r3, r3, #23
 8004958:	e7f2      	b.n	8004940 <scalbnf+0x38>
 800495a:	2b00      	cmp	r3, #0
 800495c:	dd05      	ble.n	800496a <scalbnf+0x62>
 800495e:	f020 40ff 	bic.w	r0, r0, #2139095040	; 0x7f800000
 8004962:	ea40 52c3 	orr.w	r2, r0, r3, lsl #23
 8004966:	4610      	mov	r0, r2
 8004968:	bd10      	pop	{r4, pc}
 800496a:	f113 0f16 	cmn.w	r3, #22
 800496e:	da09      	bge.n	8004984 <scalbnf+0x7c>
 8004970:	f24c 3350 	movw	r3, #50000	; 0xc350
 8004974:	429c      	cmp	r4, r3
 8004976:	4611      	mov	r1, r2
 8004978:	dce6      	bgt.n	8004948 <scalbnf+0x40>
 800497a:	4808      	ldr	r0, [pc, #32]	; (800499c <scalbnf+0x94>)
 800497c:	f000 f810 	bl	80049a0 <copysignf>
 8004980:	4906      	ldr	r1, [pc, #24]	; (800499c <scalbnf+0x94>)
 8004982:	e7e5      	b.n	8004950 <scalbnf+0x48>
 8004984:	3319      	adds	r3, #25
 8004986:	f020 40ff 	bic.w	r0, r0, #2139095040	; 0x7f800000
 800498a:	f04f 514c 	mov.w	r1, #855638016	; 0x33000000
 800498e:	ea40 50c3 	orr.w	r0, r0, r3, lsl #23
 8004992:	e7dd      	b.n	8004950 <scalbnf+0x48>
 8004994:	ffff3cb0 	.word	0xffff3cb0
 8004998:	7149f2ca 	.word	0x7149f2ca
 800499c:	0da24260 	.word	0x0da24260

080049a0 <copysignf>:
 80049a0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80049a4:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 80049a8:	4308      	orrs	r0, r1
 80049aa:	4770      	bx	lr

080049ac <__errno>:
 80049ac:	4b01      	ldr	r3, [pc, #4]	; (80049b4 <__errno+0x8>)
 80049ae:	6818      	ldr	r0, [r3, #0]
 80049b0:	4770      	bx	lr
 80049b2:	bf00      	nop
 80049b4:	2000040c 	.word	0x2000040c

080049b8 <_init>:
 80049b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80049ba:	bf00      	nop
 80049bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80049be:	bc08      	pop	{r3}
 80049c0:	469e      	mov	lr, r3
 80049c2:	4770      	bx	lr

080049c4 <_fini>:
 80049c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80049c6:	bf00      	nop
 80049c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80049ca:	bc08      	pop	{r3}
 80049cc:	469e      	mov	lr, r3
 80049ce:	4770      	bx	lr
